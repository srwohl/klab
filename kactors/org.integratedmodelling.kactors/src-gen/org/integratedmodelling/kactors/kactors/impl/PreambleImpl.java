/**
 * generated by Xtext 2.19.0
 */
package org.integratedmodelling.kactors.kactors.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.integratedmodelling.kactors.kactors.Date;
import org.integratedmodelling.kactors.kactors.KactorsPackage;
import org.integratedmodelling.kactors.kactors.List;
import org.integratedmodelling.kactors.kactors.Preamble;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Preamble</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#isApp <em>App</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#isUser <em>User</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#isLibrary <em>Library</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#isBehavior <em>Behavior</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getImports <em>Imports</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getWorldview <em>Worldview</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getObservable <em>Observable</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getObservables <em>Observables</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getLabel <em>Label</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getPermissions <em>Permissions</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getAuthors <em>Authors</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getVersion <em>Version</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getCreated <em>Created</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getCreatecomment <em>Createcomment</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getModified <em>Modified</em>}</li>
 *   <li>{@link org.integratedmodelling.kactors.kactors.impl.PreambleImpl#getModcomment <em>Modcomment</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PreambleImpl extends MinimalEObjectImpl.Container implements Preamble
{
  /**
   * The default value of the '{@link #isApp() <em>App</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isApp()
   * @generated
   * @ordered
   */
  protected static final boolean APP_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isApp() <em>App</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isApp()
   * @generated
   * @ordered
   */
  protected boolean app = APP_EDEFAULT;

  /**
   * The default value of the '{@link #isUser() <em>User</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isUser()
   * @generated
   * @ordered
   */
  protected static final boolean USER_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isUser() <em>User</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isUser()
   * @generated
   * @ordered
   */
  protected boolean user = USER_EDEFAULT;

  /**
   * The default value of the '{@link #isLibrary() <em>Library</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLibrary()
   * @generated
   * @ordered
   */
  protected static final boolean LIBRARY_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isLibrary() <em>Library</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLibrary()
   * @generated
   * @ordered
   */
  protected boolean library = LIBRARY_EDEFAULT;

  /**
   * The default value of the '{@link #isBehavior() <em>Behavior</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBehavior()
   * @generated
   * @ordered
   */
  protected static final boolean BEHAVIOR_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isBehavior() <em>Behavior</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBehavior()
   * @generated
   * @ordered
   */
  protected boolean behavior = BEHAVIOR_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getImports() <em>Imports</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImports()
   * @generated
   * @ordered
   */
  protected EList<String> imports;

  /**
   * The default value of the '{@link #getWorldview() <em>Worldview</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWorldview()
   * @generated
   * @ordered
   */
  protected static final String WORLDVIEW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWorldview() <em>Worldview</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWorldview()
   * @generated
   * @ordered
   */
  protected String worldview = WORLDVIEW_EDEFAULT;

  /**
   * The default value of the '{@link #getObservable() <em>Observable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObservable()
   * @generated
   * @ordered
   */
  protected static final String OBSERVABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getObservable() <em>Observable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObservable()
   * @generated
   * @ordered
   */
  protected String observable = OBSERVABLE_EDEFAULT;

  /**
   * The cached value of the '{@link #getObservables() <em>Observables</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObservables()
   * @generated
   * @ordered
   */
  protected List observables;

  /**
   * The default value of the '{@link #getLabel() <em>Label</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabel()
   * @generated
   * @ordered
   */
  protected static final String LABEL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLabel() <em>Label</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabel()
   * @generated
   * @ordered
   */
  protected String label = LABEL_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The default value of the '{@link #getPermissions() <em>Permissions</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPermissions()
   * @generated
   * @ordered
   */
  protected static final String PERMISSIONS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPermissions() <em>Permissions</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPermissions()
   * @generated
   * @ordered
   */
  protected String permissions = PERMISSIONS_EDEFAULT;

  /**
   * The cached value of the '{@link #getAuthors() <em>Authors</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuthors()
   * @generated
   * @ordered
   */
  protected EList<String> authors;

  /**
   * The default value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected static final String VERSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected String version = VERSION_EDEFAULT;

  /**
   * The cached value of the '{@link #getCreated() <em>Created</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreated()
   * @generated
   * @ordered
   */
  protected Date created;

  /**
   * The default value of the '{@link #getCreatecomment() <em>Createcomment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreatecomment()
   * @generated
   * @ordered
   */
  protected static final String CREATECOMMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCreatecomment() <em>Createcomment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreatecomment()
   * @generated
   * @ordered
   */
  protected String createcomment = CREATECOMMENT_EDEFAULT;

  /**
   * The cached value of the '{@link #getModified() <em>Modified</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModified()
   * @generated
   * @ordered
   */
  protected Date modified;

  /**
   * The default value of the '{@link #getModcomment() <em>Modcomment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModcomment()
   * @generated
   * @ordered
   */
  protected static final String MODCOMMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getModcomment() <em>Modcomment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModcomment()
   * @generated
   * @ordered
   */
  protected String modcomment = MODCOMMENT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PreambleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KactorsPackage.Literals.PREAMBLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isApp()
  {
    return app;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setApp(boolean newApp)
  {
    boolean oldApp = app;
    app = newApp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__APP, oldApp, app));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isUser()
  {
    return user;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUser(boolean newUser)
  {
    boolean oldUser = user;
    user = newUser;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__USER, oldUser, user));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isLibrary()
  {
    return library;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLibrary(boolean newLibrary)
  {
    boolean oldLibrary = library;
    library = newLibrary;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__LIBRARY, oldLibrary, library));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isBehavior()
  {
    return behavior;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBehavior(boolean newBehavior)
  {
    boolean oldBehavior = behavior;
    behavior = newBehavior;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__BEHAVIOR, oldBehavior, behavior));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getImports()
  {
    if (imports == null)
    {
      imports = new EDataTypeEList<String>(String.class, this, KactorsPackage.PREAMBLE__IMPORTS);
    }
    return imports;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getWorldview()
  {
    return worldview;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWorldview(String newWorldview)
  {
    String oldWorldview = worldview;
    worldview = newWorldview;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__WORLDVIEW, oldWorldview, worldview));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getObservable()
  {
    return observable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObservable(String newObservable)
  {
    String oldObservable = observable;
    observable = newObservable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__OBSERVABLE, oldObservable, observable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public List getObservables()
  {
    return observables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetObservables(List newObservables, NotificationChain msgs)
  {
    List oldObservables = observables;
    observables = newObservables;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__OBSERVABLES, oldObservables, newObservables);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObservables(List newObservables)
  {
    if (newObservables != observables)
    {
      NotificationChain msgs = null;
      if (observables != null)
        msgs = ((InternalEObject)observables).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.PREAMBLE__OBSERVABLES, null, msgs);
      if (newObservables != null)
        msgs = ((InternalEObject)newObservables).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.PREAMBLE__OBSERVABLES, null, msgs);
      msgs = basicSetObservables(newObservables, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__OBSERVABLES, newObservables, newObservables));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLabel()
  {
    return label;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLabel(String newLabel)
  {
    String oldLabel = label;
    label = newLabel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__LABEL, oldLabel, label));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPermissions()
  {
    return permissions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPermissions(String newPermissions)
  {
    String oldPermissions = permissions;
    permissions = newPermissions;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__PERMISSIONS, oldPermissions, permissions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getAuthors()
  {
    if (authors == null)
    {
      authors = new EDataTypeEList<String>(String.class, this, KactorsPackage.PREAMBLE__AUTHORS);
    }
    return authors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVersion()
  {
    return version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVersion(String newVersion)
  {
    String oldVersion = version;
    version = newVersion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__VERSION, oldVersion, version));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Date getCreated()
  {
    return created;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCreated(Date newCreated, NotificationChain msgs)
  {
    Date oldCreated = created;
    created = newCreated;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__CREATED, oldCreated, newCreated);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCreated(Date newCreated)
  {
    if (newCreated != created)
    {
      NotificationChain msgs = null;
      if (created != null)
        msgs = ((InternalEObject)created).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.PREAMBLE__CREATED, null, msgs);
      if (newCreated != null)
        msgs = ((InternalEObject)newCreated).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.PREAMBLE__CREATED, null, msgs);
      msgs = basicSetCreated(newCreated, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__CREATED, newCreated, newCreated));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCreatecomment()
  {
    return createcomment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCreatecomment(String newCreatecomment)
  {
    String oldCreatecomment = createcomment;
    createcomment = newCreatecomment;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__CREATECOMMENT, oldCreatecomment, createcomment));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Date getModified()
  {
    return modified;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetModified(Date newModified, NotificationChain msgs)
  {
    Date oldModified = modified;
    modified = newModified;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__MODIFIED, oldModified, newModified);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setModified(Date newModified)
  {
    if (newModified != modified)
    {
      NotificationChain msgs = null;
      if (modified != null)
        msgs = ((InternalEObject)modified).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.PREAMBLE__MODIFIED, null, msgs);
      if (newModified != null)
        msgs = ((InternalEObject)newModified).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KactorsPackage.PREAMBLE__MODIFIED, null, msgs);
      msgs = basicSetModified(newModified, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__MODIFIED, newModified, newModified));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getModcomment()
  {
    return modcomment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setModcomment(String newModcomment)
  {
    String oldModcomment = modcomment;
    modcomment = newModcomment;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KactorsPackage.PREAMBLE__MODCOMMENT, oldModcomment, modcomment));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case KactorsPackage.PREAMBLE__OBSERVABLES:
        return basicSetObservables(null, msgs);
      case KactorsPackage.PREAMBLE__CREATED:
        return basicSetCreated(null, msgs);
      case KactorsPackage.PREAMBLE__MODIFIED:
        return basicSetModified(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KactorsPackage.PREAMBLE__APP:
        return isApp();
      case KactorsPackage.PREAMBLE__USER:
        return isUser();
      case KactorsPackage.PREAMBLE__LIBRARY:
        return isLibrary();
      case KactorsPackage.PREAMBLE__BEHAVIOR:
        return isBehavior();
      case KactorsPackage.PREAMBLE__NAME:
        return getName();
      case KactorsPackage.PREAMBLE__IMPORTS:
        return getImports();
      case KactorsPackage.PREAMBLE__WORLDVIEW:
        return getWorldview();
      case KactorsPackage.PREAMBLE__OBSERVABLE:
        return getObservable();
      case KactorsPackage.PREAMBLE__OBSERVABLES:
        return getObservables();
      case KactorsPackage.PREAMBLE__LABEL:
        return getLabel();
      case KactorsPackage.PREAMBLE__DESCRIPTION:
        return getDescription();
      case KactorsPackage.PREAMBLE__PERMISSIONS:
        return getPermissions();
      case KactorsPackage.PREAMBLE__AUTHORS:
        return getAuthors();
      case KactorsPackage.PREAMBLE__VERSION:
        return getVersion();
      case KactorsPackage.PREAMBLE__CREATED:
        return getCreated();
      case KactorsPackage.PREAMBLE__CREATECOMMENT:
        return getCreatecomment();
      case KactorsPackage.PREAMBLE__MODIFIED:
        return getModified();
      case KactorsPackage.PREAMBLE__MODCOMMENT:
        return getModcomment();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KactorsPackage.PREAMBLE__APP:
        setApp((Boolean)newValue);
        return;
      case KactorsPackage.PREAMBLE__USER:
        setUser((Boolean)newValue);
        return;
      case KactorsPackage.PREAMBLE__LIBRARY:
        setLibrary((Boolean)newValue);
        return;
      case KactorsPackage.PREAMBLE__BEHAVIOR:
        setBehavior((Boolean)newValue);
        return;
      case KactorsPackage.PREAMBLE__NAME:
        setName((String)newValue);
        return;
      case KactorsPackage.PREAMBLE__IMPORTS:
        getImports().clear();
        getImports().addAll((Collection<? extends String>)newValue);
        return;
      case KactorsPackage.PREAMBLE__WORLDVIEW:
        setWorldview((String)newValue);
        return;
      case KactorsPackage.PREAMBLE__OBSERVABLE:
        setObservable((String)newValue);
        return;
      case KactorsPackage.PREAMBLE__OBSERVABLES:
        setObservables((List)newValue);
        return;
      case KactorsPackage.PREAMBLE__LABEL:
        setLabel((String)newValue);
        return;
      case KactorsPackage.PREAMBLE__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case KactorsPackage.PREAMBLE__PERMISSIONS:
        setPermissions((String)newValue);
        return;
      case KactorsPackage.PREAMBLE__AUTHORS:
        getAuthors().clear();
        getAuthors().addAll((Collection<? extends String>)newValue);
        return;
      case KactorsPackage.PREAMBLE__VERSION:
        setVersion((String)newValue);
        return;
      case KactorsPackage.PREAMBLE__CREATED:
        setCreated((Date)newValue);
        return;
      case KactorsPackage.PREAMBLE__CREATECOMMENT:
        setCreatecomment((String)newValue);
        return;
      case KactorsPackage.PREAMBLE__MODIFIED:
        setModified((Date)newValue);
        return;
      case KactorsPackage.PREAMBLE__MODCOMMENT:
        setModcomment((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KactorsPackage.PREAMBLE__APP:
        setApp(APP_EDEFAULT);
        return;
      case KactorsPackage.PREAMBLE__USER:
        setUser(USER_EDEFAULT);
        return;
      case KactorsPackage.PREAMBLE__LIBRARY:
        setLibrary(LIBRARY_EDEFAULT);
        return;
      case KactorsPackage.PREAMBLE__BEHAVIOR:
        setBehavior(BEHAVIOR_EDEFAULT);
        return;
      case KactorsPackage.PREAMBLE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case KactorsPackage.PREAMBLE__IMPORTS:
        getImports().clear();
        return;
      case KactorsPackage.PREAMBLE__WORLDVIEW:
        setWorldview(WORLDVIEW_EDEFAULT);
        return;
      case KactorsPackage.PREAMBLE__OBSERVABLE:
        setObservable(OBSERVABLE_EDEFAULT);
        return;
      case KactorsPackage.PREAMBLE__OBSERVABLES:
        setObservables((List)null);
        return;
      case KactorsPackage.PREAMBLE__LABEL:
        setLabel(LABEL_EDEFAULT);
        return;
      case KactorsPackage.PREAMBLE__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case KactorsPackage.PREAMBLE__PERMISSIONS:
        setPermissions(PERMISSIONS_EDEFAULT);
        return;
      case KactorsPackage.PREAMBLE__AUTHORS:
        getAuthors().clear();
        return;
      case KactorsPackage.PREAMBLE__VERSION:
        setVersion(VERSION_EDEFAULT);
        return;
      case KactorsPackage.PREAMBLE__CREATED:
        setCreated((Date)null);
        return;
      case KactorsPackage.PREAMBLE__CREATECOMMENT:
        setCreatecomment(CREATECOMMENT_EDEFAULT);
        return;
      case KactorsPackage.PREAMBLE__MODIFIED:
        setModified((Date)null);
        return;
      case KactorsPackage.PREAMBLE__MODCOMMENT:
        setModcomment(MODCOMMENT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KactorsPackage.PREAMBLE__APP:
        return app != APP_EDEFAULT;
      case KactorsPackage.PREAMBLE__USER:
        return user != USER_EDEFAULT;
      case KactorsPackage.PREAMBLE__LIBRARY:
        return library != LIBRARY_EDEFAULT;
      case KactorsPackage.PREAMBLE__BEHAVIOR:
        return behavior != BEHAVIOR_EDEFAULT;
      case KactorsPackage.PREAMBLE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case KactorsPackage.PREAMBLE__IMPORTS:
        return imports != null && !imports.isEmpty();
      case KactorsPackage.PREAMBLE__WORLDVIEW:
        return WORLDVIEW_EDEFAULT == null ? worldview != null : !WORLDVIEW_EDEFAULT.equals(worldview);
      case KactorsPackage.PREAMBLE__OBSERVABLE:
        return OBSERVABLE_EDEFAULT == null ? observable != null : !OBSERVABLE_EDEFAULT.equals(observable);
      case KactorsPackage.PREAMBLE__OBSERVABLES:
        return observables != null;
      case KactorsPackage.PREAMBLE__LABEL:
        return LABEL_EDEFAULT == null ? label != null : !LABEL_EDEFAULT.equals(label);
      case KactorsPackage.PREAMBLE__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case KactorsPackage.PREAMBLE__PERMISSIONS:
        return PERMISSIONS_EDEFAULT == null ? permissions != null : !PERMISSIONS_EDEFAULT.equals(permissions);
      case KactorsPackage.PREAMBLE__AUTHORS:
        return authors != null && !authors.isEmpty();
      case KactorsPackage.PREAMBLE__VERSION:
        return VERSION_EDEFAULT == null ? version != null : !VERSION_EDEFAULT.equals(version);
      case KactorsPackage.PREAMBLE__CREATED:
        return created != null;
      case KactorsPackage.PREAMBLE__CREATECOMMENT:
        return CREATECOMMENT_EDEFAULT == null ? createcomment != null : !CREATECOMMENT_EDEFAULT.equals(createcomment);
      case KactorsPackage.PREAMBLE__MODIFIED:
        return modified != null;
      case KactorsPackage.PREAMBLE__MODCOMMENT:
        return MODCOMMENT_EDEFAULT == null ? modcomment != null : !MODCOMMENT_EDEFAULT.equals(modcomment);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (app: ");
    result.append(app);
    result.append(", user: ");
    result.append(user);
    result.append(", library: ");
    result.append(library);
    result.append(", behavior: ");
    result.append(behavior);
    result.append(", name: ");
    result.append(name);
    result.append(", imports: ");
    result.append(imports);
    result.append(", worldview: ");
    result.append(worldview);
    result.append(", observable: ");
    result.append(observable);
    result.append(", label: ");
    result.append(label);
    result.append(", description: ");
    result.append(description);
    result.append(", permissions: ");
    result.append(permissions);
    result.append(", authors: ");
    result.append(authors);
    result.append(", version: ");
    result.append(version);
    result.append(", createcomment: ");
    result.append(createcomment);
    result.append(", modcomment: ");
    result.append(modcomment);
    result.append(')');
    return result.toString();
  }

} //PreambleImpl
