package org.integratedmodelling.kim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.integratedmodelling.kim.services.KimGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalKimParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_UPPERCASE_ID", "RULE_LOWERCASE_ID", "RULE_STRING", "RULE_SEPARATOR", "RULE_EXPR", "RULE_CAMELCASE_ID", "RULE_INT", "RULE_LOWERCASE_DASHID", "RULE_ID", "RULE_UPPERCASE_PATH", "RULE_BACKCASE_ID", "RULE_ANNOTATION_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "';'", "'void'", "'project'", "'private'", "'define'", "'as'", "'each'", "','", "'true'", "'false'", "'observing'", "'using'", "'classified'", "'discretized'", "'into'", "'according'", "'to'", "'lookup'", "'('", "'?'", "'*'", "')'", "'metadata'", "'otherwise'", "'if'", "'unless'", "'inclusive'", "'exclusive'", "'in'", "'unknown'", "'{{'", "'}}'", "'|'", "'#'", "'aggregated'", "'over'", "'on'", "'definition'", "'instantiation'", "'termination'", "'context'", "'related'", "'set'", "'integrate'", "'do'", "'then'", "'finally'", "'move'", "'away'", "'for'", "'model'", "'learn'", "'number'", "'object'", "'text'", "'boolean'", "'>'", "'>='", "'<='", "'<'", "'where'", "'=='", "'='", "'without'", "'!='", "'plus'", "'minus'", "'times'", "'by'", "'namespace'", "'scenario'", "'worldview'", "'language'", "'imports'", "'covering'", "'domain'", "'root'", "'disjoint'", "'with'", "'version'", "'resolve'", "'from'", "'outside'", "'parameters'", "'urn:klab:'", "':'", "'&'", "'/'", "'.'", "'observe'", "'extends'", "'children'", "'any'", "'per'", "'optional'", "'required'", "'named'", "'down'", "'total'", "'averaged'", "'summed'", "'of'", "'caused'", "'adjacent'", "'contained'", "'containing'", "'causing'", "'during'", "'within'", "'linking'", "'${'", "'#{'", "'inherent'", "'compresent'", "'container'", "'purpose'", "'causant'", "'cooccurrent'", "'}'", "'not'", "'no'", "'identified'", "'presence'", "'count'", "'distance'", "'probability'", "'assessment'", "'change'", "'next'", "'uncertainty'", "'magnitude'", "'level'", "'type'", "'observability'", "'proportion'", "'percentage'", "'ratio'", "'monetary'", "'value'", "'occurrence'", "'identity'", "'or'", "'and'", "'follows'", "'deliberative'", "'interactive'", "'reactive'", "'agent'", "'relationship'", "'abstract'", "'deniable'", "'subjective'", "'rescaling'", "'is'", "'equals'", "'core'", "'nothing'", "'exposes'", "'exposing'", "'defines'", "'authority'", "'requires'", "'describes'", "'increases'", "'decreases'", "'marks'", "'classifies'", "'discretizes'", "'inherits'", "'has'", "'role'", "'targeting'", "'confers'", "'part'", "'constituent'", "'consists'", "'creates'", "'applies'", "'links'", "'inverse'", "'affects'", "'implies'", "'uses'", "'only'", "'exactly'", "'at'", "'least'", "'most'", "'more'", "'contains'", "'between'", "'attribute'", "'realm'", "'extent'", "'{'", "'initialization'", "'transition'", "'?='", "'quality'", "'class'", "'quantity'", "'configuration'", "'bond'", "'ordering'", "'amount'", "'length'", "'mass'", "'volume'", "'weight'", "'money'", "'duration'", "'area'", "'acceleration'", "'energy'", "'entropy'", "'priority'", "'electric-potential'", "'charge'", "'resistance'", "'resistivity'", "'pressure'", "'angle'", "'velocity'", "'temperature'", "'viscosity'", "'thing'", "'process'", "'event'", "'functional'", "'structural'", "'@'", "'+'", "'-'", "'l'", "'e'", "'E'", "'AD'", "'CE'", "'BC'", "'^'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int RULE_BACKCASE_ID=14;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__258=258;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__257=257;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__259=259;
    public static final int T__133=133;
    public static final int T__254=254;
    public static final int T__132=132;
    public static final int T__253=253;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__256=256;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int T__255=255;
    public static final int T__250=250;
    public static final int RULE_ID=12;
    public static final int T__131=131;
    public static final int T__252=252;
    public static final int T__130=130;
    public static final int T__251=251;
    public static final int RULE_INT=10;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__247=247;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__246=246;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__249=249;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__248=248;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int RULE_EXPR=8;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__221=221;
    public static final int T__220=220;
    public static final int T__102=102;
    public static final int T__223=223;
    public static final int T__101=101;
    public static final int T__222=222;
    public static final int T__218=218;
    public static final int T__217=217;
    public static final int T__219=219;
    public static final int T__214=214;
    public static final int T__213=213;
    public static final int T__216=216;
    public static final int T__215=215;
    public static final int T__210=210;
    public static final int T__212=212;
    public static final int T__211=211;
    public static final int RULE_CAMELCASE_ID=9;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__207=207;
    public static final int T__23=23;
    public static final int T__206=206;
    public static final int T__24=24;
    public static final int T__209=209;
    public static final int T__25=25;
    public static final int T__208=208;
    public static final int T__203=203;
    public static final int T__202=202;
    public static final int T__20=20;
    public static final int T__205=205;
    public static final int T__21=21;
    public static final int T__204=204;
    public static final int T__122=122;
    public static final int T__243=243;
    public static final int T__121=121;
    public static final int T__242=242;
    public static final int T__124=124;
    public static final int T__245=245;
    public static final int T__123=123;
    public static final int T__244=244;
    public static final int T__120=120;
    public static final int T__241=241;
    public static final int T__240=240;
    public static final int RULE_SEPARATOR=7;
    public static final int RULE_SL_COMMENT=17;
    public static final int T__119=119;
    public static final int T__118=118;
    public static final int T__239=239;
    public static final int T__115=115;
    public static final int T__236=236;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__235=235;
    public static final int T__117=117;
    public static final int T__238=238;
    public static final int T__116=116;
    public static final int T__237=237;
    public static final int T__111=111;
    public static final int T__232=232;
    public static final int T__110=110;
    public static final int T__231=231;
    public static final int T__113=113;
    public static final int T__234=234;
    public static final int T__112=112;
    public static final int T__233=233;
    public static final int T__230=230;
    public static final int RULE_ANNOTATION_ID=15;
    public static final int T__108=108;
    public static final int T__229=229;
    public static final int T__107=107;
    public static final int T__228=228;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__225=225;
    public static final int T__103=103;
    public static final int T__224=224;
    public static final int T__106=106;
    public static final int T__227=227;
    public static final int T__105=105;
    public static final int T__226=226;
    public static final int RULE_UPPERCASE_ID=4;
    public static final int RULE_ML_COMMENT=16;
    public static final int T__201=201;
    public static final int T__200=200;
    public static final int RULE_UPPERCASE_PATH=13;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int RULE_LOWERCASE_DASHID=11;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int T__169=169;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=6;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_WS=18;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_ANY_OTHER=19;
    public static final int RULE_LOWERCASE_ID=5;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalKimParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalKimParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalKimParser.tokenNames; }
    public String getGrammarFileName() { return "InternalKim.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private KimGrammarAccess grammarAccess;

        public InternalKimParser(TokenStream input, KimGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected KimGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalKim.g:73:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalKim.g:73:46: (iv_ruleModel= ruleModel EOF )
            // InternalKim.g:74:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalKim.g:80:1: ruleModel returns [EObject current=null] : ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_observable_0_0 = null;

        EObject lv_namespace_1_0 = null;

        EObject lv_statements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:86:2: ( ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) )
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            {
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            int alt3=2;
            switch ( input.LA(1) ) {
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_ID:
            case RULE_STRING:
            case RULE_EXPR:
            case RULE_CAMELCASE_ID:
            case RULE_INT:
            case RULE_LOWERCASE_DASHID:
            case RULE_ID:
            case 27:
            case 28:
            case 29:
            case 38:
            case 49:
            case 50:
            case 112:
            case 130:
            case 131:
            case 139:
            case 140:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 214:
            case 251:
            case 252:
                {
                alt3=1;
                }
                break;
            case 160:
                {
                switch ( input.LA(2) ) {
                case RULE_ANNOTATION_ID:
                case 96:
                case 169:
                    {
                    alt3=2;
                    }
                    break;
                case RULE_CAMELCASE_ID:
                    {
                    int LA3_4 = input.LA(3);

                    if ( ((LA3_4>=RULE_UPPERCASE_ID && LA3_4<=RULE_STRING)||LA3_4==RULE_LOWERCASE_DASHID||LA3_4==RULE_BACKCASE_ID||LA3_4==20||LA3_4==42||LA3_4==116||LA3_4==141||(LA3_4>=173 && LA3_4<=174)||(LA3_4>=177 && LA3_4<=179)||(LA3_4>=181 && LA3_4<=189)||(LA3_4>=192 && LA3_4<=202)||LA3_4==209) ) {
                        alt3=2;
                    }
                    else if ( (LA3_4==88) ) {
                        alt3=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 3, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_UPPERCASE_ID:
                case RULE_STRING:
                case RULE_INT:
                case RULE_ID:
                    {
                    alt3=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 2, input);

                    throw nvae;
                }

                }
                break;
            case EOF:
            case RULE_ANNOTATION_ID:
            case 21:
            case 22:
            case 23:
            case 24:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 89:
            case 90:
            case 91:
            case 95:
            case 109:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 190:
            case 211:
            case 212:
            case 213:
            case 218:
            case 219:
            case 220:
            case 221:
            case 222:
            case 223:
            case 224:
            case 225:
            case 226:
            case 227:
            case 228:
            case 229:
            case 230:
            case 231:
            case 232:
            case 233:
            case 234:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
            case 241:
            case 242:
            case 243:
            case 244:
            case 245:
            case 246:
            case 247:
            case 248:
            case 249:
                {
                alt3=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    {
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    // InternalKim.g:90:5: lv_observable_0_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getObservableObservableSemanticsParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_observable_0_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"observable",
                      						lv_observable_0_0,
                      						"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    {
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )*
                    {
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )?
                    int alt1=2;
                    alt1 = dfa1.predict(input);
                    switch (alt1) {
                        case 1 :
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            {
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_3);
                            lv_namespace_1_0=ruleNamespace();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getModelRule());
                              						}
                              						set(
                              							current,
                              							"namespace",
                              							lv_namespace_1_0,
                              							"org.integratedmodelling.kim.Kim.Namespace");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:128:4: ( (lv_statements_2_0= ruleStatement ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==RULE_ANNOTATION_ID||(LA2_0>=21 && LA2_0<=24)||(LA2_0>=70 && LA2_0<=75)||LA2_0==95||LA2_0==109||LA2_0==160||(LA2_0>=164 && LA2_0<=172)||LA2_0==190||(LA2_0>=211 && LA2_0<=213)||(LA2_0>=218 && LA2_0<=249)) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    {
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    // InternalKim.g:130:6: lv_statements_2_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_statements_2_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_2_0,
                    	      							"org.integratedmodelling.kim.Kim.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleStatement"
    // InternalKim.g:152:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalKim.g:152:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalKim.g:153:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalKim.g:159:1: ruleStatement returns [EObject current=null] : ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_conceptStatement_0_0 = null;

        EObject lv_modelStatement_2_0 = null;

        EObject lv_upperOntologyStatement_4_0 = null;

        EObject lv_defineStatement_6_0 = null;

        EObject lv_observeStatement_8_0 = null;



        	enterRule();

        try {
            // InternalKim.g:165:2: ( ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) )
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            {
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            int alt4=5;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    {
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
                    {
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    {
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_conceptStatement_0_0=ruleConceptStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"conceptStatement",
                      							lv_conceptStatement_0_0,
                      							"org.integratedmodelling.kim.Kim.ConceptStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    {
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
                    {
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    {
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_modelStatement_2_0=ruleModelStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"modelStatement",
                      							lv_modelStatement_2_0,
                      							"org.integratedmodelling.kim.Kim.ModelStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStatementAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    {
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
                    {
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    {
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"upperOntologyStatement",
                      							lv_upperOntologyStatement_4_0,
                      							"org.integratedmodelling.kim.Kim.UpperOntologyDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStatementAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    {
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
                    {
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    {
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_defineStatement_6_0=ruleDefineStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"defineStatement",
                      							lv_defineStatement_6_0,
                      							"org.integratedmodelling.kim.Kim.DefineStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    {
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';'
                    {
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) )
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    {
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    // InternalKim.g:274:6: lv_observeStatement_8_0= ruleObserveStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getObserveStatementObserveStatementParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_observeStatement_8_0=ruleObserveStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"observeStatement",
                      							lv_observeStatement_8_0,
                      							"org.integratedmodelling.kim.Kim.ObserveStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getStatementAccess().getSemicolonKeyword_4_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleModelStatement"
    // InternalKim.g:300:1: entryRuleModelStatement returns [EObject current=null] : iv_ruleModelStatement= ruleModelStatement EOF ;
    public final EObject entryRuleModelStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:304:2: (iv_ruleModelStatement= ruleModelStatement EOF )
            // InternalKim.g:305:2: iv_ruleModelStatement= ruleModelStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelStatement=ruleModelStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleModelStatement"


    // $ANTLR start "ruleModelStatement"
    // InternalKim.g:314:1: ruleModelStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) ) ;
    public final EObject ruleModelStatement() throws RecognitionException {
        EObject current = null;

        Token lv_inactive_3_0=null;
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_model_6_0 = null;

        EObject lv_body_7_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:323:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) ) )
            // InternalKim.g:324:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) )
            {
            // InternalKim.g:324:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) )
            // InternalKim.g:325:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) )
            {
            // InternalKim.g:325:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_ANNOTATION_ID) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalKim.g:326:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:326:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:327:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:327:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:328:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:345:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==RULE_ANNOTATION_ID) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalKim.g:346:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:346:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:347:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:365:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )?
            int alt9=2;
            switch ( input.LA(1) ) {
                case 21:
                case 22:
                case 23:
                    {
                    alt9=1;
                    }
                    break;
                case 70:
                    {
                    int LA9_2 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 71:
                    {
                    int LA9_3 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 72:
                    {
                    int LA9_4 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 73:
                    {
                    int LA9_5 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 74:
                    {
                    int LA9_6 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 75:
                    {
                    int LA9_7 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
            }

            switch (alt9) {
                case 1 :
                    // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
                    {
                    // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
                    // InternalKim.g:367:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
                    // InternalKim.g:370:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
                    // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
                    {
                    // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
                    loop8:
                    do {
                        int alt8=3;
                        int LA8_0 = input.LA(1);

                        if ( LA8_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                            alt8=1;
                        }
                        else if ( LA8_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                            alt8=2;
                        }
                        else if ( LA8_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                            alt8=2;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
                    	    {
                    	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
                    	    // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
                    	    // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
                    	    // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
                    	    // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
                    	    }
                    	    // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
                    	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
                    	    {
                    	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
                    	    // InternalKim.g:378:10: lv_inactive_3_0= 'void'
                    	    {
                    	    lv_inactive_3_0=(Token)match(input,21,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(lv_inactive_3_0, grammarAccess.getModelStatementAccess().getInactiveVoidKeyword_1_0_0());
                    	      									
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      										if (current==null) {
                    	      											current = createModelElement(grammarAccess.getModelStatementRule());
                    	      										}
                    	      										setWithLastConsumed(current, "inactive", true, "void");
                    	      									
                    	    }

                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
                    	    // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
                    	    // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
                    	    // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
                    	    // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
                    	    }
                    	    // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
                    	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
                    	    {
                    	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
                    	    int alt7=2;
                    	    int LA7_0 = input.LA(1);

                    	    if ( (LA7_0==22) ) {
                    	        alt7=1;
                    	    }
                    	    switch (alt7) {
                    	        case 1 :
                    	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                    	            {
                    	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                    	            // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
                    	            {
                    	            lv_projectPrivate_4_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              											newLeafNode(lv_projectPrivate_4_0, grammarAccess.getModelStatementAccess().getProjectPrivateProjectKeyword_1_1_0_0());
                    	              										
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              											if (current==null) {
                    	              												current = createModelElement(grammarAccess.getModelStatementRule());
                    	              											}
                    	              											setWithLastConsumed(current, "projectPrivate", true, "project");
                    	              										
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
                    	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
                    	    {
                    	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
                    	    // InternalKim.g:416:11: lv_private_5_0= 'private'
                    	    {
                    	    lv_private_5_0=(Token)match(input,23,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(lv_private_5_0, grammarAccess.getModelStatementAccess().getPrivatePrivateKeyword_1_1_1_0());
                    	      										
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElement(grammarAccess.getModelStatementRule());
                    	      											}
                    	      											setWithLastConsumed(current, "private", true, "private");
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    }
                    break;

            }

            // InternalKim.g:441:3: ( (lv_model_6_0= ruleMODEL_TYPE ) )
            // InternalKim.g:442:4: (lv_model_6_0= ruleMODEL_TYPE )
            {
            // InternalKim.g:442:4: (lv_model_6_0= ruleMODEL_TYPE )
            // InternalKim.g:443:5: lv_model_6_0= ruleMODEL_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getModelMODEL_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_8);
            lv_model_6_0=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"model",
              						lv_model_6_0,
              						"org.integratedmodelling.kim.Kim.MODEL_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:460:3: ( (lv_body_7_0= ruleModelBodyStatement ) )
            // InternalKim.g:461:4: (lv_body_7_0= ruleModelBodyStatement )
            {
            // InternalKim.g:461:4: (lv_body_7_0= ruleModelBodyStatement )
            // InternalKim.g:462:5: lv_body_7_0= ruleModelBodyStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getBodyModelBodyStatementParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_7_0=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_7_0,
              						"org.integratedmodelling.kim.Kim.ModelBodyStatement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleModelStatement"


    // $ANTLR start "entryRuleDefineStatement"
    // InternalKim.g:486:1: entryRuleDefineStatement returns [EObject current=null] : iv_ruleDefineStatement= ruleDefineStatement EOF ;
    public final EObject entryRuleDefineStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefineStatement = null;


        try {
            // InternalKim.g:486:56: (iv_ruleDefineStatement= ruleDefineStatement EOF )
            // InternalKim.g:487:2: iv_ruleDefineStatement= ruleDefineStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefineStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefineStatement=ruleDefineStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefineStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefineStatement"


    // $ANTLR start "ruleDefineStatement"
    // InternalKim.g:493:1: ruleDefineStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) ) ;
    public final EObject ruleDefineStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_defineBody_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:499:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) ) )
            // InternalKim.g:500:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) )
            {
            // InternalKim.g:500:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) )
            // InternalKim.g:501:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) )
            {
            // InternalKim.g:501:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ANNOTATION_ID) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalKim.g:502:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:502:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:503:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:503:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:504:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDefineStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:521:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==RULE_ANNOTATION_ID) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // InternalKim.g:522:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:522:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:523:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_9);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getDefineStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_2=(Token)match(input,24,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDefineStatementAccess().getDefineKeyword_1());
              		
            }
            // InternalKim.g:545:3: ( (lv_defineBody_3_0= ruleDefinitionBody ) )
            // InternalKim.g:546:4: (lv_defineBody_3_0= ruleDefinitionBody )
            {
            // InternalKim.g:546:4: (lv_defineBody_3_0= ruleDefinitionBody )
            // InternalKim.g:547:5: lv_defineBody_3_0= ruleDefinitionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefineStatementAccess().getDefineBodyDefinitionBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_defineBody_3_0=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefineStatementRule());
              					}
              					set(
              						current,
              						"defineBody",
              						lv_defineBody_3_0,
              						"org.integratedmodelling.kim.Kim.DefinitionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefineStatement"


    // $ANTLR start "entryRuleDefinitionBody"
    // InternalKim.g:568:1: entryRuleDefinitionBody returns [EObject current=null] : iv_ruleDefinitionBody= ruleDefinitionBody EOF ;
    public final EObject entryRuleDefinitionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefinitionBody = null;


        try {
            // InternalKim.g:568:55: (iv_ruleDefinitionBody= ruleDefinitionBody EOF )
            // InternalKim.g:569:2: iv_ruleDefinitionBody= ruleDefinitionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefinitionBody=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionBody"


    // $ANTLR start "ruleDefinitionBody"
    // InternalKim.g:575:1: ruleDefinitionBody returns [EObject current=null] : ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) ) ;
    public final EObject ruleDefinitionBody() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:581:2: ( ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) ) )
            // InternalKim.g:582:2: ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) )
            {
            // InternalKim.g:582:2: ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) )
            // InternalKim.g:583:3: ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) )
            {
            // InternalKim.g:583:3: ( (lv_name_0_0= RULE_UPPERCASE_ID ) )
            // InternalKim.g:584:4: (lv_name_0_0= RULE_UPPERCASE_ID )
            {
            // InternalKim.g:584:4: (lv_name_0_0= RULE_UPPERCASE_ID )
            // InternalKim.g:585:5: lv_name_0_0= RULE_UPPERCASE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDefinitionBodyAccess().getNameUPPERCASE_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDefinitionBodyRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,25,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDefinitionBodyAccess().getAsKeyword_1());
              		
            }
            // InternalKim.g:605:3: ( (lv_value_2_0= ruleValue ) )
            // InternalKim.g:606:4: (lv_value_2_0= ruleValue )
            {
            // InternalKim.g:606:4: (lv_value_2_0= ruleValue )
            // InternalKim.g:607:5: lv_value_2_0= ruleValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionBodyAccess().getValueValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionBodyRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.integratedmodelling.kim.Kim.Value");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionBody"


    // $ANTLR start "entryRuleModelBodyStatement"
    // InternalKim.g:628:1: entryRuleModelBodyStatement returns [EObject current=null] : iv_ruleModelBodyStatement= ruleModelBodyStatement EOF ;
    public final EObject entryRuleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelBodyStatement = null;


        try {
            // InternalKim.g:628:59: (iv_ruleModelBodyStatement= ruleModelBodyStatement EOF )
            // InternalKim.g:629:2: iv_ruleModelBodyStatement= ruleModelBodyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelBodyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelBodyStatement=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelBodyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelBodyStatement"


    // $ANTLR start "ruleModelBodyStatement"
    // InternalKim.g:635:1: ruleModelBodyStatement returns [EObject current=null] : ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) otherlv_6= 'as' )? ( ( (lv_name_7_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_8_0= ruleAnnotatedObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_11_0= RULE_STRING ) )? (otherlv_12= 'observing' ( (lv_dependencies_13_0= ruleDependency ) ) (otherlv_14= ',' ( (lv_dependencies_15_0= ruleDependency ) ) )* )? (otherlv_16= 'using' ( (lv_contextualizers_17_0= ruleValueExecution ) ) (otherlv_18= ',' ( (lv_contextualizers_19_0= ruleValueExecution ) ) )* )? ( (otherlv_20= 'classified' | ( (lv_discretization_21_0= 'discretized' ) ) ) ( (otherlv_22= 'into' ( (lv_classification_23_0= ruleClassification ) ) ) | (otherlv_24= 'according' otherlv_25= 'to' ( (lv_classificationProperty_26_0= rulePropertyId ) ) ) ) )? (otherlv_27= 'lookup' (otherlv_28= '(' ( ( (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' ) ) ) (otherlv_30= ',' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) )* otherlv_32= ')' )? otherlv_33= 'into' ( ( (lv_lookupTable_34_0= ruleTable ) ) | ( (lv_lookupTableId_35_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_36_0= ruleActionSpecification ) )* (otherlv_37= 'metadata' ( (lv_metadata_38_0= ruleMetadata ) ) )? ) ;
    public final EObject ruleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_instantiator_0_0=null;
        Token otherlv_2=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        Token otherlv_6=null;
        Token lv_name_7_0=null;
        Token otherlv_9=null;
        Token lv_docstring_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token lv_discretization_21_0=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_lookupTableArgs_29_1=null;
        Token lv_lookupTableArgs_29_2=null;
        Token lv_lookupTableArgs_29_3=null;
        Token otherlv_30=null;
        Token lv_lookupTableArgs_31_1=null;
        Token lv_lookupTableArgs_31_2=null;
        Token lv_lookupTableArgs_31_3=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token lv_lookupTableId_35_0=null;
        Token otherlv_37=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_number_4_0 = null;

        EObject lv_observables_8_0 = null;

        EObject lv_observables_10_0 = null;

        EObject lv_dependencies_13_0 = null;

        EObject lv_dependencies_15_0 = null;

        EObject lv_contextualizers_17_0 = null;

        EObject lv_contextualizers_19_0 = null;

        EObject lv_classification_23_0 = null;

        AntlrDatatypeRuleToken lv_classificationProperty_26_0 = null;

        EObject lv_lookupTable_34_0 = null;

        EObject lv_actions_36_0 = null;

        EObject lv_metadata_38_0 = null;



        	enterRule();

        try {
            // InternalKim.g:641:2: ( ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) otherlv_6= 'as' )? ( ( (lv_name_7_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_8_0= ruleAnnotatedObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_11_0= RULE_STRING ) )? (otherlv_12= 'observing' ( (lv_dependencies_13_0= ruleDependency ) ) (otherlv_14= ',' ( (lv_dependencies_15_0= ruleDependency ) ) )* )? (otherlv_16= 'using' ( (lv_contextualizers_17_0= ruleValueExecution ) ) (otherlv_18= ',' ( (lv_contextualizers_19_0= ruleValueExecution ) ) )* )? ( (otherlv_20= 'classified' | ( (lv_discretization_21_0= 'discretized' ) ) ) ( (otherlv_22= 'into' ( (lv_classification_23_0= ruleClassification ) ) ) | (otherlv_24= 'according' otherlv_25= 'to' ( (lv_classificationProperty_26_0= rulePropertyId ) ) ) ) )? (otherlv_27= 'lookup' (otherlv_28= '(' ( ( (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' ) ) ) (otherlv_30= ',' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) )* otherlv_32= ')' )? otherlv_33= 'into' ( ( (lv_lookupTable_34_0= ruleTable ) ) | ( (lv_lookupTableId_35_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_36_0= ruleActionSpecification ) )* (otherlv_37= 'metadata' ( (lv_metadata_38_0= ruleMetadata ) ) )? ) )
            // InternalKim.g:642:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) otherlv_6= 'as' )? ( ( (lv_name_7_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_8_0= ruleAnnotatedObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_11_0= RULE_STRING ) )? (otherlv_12= 'observing' ( (lv_dependencies_13_0= ruleDependency ) ) (otherlv_14= ',' ( (lv_dependencies_15_0= ruleDependency ) ) )* )? (otherlv_16= 'using' ( (lv_contextualizers_17_0= ruleValueExecution ) ) (otherlv_18= ',' ( (lv_contextualizers_19_0= ruleValueExecution ) ) )* )? ( (otherlv_20= 'classified' | ( (lv_discretization_21_0= 'discretized' ) ) ) ( (otherlv_22= 'into' ( (lv_classification_23_0= ruleClassification ) ) ) | (otherlv_24= 'according' otherlv_25= 'to' ( (lv_classificationProperty_26_0= rulePropertyId ) ) ) ) )? (otherlv_27= 'lookup' (otherlv_28= '(' ( ( (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' ) ) ) (otherlv_30= ',' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) )* otherlv_32= ')' )? otherlv_33= 'into' ( ( (lv_lookupTable_34_0= ruleTable ) ) | ( (lv_lookupTableId_35_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_36_0= ruleActionSpecification ) )* (otherlv_37= 'metadata' ( (lv_metadata_38_0= ruleMetadata ) ) )? )
            {
            // InternalKim.g:642:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) otherlv_6= 'as' )? ( ( (lv_name_7_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_8_0= ruleAnnotatedObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_11_0= RULE_STRING ) )? (otherlv_12= 'observing' ( (lv_dependencies_13_0= ruleDependency ) ) (otherlv_14= ',' ( (lv_dependencies_15_0= ruleDependency ) ) )* )? (otherlv_16= 'using' ( (lv_contextualizers_17_0= ruleValueExecution ) ) (otherlv_18= ',' ( (lv_contextualizers_19_0= ruleValueExecution ) ) )* )? ( (otherlv_20= 'classified' | ( (lv_discretization_21_0= 'discretized' ) ) ) ( (otherlv_22= 'into' ( (lv_classification_23_0= ruleClassification ) ) ) | (otherlv_24= 'according' otherlv_25= 'to' ( (lv_classificationProperty_26_0= rulePropertyId ) ) ) ) )? (otherlv_27= 'lookup' (otherlv_28= '(' ( ( (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' ) ) ) (otherlv_30= ',' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) )* otherlv_32= ')' )? otherlv_33= 'into' ( ( (lv_lookupTable_34_0= ruleTable ) ) | ( (lv_lookupTableId_35_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_36_0= ruleActionSpecification ) )* (otherlv_37= 'metadata' ( (lv_metadata_38_0= ruleMetadata ) ) )? )
            // InternalKim.g:643:3: ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) otherlv_6= 'as' )? ( ( (lv_name_7_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_8_0= ruleAnnotatedObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_11_0= RULE_STRING ) )? (otherlv_12= 'observing' ( (lv_dependencies_13_0= ruleDependency ) ) (otherlv_14= ',' ( (lv_dependencies_15_0= ruleDependency ) ) )* )? (otherlv_16= 'using' ( (lv_contextualizers_17_0= ruleValueExecution ) ) (otherlv_18= ',' ( (lv_contextualizers_19_0= ruleValueExecution ) ) )* )? ( (otherlv_20= 'classified' | ( (lv_discretization_21_0= 'discretized' ) ) ) ( (otherlv_22= 'into' ( (lv_classification_23_0= ruleClassification ) ) ) | (otherlv_24= 'according' otherlv_25= 'to' ( (lv_classificationProperty_26_0= rulePropertyId ) ) ) ) )? (otherlv_27= 'lookup' (otherlv_28= '(' ( ( (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' ) ) ) (otherlv_30= ',' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) )* otherlv_32= ')' )? otherlv_33= 'into' ( ( (lv_lookupTable_34_0= ruleTable ) ) | ( (lv_lookupTableId_35_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_36_0= ruleActionSpecification ) )* (otherlv_37= 'metadata' ( (lv_metadata_38_0= ruleMetadata ) ) )?
            {
            // InternalKim.g:643:3: ( (lv_instantiator_0_0= 'each' ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==26) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalKim.g:644:4: (lv_instantiator_0_0= 'each' )
                    {
                    // InternalKim.g:644:4: (lv_instantiator_0_0= 'each' )
                    // InternalKim.g:645:5: lv_instantiator_0_0= 'each'
                    {
                    lv_instantiator_0_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_instantiator_0_0, grammarAccess.getModelBodyStatementAccess().getInstantiatorEachKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(current, "instantiator", true, "each");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:657:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) otherlv_6= 'as' )?
            int alt16=2;
            alt16 = dfa16.predict(input);
            switch (alt16) {
                case 1 :
                    // InternalKim.g:658:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) otherlv_6= 'as'
                    {
                    // InternalKim.g:658:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
                    int alt15=3;
                    switch ( input.LA(1) ) {
                    case RULE_UPPERCASE_ID:
                    case RULE_LOWERCASE_ID:
                    case RULE_STRING:
                    case RULE_CAMELCASE_ID:
                    case RULE_LOWERCASE_DASHID:
                    case 104:
                        {
                        alt15=1;
                        }
                        break;
                    case RULE_INT:
                    case 251:
                    case 252:
                        {
                        alt15=2;
                        }
                        break;
                    case 28:
                    case 29:
                        {
                        alt15=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 15, 0, input);

                        throw nvae;
                    }

                    switch (alt15) {
                        case 1 :
                            // InternalKim.g:659:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            {
                            // InternalKim.g:659:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            // InternalKim.g:660:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            {
                            // InternalKim.g:660:6: ( (lv_urns_1_0= ruleUrn ) )
                            // InternalKim.g:661:7: (lv_urns_1_0= ruleUrn )
                            {
                            // InternalKim.g:661:7: (lv_urns_1_0= ruleUrn )
                            // InternalKim.g:662:8: lv_urns_1_0= ruleUrn
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_13);
                            lv_urns_1_0=ruleUrn();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"urns",
                              									lv_urns_1_0,
                              									"org.integratedmodelling.kim.Kim.Urn");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:679:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            loop13:
                            do {
                                int alt13=2;
                                int LA13_0 = input.LA(1);

                                if ( (LA13_0==27) ) {
                                    alt13=1;
                                }


                                switch (alt13) {
                            	case 1 :
                            	    // InternalKim.g:680:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                            	    {
                            	    otherlv_2=(Token)match(input,27,FOLLOW_14); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_2, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalKim.g:684:7: ( (lv_urns_3_0= ruleUrn ) )
                            	    // InternalKim.g:685:8: (lv_urns_3_0= ruleUrn )
                            	    {
                            	    // InternalKim.g:685:8: (lv_urns_3_0= ruleUrn )
                            	    // InternalKim.g:686:9: lv_urns_3_0= ruleUrn
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_13);
                            	    lv_urns_3_0=ruleUrn();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"urns",
                            	      										lv_urns_3_0,
                            	      										"org.integratedmodelling.kim.Kim.Urn");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop13;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:706:5: ( (lv_number_4_0= ruleNumber ) )
                            {
                            // InternalKim.g:706:5: ( (lv_number_4_0= ruleNumber ) )
                            // InternalKim.g:707:6: (lv_number_4_0= ruleNumber )
                            {
                            // InternalKim.g:707:6: (lv_number_4_0= ruleNumber )
                            // InternalKim.g:708:7: lv_number_4_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_11);
                            lv_number_4_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"number",
                              								lv_number_4_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:726:5: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                            {
                            // InternalKim.g:726:5: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                            // InternalKim.g:727:6: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                            {
                            // InternalKim.g:727:6: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                            // InternalKim.g:728:7: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                            {
                            // InternalKim.g:728:7: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                            int alt14=2;
                            int LA14_0 = input.LA(1);

                            if ( (LA14_0==28) ) {
                                alt14=1;
                            }
                            else if ( (LA14_0==29) ) {
                                alt14=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 14, 0, input);

                                throw nvae;
                            }
                            switch (alt14) {
                                case 1 :
                                    // InternalKim.g:729:8: lv_boolean_5_1= 'true'
                                    {
                                    lv_boolean_5_1=(Token)match(input,28,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_5_1, grammarAccess.getModelBodyStatementAccess().getBooleanTrueKeyword_1_0_2_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:740:8: lv_boolean_5_2= 'false'
                                    {
                                    lv_boolean_5_2=(Token)match(input,29,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_5_2, grammarAccess.getModelBodyStatementAccess().getBooleanFalseKeyword_1_0_2_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,25,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getModelBodyStatementAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:759:3: ( ( (lv_name_7_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_8_0= ruleAnnotatedObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) )* ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_LOWERCASE_ID) ) {
                int LA18_1 = input.LA(2);

                if ( (LA18_1==25||LA18_1==38||LA18_1==105||LA18_1==108) ) {
                    alt18=2;
                }
                else if ( (LA18_1==EOF||LA18_1==RULE_STRING||LA18_1==20||(LA18_1>=30 && LA18_1<=33)||LA18_1==37||LA18_1==42||(LA18_1>=54 && LA18_1<=56)||(LA18_1>=62 && LA18_1<=67)) ) {
                    alt18=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 18, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA18_0==RULE_UPPERCASE_ID||LA18_0==RULE_STRING||(LA18_0>=RULE_EXPR && LA18_0<=RULE_ID)||LA18_0==RULE_ANNOTATION_ID||(LA18_0>=27 && LA18_0<=29)||LA18_0==38||(LA18_0>=49 && LA18_0<=50)||LA18_0==112||(LA18_0>=130 && LA18_0<=131)||(LA18_0>=139 && LA18_0<=140)||(LA18_0>=142 && LA18_0<=160)||LA18_0==214||(LA18_0>=251 && LA18_0<=252)) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalKim.g:760:4: ( (lv_name_7_0= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:760:4: ( (lv_name_7_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:761:5: (lv_name_7_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:761:5: (lv_name_7_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:762:6: lv_name_7_0= RULE_LOWERCASE_ID
                    {
                    lv_name_7_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_7_0, grammarAccess.getModelBodyStatementAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_7_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:779:4: ( ( (lv_observables_8_0= ruleAnnotatedObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) )* )
                    {
                    // InternalKim.g:779:4: ( ( (lv_observables_8_0= ruleAnnotatedObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) )* )
                    // InternalKim.g:780:5: ( (lv_observables_8_0= ruleAnnotatedObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) )*
                    {
                    // InternalKim.g:780:5: ( (lv_observables_8_0= ruleAnnotatedObservableSemantics ) )
                    // InternalKim.g:781:6: (lv_observables_8_0= ruleAnnotatedObservableSemantics )
                    {
                    // InternalKim.g:781:6: (lv_observables_8_0= ruleAnnotatedObservableSemantics )
                    // InternalKim.g:782:7: lv_observables_8_0= ruleAnnotatedObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesAnnotatedObservableSemanticsParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_16);
                    lv_observables_8_0=ruleAnnotatedObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      							}
                      							add(
                      								current,
                      								"observables",
                      								lv_observables_8_0,
                      								"org.integratedmodelling.kim.Kim.AnnotatedObservableSemantics");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalKim.g:799:5: (otherlv_9= ',' ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) ) )*
                    loop17:
                    do {
                        int alt17=2;
                        int LA17_0 = input.LA(1);

                        if ( (LA17_0==27) ) {
                            alt17=1;
                        }


                        switch (alt17) {
                    	case 1 :
                    	    // InternalKim.g:800:6: otherlv_9= ',' ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) )
                    	    {
                    	    otherlv_9=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_2_1_1_0());
                    	      					
                    	    }
                    	    // InternalKim.g:804:6: ( (lv_observables_10_0= ruleAnnotatedObservableSemantics ) )
                    	    // InternalKim.g:805:7: (lv_observables_10_0= ruleAnnotatedObservableSemantics )
                    	    {
                    	    // InternalKim.g:805:7: (lv_observables_10_0= ruleAnnotatedObservableSemantics )
                    	    // InternalKim.g:806:8: lv_observables_10_0= ruleAnnotatedObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesAnnotatedObservableSemanticsParserRuleCall_2_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_observables_10_0=ruleAnnotatedObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"observables",
                    	      									lv_observables_10_0,
                    	      									"org.integratedmodelling.kim.Kim.AnnotatedObservableSemantics");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop17;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalKim.g:826:3: ( (lv_docstring_11_0= RULE_STRING ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_STRING) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalKim.g:827:4: (lv_docstring_11_0= RULE_STRING )
                    {
                    // InternalKim.g:827:4: (lv_docstring_11_0= RULE_STRING )
                    // InternalKim.g:828:5: lv_docstring_11_0= RULE_STRING
                    {
                    lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_11_0, grammarAccess.getModelBodyStatementAccess().getDocstringSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_11_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:844:3: (otherlv_12= 'observing' ( (lv_dependencies_13_0= ruleDependency ) ) (otherlv_14= ',' ( (lv_dependencies_15_0= ruleDependency ) ) )* )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==30) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalKim.g:845:4: otherlv_12= 'observing' ( (lv_dependencies_13_0= ruleDependency ) ) (otherlv_14= ',' ( (lv_dependencies_15_0= ruleDependency ) ) )*
                    {
                    otherlv_12=(Token)match(input,30,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getModelBodyStatementAccess().getObservingKeyword_4_0());
                      			
                    }
                    // InternalKim.g:849:4: ( (lv_dependencies_13_0= ruleDependency ) )
                    // InternalKim.g:850:5: (lv_dependencies_13_0= ruleDependency )
                    {
                    // InternalKim.g:850:5: (lv_dependencies_13_0= ruleDependency )
                    // InternalKim.g:851:6: lv_dependencies_13_0= ruleDependency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_dependencies_13_0=ruleDependency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"dependencies",
                      							lv_dependencies_13_0,
                      							"org.integratedmodelling.kim.Kim.Dependency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:868:4: (otherlv_14= ',' ( (lv_dependencies_15_0= ruleDependency ) ) )*
                    loop20:
                    do {
                        int alt20=2;
                        int LA20_0 = input.LA(1);

                        if ( (LA20_0==27) ) {
                            alt20=1;
                        }


                        switch (alt20) {
                    	case 1 :
                    	    // InternalKim.g:869:5: otherlv_14= ',' ( (lv_dependencies_15_0= ruleDependency ) )
                    	    {
                    	    otherlv_14=(Token)match(input,27,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_14, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:873:5: ( (lv_dependencies_15_0= ruleDependency ) )
                    	    // InternalKim.g:874:6: (lv_dependencies_15_0= ruleDependency )
                    	    {
                    	    // InternalKim.g:874:6: (lv_dependencies_15_0= ruleDependency )
                    	    // InternalKim.g:875:7: lv_dependencies_15_0= ruleDependency
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_dependencies_15_0=ruleDependency();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"dependencies",
                    	      								lv_dependencies_15_0,
                    	      								"org.integratedmodelling.kim.Kim.Dependency");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop20;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:894:3: (otherlv_16= 'using' ( (lv_contextualizers_17_0= ruleValueExecution ) ) (otherlv_18= ',' ( (lv_contextualizers_19_0= ruleValueExecution ) ) )* )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==31) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalKim.g:895:4: otherlv_16= 'using' ( (lv_contextualizers_17_0= ruleValueExecution ) ) (otherlv_18= ',' ( (lv_contextualizers_19_0= ruleValueExecution ) ) )*
                    {
                    otherlv_16=(Token)match(input,31,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getModelBodyStatementAccess().getUsingKeyword_5_0());
                      			
                    }
                    // InternalKim.g:899:4: ( (lv_contextualizers_17_0= ruleValueExecution ) )
                    // InternalKim.g:900:5: (lv_contextualizers_17_0= ruleValueExecution )
                    {
                    // InternalKim.g:900:5: (lv_contextualizers_17_0= ruleValueExecution )
                    // InternalKim.g:901:6: lv_contextualizers_17_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_contextualizers_17_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"contextualizers",
                      							lv_contextualizers_17_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:918:4: (otherlv_18= ',' ( (lv_contextualizers_19_0= ruleValueExecution ) ) )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==27) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalKim.g:919:5: otherlv_18= ',' ( (lv_contextualizers_19_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_18=(Token)match(input,27,FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_18, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:923:5: ( (lv_contextualizers_19_0= ruleValueExecution ) )
                    	    // InternalKim.g:924:6: (lv_contextualizers_19_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:924:6: (lv_contextualizers_19_0= ruleValueExecution )
                    	    // InternalKim.g:925:7: lv_contextualizers_19_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_21);
                    	    lv_contextualizers_19_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"contextualizers",
                    	      								lv_contextualizers_19_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:944:3: ( (otherlv_20= 'classified' | ( (lv_discretization_21_0= 'discretized' ) ) ) ( (otherlv_22= 'into' ( (lv_classification_23_0= ruleClassification ) ) ) | (otherlv_24= 'according' otherlv_25= 'to' ( (lv_classificationProperty_26_0= rulePropertyId ) ) ) ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( ((LA26_0>=32 && LA26_0<=33)) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalKim.g:945:4: (otherlv_20= 'classified' | ( (lv_discretization_21_0= 'discretized' ) ) ) ( (otherlv_22= 'into' ( (lv_classification_23_0= ruleClassification ) ) ) | (otherlv_24= 'according' otherlv_25= 'to' ( (lv_classificationProperty_26_0= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:945:4: (otherlv_20= 'classified' | ( (lv_discretization_21_0= 'discretized' ) ) )
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==32) ) {
                        alt24=1;
                    }
                    else if ( (LA24_0==33) ) {
                        alt24=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 24, 0, input);

                        throw nvae;
                    }
                    switch (alt24) {
                        case 1 :
                            // InternalKim.g:946:5: otherlv_20= 'classified'
                            {
                            otherlv_20=(Token)match(input,32,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_20, grammarAccess.getModelBodyStatementAccess().getClassifiedKeyword_6_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:951:5: ( (lv_discretization_21_0= 'discretized' ) )
                            {
                            // InternalKim.g:951:5: ( (lv_discretization_21_0= 'discretized' ) )
                            // InternalKim.g:952:6: (lv_discretization_21_0= 'discretized' )
                            {
                            // InternalKim.g:952:6: (lv_discretization_21_0= 'discretized' )
                            // InternalKim.g:953:7: lv_discretization_21_0= 'discretized'
                            {
                            lv_discretization_21_0=(Token)match(input,33,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_discretization_21_0, grammarAccess.getModelBodyStatementAccess().getDiscretizationDiscretizedKeyword_6_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              							}
                              							setWithLastConsumed(current, "discretization", true, "discretized");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:966:4: ( (otherlv_22= 'into' ( (lv_classification_23_0= ruleClassification ) ) ) | (otherlv_24= 'according' otherlv_25= 'to' ( (lv_classificationProperty_26_0= rulePropertyId ) ) ) )
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==34) ) {
                        alt25=1;
                    }
                    else if ( (LA25_0==35) ) {
                        alt25=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 25, 0, input);

                        throw nvae;
                    }
                    switch (alt25) {
                        case 1 :
                            // InternalKim.g:967:5: (otherlv_22= 'into' ( (lv_classification_23_0= ruleClassification ) ) )
                            {
                            // InternalKim.g:967:5: (otherlv_22= 'into' ( (lv_classification_23_0= ruleClassification ) ) )
                            // InternalKim.g:968:6: otherlv_22= 'into' ( (lv_classification_23_0= ruleClassification ) )
                            {
                            otherlv_22=(Token)match(input,34,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_22, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_6_1_0_0());
                              					
                            }
                            // InternalKim.g:972:6: ( (lv_classification_23_0= ruleClassification ) )
                            // InternalKim.g:973:7: (lv_classification_23_0= ruleClassification )
                            {
                            // InternalKim.g:973:7: (lv_classification_23_0= ruleClassification )
                            // InternalKim.g:974:8: lv_classification_23_0= ruleClassification
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationClassificationParserRuleCall_6_1_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_23);
                            lv_classification_23_0=ruleClassification();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classification",
                              									lv_classification_23_0,
                              									"org.integratedmodelling.kim.Kim.Classification");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:993:5: (otherlv_24= 'according' otherlv_25= 'to' ( (lv_classificationProperty_26_0= rulePropertyId ) ) )
                            {
                            // InternalKim.g:993:5: (otherlv_24= 'according' otherlv_25= 'to' ( (lv_classificationProperty_26_0= rulePropertyId ) ) )
                            // InternalKim.g:994:6: otherlv_24= 'according' otherlv_25= 'to' ( (lv_classificationProperty_26_0= rulePropertyId ) )
                            {
                            otherlv_24=(Token)match(input,35,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_24, grammarAccess.getModelBodyStatementAccess().getAccordingKeyword_6_1_1_0());
                              					
                            }
                            otherlv_25=(Token)match(input,36,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_25, grammarAccess.getModelBodyStatementAccess().getToKeyword_6_1_1_1());
                              					
                            }
                            // InternalKim.g:1002:6: ( (lv_classificationProperty_26_0= rulePropertyId ) )
                            // InternalKim.g:1003:7: (lv_classificationProperty_26_0= rulePropertyId )
                            {
                            // InternalKim.g:1003:7: (lv_classificationProperty_26_0= rulePropertyId )
                            // InternalKim.g:1004:8: lv_classificationProperty_26_0= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationPropertyPropertyIdParserRuleCall_6_1_1_2_0());
                              							
                            }
                            pushFollow(FOLLOW_23);
                            lv_classificationProperty_26_0=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classificationProperty",
                              									lv_classificationProperty_26_0,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:1024:3: (otherlv_27= 'lookup' (otherlv_28= '(' ( ( (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' ) ) ) (otherlv_30= ',' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) )* otherlv_32= ')' )? otherlv_33= 'into' ( ( (lv_lookupTable_34_0= ruleTable ) ) | ( (lv_lookupTableId_35_0= RULE_UPPERCASE_ID ) ) ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==37) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalKim.g:1025:4: otherlv_27= 'lookup' (otherlv_28= '(' ( ( (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' ) ) ) (otherlv_30= ',' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) )* otherlv_32= ')' )? otherlv_33= 'into' ( ( (lv_lookupTable_34_0= ruleTable ) ) | ( (lv_lookupTableId_35_0= RULE_UPPERCASE_ID ) ) )
                    {
                    otherlv_27=(Token)match(input,37,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getModelBodyStatementAccess().getLookupKeyword_7_0());
                      			
                    }
                    // InternalKim.g:1029:4: (otherlv_28= '(' ( ( (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' ) ) ) (otherlv_30= ',' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) )* otherlv_32= ')' )?
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==38) ) {
                        alt30=1;
                    }
                    switch (alt30) {
                        case 1 :
                            // InternalKim.g:1030:5: otherlv_28= '(' ( ( (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' ) ) ) (otherlv_30= ',' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) )* otherlv_32= ')'
                            {
                            otherlv_28=(Token)match(input,38,FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_28, grammarAccess.getModelBodyStatementAccess().getLeftParenthesisKeyword_7_1_0());
                              				
                            }
                            // InternalKim.g:1034:5: ( ( (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' ) ) )
                            // InternalKim.g:1035:6: ( (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' ) )
                            {
                            // InternalKim.g:1035:6: ( (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' ) )
                            // InternalKim.g:1036:7: (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' )
                            {
                            // InternalKim.g:1036:7: (lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_29_2= '?' | lv_lookupTableArgs_29_3= '*' )
                            int alt27=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt27=1;
                                }
                                break;
                            case 39:
                                {
                                alt27=2;
                                }
                                break;
                            case 40:
                                {
                                alt27=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 27, 0, input);

                                throw nvae;
                            }

                            switch (alt27) {
                                case 1 :
                                    // InternalKim.g:1037:8: lv_lookupTableArgs_29_1= RULE_LOWERCASE_ID
                                    {
                                    lv_lookupTableArgs_29_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_28); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_29_1, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLOWERCASE_IDTerminalRuleCall_7_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(
                                      									current,
                                      									"lookupTableArgs",
                                      									lv_lookupTableArgs_29_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:1052:8: lv_lookupTableArgs_29_2= '?'
                                    {
                                    lv_lookupTableArgs_29_2=(Token)match(input,39,FOLLOW_28); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_29_2, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsQuestionMarkKeyword_7_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_29_2, null);
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:1063:8: lv_lookupTableArgs_29_3= '*'
                                    {
                                    lv_lookupTableArgs_29_3=(Token)match(input,40,FOLLOW_28); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_29_3, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsAsteriskKeyword_7_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_29_3, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:1076:5: (otherlv_30= ',' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) )*
                            loop29:
                            do {
                                int alt29=2;
                                int LA29_0 = input.LA(1);

                                if ( (LA29_0==27) ) {
                                    alt29=1;
                                }


                                switch (alt29) {
                            	case 1 :
                            	    // InternalKim.g:1077:6: otherlv_30= ',' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) )
                            	    {
                            	    otherlv_30=(Token)match(input,27,FOLLOW_27); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_30, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_7_1_2_0());
                            	      					
                            	    }
                            	    // InternalKim.g:1081:6: ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) )
                            	    // InternalKim.g:1082:7: ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) )
                            	    {
                            	    // InternalKim.g:1082:7: ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) )
                            	    // InternalKim.g:1083:8: (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' )
                            	    {
                            	    // InternalKim.g:1083:8: (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' )
                            	    int alt28=3;
                            	    switch ( input.LA(1) ) {
                            	    case RULE_LOWERCASE_ID:
                            	        {
                            	        alt28=1;
                            	        }
                            	        break;
                            	    case 39:
                            	        {
                            	        alt28=2;
                            	        }
                            	        break;
                            	    case 40:
                            	        {
                            	        alt28=3;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 28, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt28) {
                            	        case 1 :
                            	            // InternalKim.g:1084:9: lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID
                            	            {
                            	            lv_lookupTableArgs_31_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_28); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_31_1, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLOWERCASE_IDTerminalRuleCall_7_1_2_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(
                            	              										current,
                            	              										"lookupTableArgs",
                            	              										lv_lookupTableArgs_31_1,
                            	              										"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                            	              								
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalKim.g:1099:9: lv_lookupTableArgs_31_2= '?'
                            	            {
                            	            lv_lookupTableArgs_31_2=(Token)match(input,39,FOLLOW_28); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_31_2, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsQuestionMarkKeyword_7_1_2_1_0_1());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_31_2, null);
                            	              								
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // InternalKim.g:1110:9: lv_lookupTableArgs_31_3= '*'
                            	            {
                            	            lv_lookupTableArgs_31_3=(Token)match(input,40,FOLLOW_28); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_31_3, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsAsteriskKeyword_7_1_2_1_0_2());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_31_3, null);
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop29;
                                }
                            } while (true);

                            otherlv_32=(Token)match(input,41,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_32, grammarAccess.getModelBodyStatementAccess().getRightParenthesisKeyword_7_1_3());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_33=(Token)match(input,34,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_7_2());
                      			
                    }
                    // InternalKim.g:1133:4: ( ( (lv_lookupTable_34_0= ruleTable ) ) | ( (lv_lookupTableId_35_0= RULE_UPPERCASE_ID ) ) )
                    int alt31=2;
                    int LA31_0 = input.LA(1);

                    if ( ((LA31_0>=RULE_LOWERCASE_ID && LA31_0<=RULE_STRING)||(LA31_0>=RULE_EXPR && LA31_0<=RULE_LOWERCASE_DASHID)||(LA31_0>=28 && LA31_0<=29)||LA31_0==38||LA31_0==40||(LA31_0>=48 && LA31_0<=49)||LA31_0==53||(LA31_0>=76 && LA31_0<=79)||LA31_0==82||LA31_0==84||(LA31_0>=130 && LA31_0<=131)||(LA31_0>=139 && LA31_0<=140)||(LA31_0>=142 && LA31_0<=160)||(LA31_0>=251 && LA31_0<=252)) ) {
                        alt31=1;
                    }
                    else if ( (LA31_0==RULE_UPPERCASE_ID) ) {
                        int LA31_2 = input.LA(2);

                        if ( (LA31_2==EOF||LA31_2==20||LA31_2==42||(LA31_2>=54 && LA31_2<=56)||(LA31_2>=62 && LA31_2<=67)) ) {
                            alt31=2;
                        }
                        else if ( (LA31_2==105||LA31_2==108) ) {
                            alt31=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 31, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 31, 0, input);

                        throw nvae;
                    }
                    switch (alt31) {
                        case 1 :
                            // InternalKim.g:1134:5: ( (lv_lookupTable_34_0= ruleTable ) )
                            {
                            // InternalKim.g:1134:5: ( (lv_lookupTable_34_0= ruleTable ) )
                            // InternalKim.g:1135:6: (lv_lookupTable_34_0= ruleTable )
                            {
                            // InternalKim.g:1135:6: (lv_lookupTable_34_0= ruleTable )
                            // InternalKim.g:1136:7: lv_lookupTable_34_0= ruleTable
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableTableParserRuleCall_7_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_31);
                            lv_lookupTable_34_0=ruleTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"lookupTable",
                              								lv_lookupTable_34_0,
                              								"org.integratedmodelling.kim.Kim.Table");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1154:5: ( (lv_lookupTableId_35_0= RULE_UPPERCASE_ID ) )
                            {
                            // InternalKim.g:1154:5: ( (lv_lookupTableId_35_0= RULE_UPPERCASE_ID ) )
                            // InternalKim.g:1155:6: (lv_lookupTableId_35_0= RULE_UPPERCASE_ID )
                            {
                            // InternalKim.g:1155:6: (lv_lookupTableId_35_0= RULE_UPPERCASE_ID )
                            // InternalKim.g:1156:7: lv_lookupTableId_35_0= RULE_UPPERCASE_ID
                            {
                            lv_lookupTableId_35_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_lookupTableId_35_0, grammarAccess.getModelBodyStatementAccess().getLookupTableIdUPPERCASE_IDTerminalRuleCall_7_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"lookupTableId",
                              								lv_lookupTableId_35_0,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:1174:3: ( (lv_actions_36_0= ruleActionSpecification ) )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( ((LA33_0>=54 && LA33_0<=56)||(LA33_0>=62 && LA33_0<=67)) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalKim.g:1175:4: (lv_actions_36_0= ruleActionSpecification )
            	    {
            	    // InternalKim.g:1175:4: (lv_actions_36_0= ruleActionSpecification )
            	    // InternalKim.g:1176:5: lv_actions_36_0= ruleActionSpecification
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelBodyStatementAccess().getActionsActionSpecificationParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_actions_36_0=ruleActionSpecification();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_36_0,
            	      						"org.integratedmodelling.kim.Kim.ActionSpecification");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

            // InternalKim.g:1193:3: (otherlv_37= 'metadata' ( (lv_metadata_38_0= ruleMetadata ) ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==42) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalKim.g:1194:4: otherlv_37= 'metadata' ( (lv_metadata_38_0= ruleMetadata ) )
                    {
                    otherlv_37=(Token)match(input,42,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getModelBodyStatementAccess().getMetadataKeyword_9_0());
                      			
                    }
                    // InternalKim.g:1198:4: ( (lv_metadata_38_0= ruleMetadata ) )
                    // InternalKim.g:1199:5: (lv_metadata_38_0= ruleMetadata )
                    {
                    // InternalKim.g:1199:5: (lv_metadata_38_0= ruleMetadata )
                    // InternalKim.g:1200:6: lv_metadata_38_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getMetadataMetadataParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_metadata_38_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_38_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelBodyStatement"


    // $ANTLR start "entryRuleClassification"
    // InternalKim.g:1222:1: entryRuleClassification returns [EObject current=null] : iv_ruleClassification= ruleClassification EOF ;
    public final EObject entryRuleClassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassification = null;


        try {
            // InternalKim.g:1222:55: (iv_ruleClassification= ruleClassification EOF )
            // InternalKim.g:1223:2: iv_ruleClassification= ruleClassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassification=ruleClassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassification"


    // $ANTLR start "ruleClassification"
    // InternalKim.g:1229:1: ruleClassification returns [EObject current=null] : ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) ;
    public final EObject ruleClassification() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifiers_0_0 = null;

        EObject lv_classifiers_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1235:2: ( ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) )
            // InternalKim.g:1236:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            {
            // InternalKim.g:1236:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            // InternalKim.g:1237:3: ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            {
            // InternalKim.g:1237:3: ( (lv_classifiers_0_0= ruleClassifier ) )
            // InternalKim.g:1238:4: (lv_classifiers_0_0= ruleClassifier )
            {
            // InternalKim.g:1238:4: (lv_classifiers_0_0= ruleClassifier )
            // InternalKim.g:1239:5: lv_classifiers_0_0= ruleClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_33);
            lv_classifiers_0_0=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassificationRule());
              					}
              					add(
              						current,
              						"classifiers",
              						lv_classifiers_0_0,
              						"org.integratedmodelling.kim.Kim.Classifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1256:3: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==27) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalKim.g:1257:4: ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) )
            	    {
            	    // InternalKim.g:1257:4: ( ( ',' )=>otherlv_1= ',' )
            	    // InternalKim.g:1258:5: ( ',' )=>otherlv_1= ','
            	    {
            	    otherlv_1=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_1, grammarAccess.getClassificationAccess().getCommaKeyword_1_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:1264:4: ( (lv_classifiers_2_0= ruleClassifier ) )
            	    // InternalKim.g:1265:5: (lv_classifiers_2_0= ruleClassifier )
            	    {
            	    // InternalKim.g:1265:5: (lv_classifiers_2_0= ruleClassifier )
            	    // InternalKim.g:1266:6: lv_classifiers_2_0= ruleClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_33);
            	    lv_classifiers_2_0=ruleClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getClassificationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"classifiers",
            	      							lv_classifiers_2_0,
            	      							"org.integratedmodelling.kim.Kim.Classifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassification"


    // $ANTLR start "entryRuleClassifier"
    // InternalKim.g:1288:1: entryRuleClassifier returns [EObject current=null] : iv_ruleClassifier= ruleClassifier EOF ;
    public final EObject entryRuleClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifier = null;


        try {
            // InternalKim.g:1288:51: (iv_ruleClassifier= ruleClassifier EOF )
            // InternalKim.g:1289:2: iv_ruleClassifier= ruleClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifier=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifier"


    // $ANTLR start "ruleClassifier"
    // InternalKim.g:1295:1: ruleClassifier returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) ;
    public final EObject ruleClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_otherwise_1_0=null;
        Token otherlv_2=null;
        Token lv_negated_3_0=null;
        EObject lv_declaration_0_0 = null;

        EObject lv_classifier_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1301:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) )
            // InternalKim.g:1302:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            {
            // InternalKim.g:1302:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            // InternalKim.g:1303:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            {
            // InternalKim.g:1303:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:1304:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:1304:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:1305:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassifierAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassifierRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1322:3: ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            int alt37=3;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==43) ) {
                alt37=1;
            }
            else if ( ((LA37_0>=44 && LA37_0<=45)) ) {
                alt37=2;
            }
            switch (alt37) {
                case 1 :
                    // InternalKim.g:1323:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    {
                    // InternalKim.g:1323:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    // InternalKim.g:1324:5: (lv_otherwise_1_0= 'otherwise' )
                    {
                    // InternalKim.g:1324:5: (lv_otherwise_1_0= 'otherwise' )
                    // InternalKim.g:1325:6: lv_otherwise_1_0= 'otherwise'
                    {
                    lv_otherwise_1_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_otherwise_1_0, grammarAccess.getClassifierAccess().getOtherwiseOtherwiseKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getClassifierRule());
                      						}
                      						setWithLastConsumed(current, "otherwise", true, "otherwise");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1338:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    {
                    // InternalKim.g:1338:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    // InternalKim.g:1339:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    {
                    // InternalKim.g:1339:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) )
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==44) ) {
                        alt36=1;
                    }
                    else if ( (LA36_0==45) ) {
                        alt36=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 0, input);

                        throw nvae;
                    }
                    switch (alt36) {
                        case 1 :
                            // InternalKim.g:1340:6: otherlv_2= 'if'
                            {
                            otherlv_2=(Token)match(input,44,FOLLOW_35); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getClassifierAccess().getIfKeyword_1_1_0_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1345:6: ( (lv_negated_3_0= 'unless' ) )
                            {
                            // InternalKim.g:1345:6: ( (lv_negated_3_0= 'unless' ) )
                            // InternalKim.g:1346:7: (lv_negated_3_0= 'unless' )
                            {
                            // InternalKim.g:1346:7: (lv_negated_3_0= 'unless' )
                            // InternalKim.g:1347:8: lv_negated_3_0= 'unless'
                            {
                            lv_negated_3_0=(Token)match(input,45,FOLLOW_35); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_negated_3_0, grammarAccess.getClassifierAccess().getNegatedUnlessKeyword_1_1_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getClassifierRule());
                              								}
                              								setWithLastConsumed(current, "negated", true, "unless");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:1360:5: ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    // InternalKim.g:1361:6: (lv_classifier_4_0= ruleClassifierRHS )
                    {
                    // InternalKim.g:1361:6: (lv_classifier_4_0= ruleClassifierRHS )
                    // InternalKim.g:1362:7: lv_classifier_4_0= ruleClassifierRHS
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassifierAccess().getClassifierClassifierRHSParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_classifier_4_0=ruleClassifierRHS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassifierRule());
                      							}
                      							set(
                      								current,
                      								"classifier",
                      								lv_classifier_4_0,
                      								"org.integratedmodelling.kim.Kim.ClassifierRHS");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifier"


    // $ANTLR start "entryRuleClassifierRHS"
    // InternalKim.g:1385:1: entryRuleClassifierRHS returns [EObject current=null] : iv_ruleClassifierRHS= ruleClassifierRHS EOF ;
    public final EObject entryRuleClassifierRHS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHS = null;


        try {
            // InternalKim.g:1385:54: (iv_ruleClassifierRHS= ruleClassifierRHS EOF )
            // InternalKim.g:1386:2: iv_ruleClassifierRHS= ruleClassifierRHS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHS=ruleClassifierRHS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHS; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHS"


    // $ANTLR start "ruleClassifierRHS"
    // InternalKim.g:1392:1: ruleClassifierRHS returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHS() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_nodata_21_0=null;
        Token lv_star_22_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;

        EObject lv_op_19_0 = null;

        EObject lv_expression_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1398:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) )
            // InternalKim.g:1399:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            {
            // InternalKim.g:1399:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            int alt42=10;
            alt42 = dfa42.predict(input);
            switch (alt42) {
                case 1 :
                    // InternalKim.g:1400:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1400:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==28) ) {
                        alt38=1;
                    }
                    else if ( (LA38_0==29) ) {
                        alt38=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 38, 0, input);

                        throw nvae;
                    }
                    switch (alt38) {
                        case 1 :
                            // InternalKim.g:1401:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1401:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1402:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1402:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1403:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1416:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1416:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1417:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1417:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1418:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1432:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1432:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1433:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1433:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1434:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1434:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1435:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1452:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt39=3;
                    int LA39_0 = input.LA(1);

                    if ( (LA39_0==46) ) {
                        alt39=1;
                    }
                    else if ( (LA39_0==47) ) {
                        alt39=2;
                    }
                    switch (alt39) {
                        case 1 :
                            // InternalKim.g:1453:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1453:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1454:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1454:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1455:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1468:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1473:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1474:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,36,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1480:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1481:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1485:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1486:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1503:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt40=3;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==46) ) {
                        alt40=1;
                    }
                    else if ( (LA40_0==47) ) {
                        alt40=2;
                    }
                    switch (alt40) {
                        case 1 :
                            // InternalKim.g:1504:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1504:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1505:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1505:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1506:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1519:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1526:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1526:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1527:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1527:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1528:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1546:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1546:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1547:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,48,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1551:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1552:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1552:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1553:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1572:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1572:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1573:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1573:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1574:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1591:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1591:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1592:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1592:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1593:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:1611:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    {
                    // InternalKim.g:1611:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    // InternalKim.g:1612:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
                    {
                    otherlv_14=(Token)match(input,38,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getClassifierRHSAccess().getLeftParenthesisKeyword_6_0());
                      			
                    }
                    // InternalKim.g:1616:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1617:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1617:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    // InternalKim.g:1618:6: lv_toResolve_15_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    lv_toResolve_15_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						add(
                      							current,
                      							"toResolve",
                      							lv_toResolve_15_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1635:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
                    loop41:
                    do {
                        int alt41=2;
                        int LA41_0 = input.LA(1);

                        if ( (LA41_0==27) ) {
                            alt41=1;
                        }


                        switch (alt41) {
                    	case 1 :
                    	    // InternalKim.g:1636:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:1636:5: ( ( ',' )=>otherlv_16= ',' )
                    	    // InternalKim.g:1637:6: ( ',' )=>otherlv_16= ','
                    	    {
                    	    otherlv_16=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_16, grammarAccess.getClassifierRHSAccess().getCommaKeyword_6_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:1643:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:1644:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:1644:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    // InternalKim.g:1645:7: lv_toResolve_17_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_28);
                    	    lv_toResolve_17_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"toResolve",
                    	      								lv_toResolve_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop41;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getClassifierRHSAccess().getRightParenthesisKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:1669:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:1669:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    // InternalKim.g:1670:4: ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) )
                    {
                    // InternalKim.g:1670:4: ( (lv_op_19_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:1671:5: (lv_op_19_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:1671:5: (lv_op_19_0= ruleREL_OPERATOR )
                    // InternalKim.g:1672:6: lv_op_19_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_op_19_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_19_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1689:4: ( (lv_expression_20_0= ruleNumber ) )
                    // InternalKim.g:1690:5: (lv_expression_20_0= ruleNumber )
                    {
                    // InternalKim.g:1690:5: (lv_expression_20_0= ruleNumber )
                    // InternalKim.g:1691:6: lv_expression_20_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_20_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_20_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:1710:3: ( (lv_nodata_21_0= 'unknown' ) )
                    {
                    // InternalKim.g:1710:3: ( (lv_nodata_21_0= 'unknown' ) )
                    // InternalKim.g:1711:4: (lv_nodata_21_0= 'unknown' )
                    {
                    // InternalKim.g:1711:4: (lv_nodata_21_0= 'unknown' )
                    // InternalKim.g:1712:5: lv_nodata_21_0= 'unknown'
                    {
                    lv_nodata_21_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_21_0, grammarAccess.getClassifierRHSAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_21_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:1725:3: ( (lv_star_22_0= '*' ) )
                    {
                    // InternalKim.g:1725:3: ( (lv_star_22_0= '*' ) )
                    // InternalKim.g:1726:4: (lv_star_22_0= '*' )
                    {
                    // InternalKim.g:1726:4: (lv_star_22_0= '*' )
                    // InternalKim.g:1727:5: lv_star_22_0= '*'
                    {
                    lv_star_22_0=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_22_0, grammarAccess.getClassifierRHSAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHS"


    // $ANTLR start "entryRuleClassifierRHSWithId"
    // InternalKim.g:1743:1: entryRuleClassifierRHSWithId returns [EObject current=null] : iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF ;
    public final EObject entryRuleClassifierRHSWithId() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHSWithId = null;


        try {
            // InternalKim.g:1743:60: (iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF )
            // InternalKim.g:1744:2: iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSWithIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHSWithId=ruleClassifierRHSWithId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHSWithId; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHSWithId"


    // $ANTLR start "ruleClassifierRHSWithId"
    // InternalKim.g:1750:1: ruleClassifierRHSWithId returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHSWithId() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token lv_id_14_1=null;
        Token lv_nodata_17_0=null;
        Token lv_star_18_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        AntlrDatatypeRuleToken lv_id_14_2 = null;

        EObject lv_op_15_0 = null;

        EObject lv_expression_16_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1756:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) ) )
            // InternalKim.g:1757:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )
            {
            // InternalKim.g:1757:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )
            int alt47=10;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // InternalKim.g:1758:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1758:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==28) ) {
                        alt43=1;
                    }
                    else if ( (LA43_0==29) ) {
                        alt43=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 43, 0, input);

                        throw nvae;
                    }
                    switch (alt43) {
                        case 1 :
                            // InternalKim.g:1759:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1759:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1760:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1760:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1761:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSWithIdAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1774:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1774:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1775:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1775:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1776:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSWithIdAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1790:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1790:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1791:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1791:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1792:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1792:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1793:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1810:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt44=3;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==46) ) {
                        alt44=1;
                    }
                    else if ( (LA44_0==47) ) {
                        alt44=2;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalKim.g:1811:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1811:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1812:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1812:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1813:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSWithIdAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1826:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSWithIdAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1831:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1832:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,36,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSWithIdAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1838:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1839:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1843:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1844:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1861:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt45=3;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==46) ) {
                        alt45=1;
                    }
                    else if ( (LA45_0==47) ) {
                        alt45=2;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalKim.g:1862:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1862:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1863:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1863:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1864:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSWithIdAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1877:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSWithIdAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1884:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1884:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1885:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1885:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1886:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1904:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1904:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1905:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,48,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSWithIdAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1909:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1910:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1910:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1911:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1930:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1930:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1931:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1931:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1932:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSWithIdAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1949:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1949:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1950:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1950:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1951:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:1969:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:1969:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
                    // InternalKim.g:1970:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
                    {
                    // InternalKim.g:1970:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
                    // InternalKim.g:1971:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
                    {
                    // InternalKim.g:1971:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
                    int alt46=2;
                    alt46 = dfa46.predict(input);
                    switch (alt46) {
                        case 1 :
                            // InternalKim.g:1972:6: lv_id_14_1= RULE_LOWERCASE_ID
                            {
                            lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_14_1, grammarAccess.getClassifierRHSWithIdAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_14_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1987:6: lv_id_14_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getIdPropertyIdParserRuleCall_6_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_14_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_14_2,
                              							"org.integratedmodelling.kim.Kim.PropertyId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2006:3: ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2006:3: ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) )
                    // InternalKim.g:2007:4: ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) )
                    {
                    // InternalKim.g:2007:4: ( (lv_op_15_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2008:5: (lv_op_15_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2008:5: (lv_op_15_0= ruleREL_OPERATOR )
                    // InternalKim.g:2009:6: lv_op_15_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_op_15_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_15_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2026:4: ( (lv_expression_16_0= ruleNumber ) )
                    // InternalKim.g:2027:5: (lv_expression_16_0= ruleNumber )
                    {
                    // InternalKim.g:2027:5: (lv_expression_16_0= ruleNumber )
                    // InternalKim.g:2028:6: lv_expression_16_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_16_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_16_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2047:3: ( (lv_nodata_17_0= 'unknown' ) )
                    {
                    // InternalKim.g:2047:3: ( (lv_nodata_17_0= 'unknown' ) )
                    // InternalKim.g:2048:4: (lv_nodata_17_0= 'unknown' )
                    {
                    // InternalKim.g:2048:4: (lv_nodata_17_0= 'unknown' )
                    // InternalKim.g:2049:5: lv_nodata_17_0= 'unknown'
                    {
                    lv_nodata_17_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_17_0, grammarAccess.getClassifierRHSWithIdAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_17_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:2062:3: ( (lv_star_18_0= '*' ) )
                    {
                    // InternalKim.g:2062:3: ( (lv_star_18_0= '*' ) )
                    // InternalKim.g:2063:4: (lv_star_18_0= '*' )
                    {
                    // InternalKim.g:2063:4: (lv_star_18_0= '*' )
                    // InternalKim.g:2064:5: lv_star_18_0= '*'
                    {
                    lv_star_18_0=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_18_0, grammarAccess.getClassifierRHSWithIdAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHSWithId"


    // $ANTLR start "entryRuleUrn"
    // InternalKim.g:2080:1: entryRuleUrn returns [EObject current=null] : iv_ruleUrn= ruleUrn EOF ;
    public final EObject entryRuleUrn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUrn = null;


        try {
            // InternalKim.g:2080:44: (iv_ruleUrn= ruleUrn EOF )
            // InternalKim.g:2081:2: iv_ruleUrn= ruleUrn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrn=ruleUrn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrn; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrn"


    // $ANTLR start "ruleUrn"
    // InternalKim.g:2087:1: ruleUrn returns [EObject current=null] : ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= RULE_STRING | lv_name_0_4= ruleLocalFilePath ) ) ) ;
    public final EObject ruleUrn() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_3=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        AntlrDatatypeRuleToken lv_name_0_2 = null;

        AntlrDatatypeRuleToken lv_name_0_4 = null;



        	enterRule();

        try {
            // InternalKim.g:2093:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= RULE_STRING | lv_name_0_4= ruleLocalFilePath ) ) ) )
            // InternalKim.g:2094:2: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= RULE_STRING | lv_name_0_4= ruleLocalFilePath ) ) )
            {
            // InternalKim.g:2094:2: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= RULE_STRING | lv_name_0_4= ruleLocalFilePath ) ) )
            // InternalKim.g:2095:3: ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= RULE_STRING | lv_name_0_4= ruleLocalFilePath ) )
            {
            // InternalKim.g:2095:3: ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= RULE_STRING | lv_name_0_4= ruleLocalFilePath ) )
            // InternalKim.g:2096:4: (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= RULE_STRING | lv_name_0_4= ruleLocalFilePath )
            {
            // InternalKim.g:2096:4: (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= RULE_STRING | lv_name_0_4= ruleLocalFilePath )
            int alt48=4;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalKim.g:2097:5: lv_name_0_1= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUrnAccess().getNamePathNameParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_1=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUrnRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_1,
                      						"org.integratedmodelling.kim.Kim.PathName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2113:5: lv_name_0_2= ruleUrnId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUrnAccess().getNameUrnIdParserRuleCall_0_1());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_2=ruleUrnId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUrnRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_2,
                      						"org.integratedmodelling.kim.Kim.UrnId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:2129:5: lv_name_0_3= RULE_STRING
                    {
                    lv_name_0_3=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_3, grammarAccess.getUrnAccess().getNameSTRINGTerminalRuleCall_0_2());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getUrnRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_3,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:2144:5: lv_name_0_4= ruleLocalFilePath
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUrnAccess().getNameLocalFilePathParserRuleCall_0_3());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_4=ruleLocalFilePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUrnRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_4,
                      						"org.integratedmodelling.kim.Kim.LocalFilePath");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrn"


    // $ANTLR start "entryRuleLookupTable"
    // InternalKim.g:2165:1: entryRuleLookupTable returns [EObject current=null] : iv_ruleLookupTable= ruleLookupTable EOF ;
    public final EObject entryRuleLookupTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupTable = null;


        try {
            // InternalKim.g:2165:52: (iv_ruleLookupTable= ruleLookupTable EOF )
            // InternalKim.g:2166:2: iv_ruleLookupTable= ruleLookupTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLookupTable=ruleLookupTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupTable"


    // $ANTLR start "ruleLookupTable"
    // InternalKim.g:2172:1: ruleLookupTable returns [EObject current=null] : ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' ) ;
    public final EObject ruleLookupTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_table_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2178:2: ( ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' ) )
            // InternalKim.g:2179:2: ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' )
            {
            // InternalKim.g:2179:2: ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' )
            // InternalKim.g:2180:3: () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}'
            {
            // InternalKim.g:2180:3: ()
            // InternalKim.g:2181:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLookupTableAccess().getLookupTableAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,50,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLookupTableAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:2194:3: ( (lv_table_2_0= ruleTable ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( ((LA49_0>=RULE_UPPERCASE_ID && LA49_0<=RULE_STRING)||(LA49_0>=RULE_EXPR && LA49_0<=RULE_LOWERCASE_DASHID)||(LA49_0>=28 && LA49_0<=29)||LA49_0==38||LA49_0==40||(LA49_0>=48 && LA49_0<=49)||LA49_0==53||(LA49_0>=76 && LA49_0<=79)||LA49_0==82||LA49_0==84||(LA49_0>=130 && LA49_0<=131)||(LA49_0>=139 && LA49_0<=140)||(LA49_0>=142 && LA49_0<=160)||(LA49_0>=251 && LA49_0<=252)) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalKim.g:2195:4: (lv_table_2_0= ruleTable )
                    {
                    // InternalKim.g:2195:4: (lv_table_2_0= ruleTable )
                    // InternalKim.g:2196:5: lv_table_2_0= ruleTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_41);
                    lv_table_2_0=ruleTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLookupTableRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_2_0,
                      						"org.integratedmodelling.kim.Kim.Table");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLookupTableAccess().getRightCurlyBracketRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupTable"


    // $ANTLR start "entryRuleTable"
    // InternalKim.g:2221:1: entryRuleTable returns [EObject current=null] : iv_ruleTable= ruleTable EOF ;
    public final EObject entryRuleTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTable = null;


        try {
            // InternalKim.g:2221:46: (iv_ruleTable= ruleTable EOF )
            // InternalKim.g:2222:2: iv_ruleTable= ruleTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTable=ruleTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTable"


    // $ANTLR start "ruleTable"
    // InternalKim.g:2228:1: ruleTable returns [EObject current=null] : ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) ;
    public final EObject ruleTable() throws RecognitionException {
        EObject current = null;

        Token this_SEPARATOR_1=null;
        Token otherlv_3=null;
        EObject lv_headers_0_0 = null;

        EObject lv_rows_2_0 = null;

        EObject lv_rows_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2234:2: ( ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) )
            // InternalKim.g:2235:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            {
            // InternalKim.g:2235:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            // InternalKim.g:2236:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            {
            // InternalKim.g:2236:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?
            int alt50=2;
            alt50 = dfa50.predict(input);
            switch (alt50) {
                case 1 :
                    // InternalKim.g:2237:4: ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR
                    {
                    // InternalKim.g:2237:4: ( (lv_headers_0_0= ruleHeaderRow ) )
                    // InternalKim.g:2238:5: (lv_headers_0_0= ruleHeaderRow )
                    {
                    // InternalKim.g:2238:5: (lv_headers_0_0= ruleHeaderRow )
                    // InternalKim.g:2239:6: lv_headers_0_0= ruleHeaderRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableAccess().getHeadersHeaderRowParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_headers_0_0=ruleHeaderRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableRule());
                      						}
                      						set(
                      							current,
                      							"headers",
                      							lv_headers_0_0,
                      							"org.integratedmodelling.kim.Kim.HeaderRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    this_SEPARATOR_1=(Token)match(input,RULE_SEPARATOR,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_SEPARATOR_1, grammarAccess.getTableAccess().getSEPARATORTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:2261:3: ( (lv_rows_2_0= ruleTableRow ) )
            // InternalKim.g:2262:4: (lv_rows_2_0= ruleTableRow )
            {
            // InternalKim.g:2262:4: (lv_rows_2_0= ruleTableRow )
            // InternalKim.g:2263:5: lv_rows_2_0= ruleTableRow
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_33);
            lv_rows_2_0=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRule());
              					}
              					add(
              						current,
              						"rows",
              						lv_rows_2_0,
              						"org.integratedmodelling.kim.Kim.TableRow");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2280:3: (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==27) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalKim.g:2281:4: otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) )
            	    {
            	    otherlv_3=(Token)match(input,27,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTableAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKim.g:2285:4: ( (lv_rows_4_0= ruleTableRow ) )
            	    // InternalKim.g:2286:5: (lv_rows_4_0= ruleTableRow )
            	    {
            	    // InternalKim.g:2286:5: (lv_rows_4_0= ruleTableRow )
            	    // InternalKim.g:2287:6: lv_rows_4_0= ruleTableRow
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_33);
            	    lv_rows_4_0=ruleTableRow();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"rows",
            	      							lv_rows_4_0,
            	      							"org.integratedmodelling.kim.Kim.TableRow");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTable"


    // $ANTLR start "entryRuleHeaderRow"
    // InternalKim.g:2309:1: entryRuleHeaderRow returns [EObject current=null] : iv_ruleHeaderRow= ruleHeaderRow EOF ;
    public final EObject entryRuleHeaderRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHeaderRow = null;


        try {
            // InternalKim.g:2309:50: (iv_ruleHeaderRow= ruleHeaderRow EOF )
            // InternalKim.g:2310:2: iv_ruleHeaderRow= ruleHeaderRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHeaderRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHeaderRow=ruleHeaderRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHeaderRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHeaderRow"


    // $ANTLR start "ruleHeaderRow"
    // InternalKim.g:2316:1: ruleHeaderRow returns [EObject current=null] : ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) ;
    public final EObject ruleHeaderRow() throws RecognitionException {
        EObject current = null;

        Token lv_elements_0_1=null;
        Token lv_elements_0_2=null;
        Token otherlv_1=null;
        Token lv_elements_2_1=null;
        Token lv_elements_2_2=null;


        	enterRule();

        try {
            // InternalKim.g:2322:2: ( ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) )
            // InternalKim.g:2323:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            {
            // InternalKim.g:2323:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            // InternalKim.g:2324:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            {
            // InternalKim.g:2324:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) )
            // InternalKim.g:2325:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            {
            // InternalKim.g:2325:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            // InternalKim.g:2326:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            {
            // InternalKim.g:2326:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_LOWERCASE_ID) ) {
                alt52=1;
            }
            else if ( (LA52_0==RULE_STRING) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // InternalKim.g:2327:6: lv_elements_0_1= RULE_LOWERCASE_ID
                    {
                    lv_elements_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2342:6: lv_elements_0_2= RULE_STRING
                    {
                    lv_elements_0_2=(Token)match(input,RULE_STRING,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_2,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:2359:3: (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==52) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalKim.g:2360:4: otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getHeaderRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2364:4: ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    // InternalKim.g:2365:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:2365:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    // InternalKim.g:2366:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    {
            	    // InternalKim.g:2366:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    int alt53=2;
            	    int LA53_0 = input.LA(1);

            	    if ( (LA53_0==RULE_LOWERCASE_ID) ) {
            	        alt53=1;
            	    }
            	    else if ( (LA53_0==RULE_STRING) ) {
            	        alt53=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 53, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt53) {
            	        case 1 :
            	            // InternalKim.g:2367:7: lv_elements_2_1= RULE_LOWERCASE_ID
            	            {
            	            lv_elements_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_43); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_1,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:2382:7: lv_elements_2_2= RULE_STRING
            	            {
            	            lv_elements_2_2=(Token)match(input,RULE_STRING,FOLLOW_43); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_2,
            	              								"org.eclipse.xtext.common.Terminals.STRING");
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHeaderRow"


    // $ANTLR start "entryRuleTableRow"
    // InternalKim.g:2404:1: entryRuleTableRow returns [EObject current=null] : iv_ruleTableRow= ruleTableRow EOF ;
    public final EObject entryRuleTableRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableRow = null;


        try {
            // InternalKim.g:2404:49: (iv_ruleTableRow= ruleTableRow EOF )
            // InternalKim.g:2405:2: iv_ruleTableRow= ruleTableRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableRow=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableRow"


    // $ANTLR start "ruleTableRow"
    // InternalKim.g:2411:1: ruleTableRow returns [EObject current=null] : ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) ;
    public final EObject ruleTableRow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_elements_0_0 = null;

        EObject lv_elements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2417:2: ( ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) )
            // InternalKim.g:2418:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            {
            // InternalKim.g:2418:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            // InternalKim.g:2419:3: ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            {
            // InternalKim.g:2419:3: ( (lv_elements_0_0= ruleTableClassifier ) )
            // InternalKim.g:2420:4: (lv_elements_0_0= ruleTableClassifier )
            {
            // InternalKim.g:2420:4: (lv_elements_0_0= ruleTableClassifier )
            // InternalKim.g:2421:5: lv_elements_0_0= ruleTableClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_43);
            lv_elements_0_0=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRowRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_0_0,
              						"org.integratedmodelling.kim.Kim.TableClassifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2438:3: (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==52) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalKim.g:2439:4: otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTableRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2443:4: ( (lv_elements_2_0= ruleTableClassifier ) )
            	    // InternalKim.g:2444:5: (lv_elements_2_0= ruleTableClassifier )
            	    {
            	    // InternalKim.g:2444:5: (lv_elements_2_0= ruleTableClassifier )
            	    // InternalKim.g:2445:6: lv_elements_2_0= ruleTableClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_43);
            	    lv_elements_2_0=ruleTableClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_2_0,
            	      							"org.integratedmodelling.kim.Kim.TableClassifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableRow"


    // $ANTLR start "entryRuleTableClassifier"
    // InternalKim.g:2467:1: entryRuleTableClassifier returns [EObject current=null] : iv_ruleTableClassifier= ruleTableClassifier EOF ;
    public final EObject entryRuleTableClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableClassifier = null;


        try {
            // InternalKim.g:2467:56: (iv_ruleTableClassifier= ruleTableClassifier EOF )
            // InternalKim.g:2468:2: iv_ruleTableClassifier= ruleTableClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableClassifier=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableClassifier"


    // $ANTLR start "ruleTableClassifier"
    // InternalKim.g:2474:1: ruleTableClassifier returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) ) ;
    public final EObject ruleTableClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_12=null;
        Token lv_string_14_0=null;
        Token lv_expr_18_0=null;
        Token lv_nodata_19_0=null;
        Token lv_star_20_0=null;
        Token lv_anything_21_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_quantity_10_0 = null;

        EObject lv_date_11_0 = null;

        EObject lv_set_13_0 = null;

        EObject lv_concept_15_0 = null;

        EObject lv_op_16_0 = null;

        EObject lv_expression_17_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2480:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) ) )
            // InternalKim.g:2481:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) )
            {
            // InternalKim.g:2481:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) )
            int alt59=13;
            alt59 = dfa59.predict(input);
            switch (alt59) {
                case 1 :
                    // InternalKim.g:2482:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:2482:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==28) ) {
                        alt56=1;
                    }
                    else if ( (LA56_0==29) ) {
                        alt56=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 56, 0, input);

                        throw nvae;
                    }
                    switch (alt56) {
                        case 1 :
                            // InternalKim.g:2483:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:2483:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:2484:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:2484:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:2485:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2498:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:2498:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:2499:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:2499:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:2500:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2514:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:2514:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:2515:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:2515:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:2516:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:2516:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:2517:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2534:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt57=3;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==46) ) {
                        alt57=1;
                    }
                    else if ( (LA57_0==47) ) {
                        alt57=2;
                    }
                    switch (alt57) {
                        case 1 :
                            // InternalKim.g:2535:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2535:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:2536:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:2536:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:2537:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2550:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:2555:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:2556:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,36,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTableClassifierAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:2562:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:2563:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:2567:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:2568:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2585:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt58=3;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==46) ) {
                        alt58=1;
                    }
                    else if ( (LA58_0==47) ) {
                        alt58=2;
                    }
                    switch (alt58) {
                        case 1 :
                            // InternalKim.g:2586:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2586:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:2587:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:2587:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:2588:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2601:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:2608:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:2608:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:2609:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:2609:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:2610:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:2628:3: ( (lv_quantity_10_0= ruleQuantity ) )
                    {
                    // InternalKim.g:2628:3: ( (lv_quantity_10_0= ruleQuantity ) )
                    // InternalKim.g:2629:4: (lv_quantity_10_0= ruleQuantity )
                    {
                    // InternalKim.g:2629:4: (lv_quantity_10_0= ruleQuantity )
                    // InternalKim.g:2630:5: lv_quantity_10_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getQuantityQuantityParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_10_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_10_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:2648:3: ( (lv_date_11_0= ruleDate ) )
                    {
                    // InternalKim.g:2648:3: ( (lv_date_11_0= ruleDate ) )
                    // InternalKim.g:2649:4: (lv_date_11_0= ruleDate )
                    {
                    // InternalKim.g:2649:4: (lv_date_11_0= ruleDate )
                    // InternalKim.g:2650:5: lv_date_11_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getDateDateParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_11_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_11_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:2668:3: (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) )
                    {
                    // InternalKim.g:2668:3: (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) )
                    // InternalKim.g:2669:4: otherlv_12= 'in' ( (lv_set_13_0= ruleList ) )
                    {
                    otherlv_12=(Token)match(input,48,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getTableClassifierAccess().getInKeyword_5_0());
                      			
                    }
                    // InternalKim.g:2673:4: ( (lv_set_13_0= ruleList ) )
                    // InternalKim.g:2674:5: (lv_set_13_0= ruleList )
                    {
                    // InternalKim.g:2674:5: (lv_set_13_0= ruleList )
                    // InternalKim.g:2675:6: lv_set_13_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getSetListParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_13_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_13_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:2694:3: ( (lv_string_14_0= RULE_STRING ) )
                    {
                    // InternalKim.g:2694:3: ( (lv_string_14_0= RULE_STRING ) )
                    // InternalKim.g:2695:4: (lv_string_14_0= RULE_STRING )
                    {
                    // InternalKim.g:2695:4: (lv_string_14_0= RULE_STRING )
                    // InternalKim.g:2696:5: lv_string_14_0= RULE_STRING
                    {
                    lv_string_14_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_14_0, grammarAccess.getTableClassifierAccess().getStringSTRINGTerminalRuleCall_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_14_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2713:3: ( (lv_concept_15_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:2713:3: ( (lv_concept_15_0= ruleConceptDeclaration ) )
                    // InternalKim.g:2714:4: (lv_concept_15_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:2714:4: (lv_concept_15_0= ruleConceptDeclaration )
                    // InternalKim.g:2715:5: lv_concept_15_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getConceptConceptDeclarationParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_15_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_15_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2733:3: ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2733:3: ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) )
                    // InternalKim.g:2734:4: ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) )
                    {
                    // InternalKim.g:2734:4: ( (lv_op_16_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2735:5: (lv_op_16_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2735:5: (lv_op_16_0= ruleREL_OPERATOR )
                    // InternalKim.g:2736:6: lv_op_16_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getOpREL_OPERATORParserRuleCall_8_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_op_16_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_16_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2753:4: ( (lv_expression_17_0= ruleNumber ) )
                    // InternalKim.g:2754:5: (lv_expression_17_0= ruleNumber )
                    {
                    // InternalKim.g:2754:5: (lv_expression_17_0= ruleNumber )
                    // InternalKim.g:2755:6: lv_expression_17_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getExpressionNumberParserRuleCall_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_17_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_17_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:2774:3: ( (lv_expr_18_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:2774:3: ( (lv_expr_18_0= RULE_EXPR ) )
                    // InternalKim.g:2775:4: (lv_expr_18_0= RULE_EXPR )
                    {
                    // InternalKim.g:2775:4: (lv_expr_18_0= RULE_EXPR )
                    // InternalKim.g:2776:5: lv_expr_18_0= RULE_EXPR
                    {
                    lv_expr_18_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_18_0, grammarAccess.getTableClassifierAccess().getExprEXPRTerminalRuleCall_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_18_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:2793:3: ( (lv_nodata_19_0= 'unknown' ) )
                    {
                    // InternalKim.g:2793:3: ( (lv_nodata_19_0= 'unknown' ) )
                    // InternalKim.g:2794:4: (lv_nodata_19_0= 'unknown' )
                    {
                    // InternalKim.g:2794:4: (lv_nodata_19_0= 'unknown' )
                    // InternalKim.g:2795:5: lv_nodata_19_0= 'unknown'
                    {
                    lv_nodata_19_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_19_0, grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_19_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:2808:3: ( (lv_star_20_0= '*' ) )
                    {
                    // InternalKim.g:2808:3: ( (lv_star_20_0= '*' ) )
                    // InternalKim.g:2809:4: (lv_star_20_0= '*' )
                    {
                    // InternalKim.g:2809:4: (lv_star_20_0= '*' )
                    // InternalKim.g:2810:5: lv_star_20_0= '*'
                    {
                    lv_star_20_0=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_20_0, grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_11_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:2823:3: ( (lv_anything_21_0= '#' ) )
                    {
                    // InternalKim.g:2823:3: ( (lv_anything_21_0= '#' ) )
                    // InternalKim.g:2824:4: (lv_anything_21_0= '#' )
                    {
                    // InternalKim.g:2824:4: (lv_anything_21_0= '#' )
                    // InternalKim.g:2825:5: lv_anything_21_0= '#'
                    {
                    lv_anything_21_0=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_anything_21_0, grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_12_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "anything", true, "#");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableClassifier"


    // $ANTLR start "entryRuleActionSpecification"
    // InternalKim.g:2841:1: entryRuleActionSpecification returns [EObject current=null] : iv_ruleActionSpecification= ruleActionSpecification EOF ;
    public final EObject entryRuleActionSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionSpecification = null;


        try {
            // InternalKim.g:2841:60: (iv_ruleActionSpecification= ruleActionSpecification EOF )
            // InternalKim.g:2842:2: iv_ruleActionSpecification= ruleActionSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionSpecification=ruleActionSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionSpecification"


    // $ANTLR start "ruleActionSpecification"
    // InternalKim.g:2848:1: ruleActionSpecification returns [EObject current=null] : ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) ) ;
    public final EObject ruleActionSpecification() throws RecognitionException {
        EObject current = null;

        Token lv_integrated_0_0=null;
        Token lv_over_1_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_trigger_8_0=null;
        Token lv_initialization_9_0=null;
        Token lv_instantiation_10_0=null;
        Token lv_termination_11_0=null;
        Token otherlv_13=null;
        Token lv_anyContextEvent_14_0=null;
        Token lv_relatedEventContext_15_0=null;
        Token otherlv_19=null;
        EObject lv_domain_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;

        EObject lv_event_12_0 = null;

        EObject lv_eventContext_16_0 = null;

        EObject lv_parameters_17_0 = null;

        EObject lv_actions_18_0 = null;

        EObject lv_actions_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2854:2: ( ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) ) )
            // InternalKim.g:2855:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) )
            {
            // InternalKim.g:2855:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( ((LA70_0>=54 && LA70_0<=55)) ) {
                alt70=1;
            }
            else if ( (LA70_0==56||(LA70_0>=62 && LA70_0<=67)) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalKim.g:2856:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    {
                    // InternalKim.g:2856:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    // InternalKim.g:2857:4: ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    {
                    // InternalKim.g:2857:4: ( (lv_integrated_0_0= 'aggregated' ) )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==54) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalKim.g:2858:5: (lv_integrated_0_0= 'aggregated' )
                            {
                            // InternalKim.g:2858:5: (lv_integrated_0_0= 'aggregated' )
                            // InternalKim.g:2859:6: lv_integrated_0_0= 'aggregated'
                            {
                            lv_integrated_0_0=(Token)match(input,54,FOLLOW_45); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_integrated_0_0, grammarAccess.getActionSpecificationAccess().getIntegratedAggregatedKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getActionSpecificationRule());
                              						}
                              						setWithLastConsumed(current, "integrated", true, "aggregated");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:2871:4: ( (lv_over_1_0= 'over' ) )
                    // InternalKim.g:2872:5: (lv_over_1_0= 'over' )
                    {
                    // InternalKim.g:2872:5: (lv_over_1_0= 'over' )
                    // InternalKim.g:2873:6: lv_over_1_0= 'over'
                    {
                    lv_over_1_0=(Token)match(input,55,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_over_1_0, grammarAccess.getActionSpecificationAccess().getOverOverKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionSpecificationRule());
                      						}
                      						setWithLastConsumed(current, "over", true, "over");
                      					
                    }

                    }


                    }

                    // InternalKim.g:2885:4: ( (lv_domain_2_0= ruleFunctionOrID ) )
                    // InternalKim.g:2886:5: (lv_domain_2_0= ruleFunctionOrID )
                    {
                    // InternalKim.g:2886:5: (lv_domain_2_0= ruleFunctionOrID )
                    // InternalKim.g:2887:6: lv_domain_2_0= ruleFunctionOrID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_46);
                    lv_domain_2_0=ruleFunctionOrID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_2_0,
                      							"org.integratedmodelling.kim.Kim.FunctionOrID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2904:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )*
                    loop61:
                    do {
                        int alt61=2;
                        int LA61_0 = input.LA(1);

                        if ( (LA61_0==27) ) {
                            alt61=1;
                        }


                        switch (alt61) {
                    	case 1 :
                    	    // InternalKim.g:2905:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    {
                    	    // InternalKim.g:2905:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:2906:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,27,FOLLOW_25); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_3_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:2912:5: ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    // InternalKim.g:2913:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    {
                    	    // InternalKim.g:2913:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    // InternalKim.g:2914:7: lv_domain_4_0= ruleFunctionOrID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_46);
                    	    lv_domain_4_0=ruleFunctionOrID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_4_0,
                    	      								"org.integratedmodelling.kim.Kim.FunctionOrID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop61;
                        }
                    } while (true);

                    // InternalKim.g:2932:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    int alt63=2;
                    alt63 = dfa63.predict(input);
                    switch (alt63) {
                        case 1 :
                            // InternalKim.g:2933:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            {
                            // InternalKim.g:2933:5: ( (lv_actions_5_0= ruleAction ) )
                            // InternalKim.g:2934:6: (lv_actions_5_0= ruleAction )
                            {
                            // InternalKim.g:2934:6: (lv_actions_5_0= ruleAction )
                            // InternalKim.g:2935:7: lv_actions_5_0= ruleAction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
                              						
                            }
                            pushFollow(FOLLOW_33);
                            lv_actions_5_0=ruleAction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              							}
                              							add(
                              								current,
                              								"actions",
                              								lv_actions_5_0,
                              								"org.integratedmodelling.kim.Kim.Action");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKim.g:2952:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            loop62:
                            do {
                                int alt62=2;
                                int LA62_0 = input.LA(1);

                                if ( (LA62_0==27) ) {
                                    alt62=1;
                                }


                                switch (alt62) {
                            	case 1 :
                            	    // InternalKim.g:2953:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
                            	    {
                            	    // InternalKim.g:2953:6: ( ( ',' )=>otherlv_6= ',' )
                            	    // InternalKim.g:2954:7: ( ',' )=>otherlv_6= ','
                            	    {
                            	    otherlv_6=(Token)match(input,27,FOLLOW_47); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_6, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_4_1_0());
                            	      						
                            	    }

                            	    }

                            	    // InternalKim.g:2960:6: ( (lv_actions_7_0= ruleAction ) )
                            	    // InternalKim.g:2961:7: (lv_actions_7_0= ruleAction )
                            	    {
                            	    // InternalKim.g:2961:7: (lv_actions_7_0= ruleAction )
                            	    // InternalKim.g:2962:8: lv_actions_7_0= ruleAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_33);
                            	    lv_actions_7_0=ruleAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"actions",
                            	      									lv_actions_7_0,
                            	      									"org.integratedmodelling.kim.Kim.Action");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop62;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2983:3: ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* )
                    {
                    // InternalKim.g:2983:3: ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* )
                    // InternalKim.g:2984:4: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )*
                    {
                    // InternalKim.g:2984:4: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )?
                    int alt68=2;
                    int LA68_0 = input.LA(1);

                    if ( (LA68_0==56) ) {
                        alt68=1;
                    }
                    switch (alt68) {
                        case 1 :
                            // InternalKim.g:2985:5: ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )?
                            {
                            // InternalKim.g:2985:5: ( (lv_trigger_8_0= 'on' ) )
                            // InternalKim.g:2986:6: (lv_trigger_8_0= 'on' )
                            {
                            // InternalKim.g:2986:6: (lv_trigger_8_0= 'on' )
                            // InternalKim.g:2987:7: lv_trigger_8_0= 'on'
                            {
                            lv_trigger_8_0=(Token)match(input,56,FOLLOW_48); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_trigger_8_0, grammarAccess.getActionSpecificationAccess().getTriggerOnKeyword_1_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "trigger", true, "on");
                              						
                            }

                            }


                            }

                            // InternalKim.g:2999:5: ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) )
                            int alt66=4;
                            switch ( input.LA(1) ) {
                            case 57:
                                {
                                alt66=1;
                                }
                                break;
                            case 58:
                                {
                                alt66=2;
                                }
                                break;
                            case 59:
                                {
                                alt66=3;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                            case RULE_LOWERCASE_ID:
                            case RULE_CAMELCASE_ID:
                            case RULE_LOWERCASE_DASHID:
                            case 38:
                            case 130:
                            case 131:
                            case 139:
                            case 140:
                            case 142:
                            case 143:
                            case 144:
                            case 145:
                            case 146:
                            case 147:
                            case 148:
                            case 149:
                            case 150:
                            case 151:
                            case 152:
                            case 153:
                            case 154:
                            case 155:
                            case 156:
                            case 157:
                            case 158:
                            case 159:
                            case 160:
                                {
                                alt66=4;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 66, 0, input);

                                throw nvae;
                            }

                            switch (alt66) {
                                case 1 :
                                    // InternalKim.g:3000:6: ( (lv_initialization_9_0= 'definition' ) )
                                    {
                                    // InternalKim.g:3000:6: ( (lv_initialization_9_0= 'definition' ) )
                                    // InternalKim.g:3001:7: (lv_initialization_9_0= 'definition' )
                                    {
                                    // InternalKim.g:3001:7: (lv_initialization_9_0= 'definition' )
                                    // InternalKim.g:3002:8: lv_initialization_9_0= 'definition'
                                    {
                                    lv_initialization_9_0=(Token)match(input,57,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_initialization_9_0, grammarAccess.getActionSpecificationAccess().getInitializationDefinitionKeyword_1_0_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "initialization", true, "definition");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3015:6: ( (lv_instantiation_10_0= 'instantiation' ) )
                                    {
                                    // InternalKim.g:3015:6: ( (lv_instantiation_10_0= 'instantiation' ) )
                                    // InternalKim.g:3016:7: (lv_instantiation_10_0= 'instantiation' )
                                    {
                                    // InternalKim.g:3016:7: (lv_instantiation_10_0= 'instantiation' )
                                    // InternalKim.g:3017:8: lv_instantiation_10_0= 'instantiation'
                                    {
                                    lv_instantiation_10_0=(Token)match(input,58,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_instantiation_10_0, grammarAccess.getActionSpecificationAccess().getInstantiationInstantiationKeyword_1_0_1_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "instantiation", true, "instantiation");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3030:6: ( (lv_termination_11_0= 'termination' ) )
                                    {
                                    // InternalKim.g:3030:6: ( (lv_termination_11_0= 'termination' ) )
                                    // InternalKim.g:3031:7: (lv_termination_11_0= 'termination' )
                                    {
                                    // InternalKim.g:3031:7: (lv_termination_11_0= 'termination' )
                                    // InternalKim.g:3032:8: lv_termination_11_0= 'termination'
                                    {
                                    lv_termination_11_0=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_termination_11_0, grammarAccess.getActionSpecificationAccess().getTerminationTerminationKeyword_1_0_1_2_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "termination", true, "termination");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 4 :
                                    // InternalKim.g:3045:6: ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? )
                                    {
                                    // InternalKim.g:3045:6: ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? )
                                    // InternalKim.g:3046:7: ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )?
                                    {
                                    // InternalKim.g:3046:7: ( (lv_event_12_0= ruleConceptDeclaration ) )
                                    // InternalKim.g:3047:8: (lv_event_12_0= ruleConceptDeclaration )
                                    {
                                    // InternalKim.g:3047:8: (lv_event_12_0= ruleConceptDeclaration )
                                    // InternalKim.g:3048:9: lv_event_12_0= ruleConceptDeclaration
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventConceptDeclarationParserRuleCall_1_0_1_3_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_50);
                                    lv_event_12_0=ruleConceptDeclaration();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                      									}
                                      									set(
                                      										current,
                                      										"event",
                                      										lv_event_12_0,
                                      										"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:3065:7: (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )?
                                    int alt65=2;
                                    int LA65_0 = input.LA(1);

                                    if ( (LA65_0==48) ) {
                                        alt65=1;
                                    }
                                    switch (alt65) {
                                        case 1 :
                                            // InternalKim.g:3066:8: otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) )
                                            {
                                            otherlv_13=(Token)match(input,48,FOLLOW_51); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              								newLeafNode(otherlv_13, grammarAccess.getActionSpecificationAccess().getInKeyword_1_0_1_3_1_0());
                                              							
                                            }
                                            // InternalKim.g:3070:8: ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) )
                                            int alt64=2;
                                            int LA64_0 = input.LA(1);

                                            if ( (LA64_0==60) ) {
                                                alt64=1;
                                            }
                                            else if ( (LA64_0==61) ) {
                                                alt64=2;
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return current;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 64, 0, input);

                                                throw nvae;
                                            }
                                            switch (alt64) {
                                                case 1 :
                                                    // InternalKim.g:3071:9: ( (lv_anyContextEvent_14_0= 'context' ) )
                                                    {
                                                    // InternalKim.g:3071:9: ( (lv_anyContextEvent_14_0= 'context' ) )
                                                    // InternalKim.g:3072:10: (lv_anyContextEvent_14_0= 'context' )
                                                    {
                                                    // InternalKim.g:3072:10: (lv_anyContextEvent_14_0= 'context' )
                                                    // InternalKim.g:3073:11: lv_anyContextEvent_14_0= 'context'
                                                    {
                                                    lv_anyContextEvent_14_0=(Token)match(input,60,FOLLOW_8); if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      											newLeafNode(lv_anyContextEvent_14_0, grammarAccess.getActionSpecificationAccess().getAnyContextEventContextKeyword_1_0_1_3_1_1_0_0());
                                                      										
                                                    }
                                                    if ( state.backtracking==0 ) {

                                                      											if (current==null) {
                                                      												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                                      											}
                                                      											setWithLastConsumed(current, "anyContextEvent", true, "context");
                                                      										
                                                    }

                                                    }


                                                    }


                                                    }
                                                    break;
                                                case 2 :
                                                    // InternalKim.g:3086:9: ( (lv_relatedEventContext_15_0= 'related' ) )
                                                    {
                                                    // InternalKim.g:3086:9: ( (lv_relatedEventContext_15_0= 'related' ) )
                                                    // InternalKim.g:3087:10: (lv_relatedEventContext_15_0= 'related' )
                                                    {
                                                    // InternalKim.g:3087:10: (lv_relatedEventContext_15_0= 'related' )
                                                    // InternalKim.g:3088:11: lv_relatedEventContext_15_0= 'related'
                                                    {
                                                    lv_relatedEventContext_15_0=(Token)match(input,61,FOLLOW_8); if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      											newLeafNode(lv_relatedEventContext_15_0, grammarAccess.getActionSpecificationAccess().getRelatedEventContextRelatedKeyword_1_0_1_3_1_1_1_0());
                                                      										
                                                    }
                                                    if ( state.backtracking==0 ) {

                                                      											if (current==null) {
                                                      												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                                      											}
                                                      											setWithLastConsumed(current, "relatedEventContext", true, "related");
                                                      										
                                                    }

                                                    }


                                                    }


                                                    }
                                                    break;

                                            }

                                            // InternalKim.g:3101:8: ( (lv_eventContext_16_0= ruleConceptDeclaration ) )
                                            // InternalKim.g:3102:9: (lv_eventContext_16_0= ruleConceptDeclaration )
                                            {
                                            // InternalKim.g:3102:9: (lv_eventContext_16_0= ruleConceptDeclaration )
                                            // InternalKim.g:3103:10: lv_eventContext_16_0= ruleConceptDeclaration
                                            {
                                            if ( state.backtracking==0 ) {

                                              										newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventContextConceptDeclarationParserRuleCall_1_0_1_3_1_2_0());
                                              									
                                            }
                                            pushFollow(FOLLOW_49);
                                            lv_eventContext_16_0=ruleConceptDeclaration();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                              										}
                                              										set(
                                              											current,
                                              											"eventContext",
                                              											lv_eventContext_16_0,
                                              											"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                              										afterParserOrEnumRuleCall();
                                              									
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalKim.g:3123:5: ( (lv_parameters_17_0= ruleList ) )?
                            int alt67=2;
                            int LA67_0 = input.LA(1);

                            if ( (LA67_0==38) ) {
                                alt67=1;
                            }
                            switch (alt67) {
                                case 1 :
                                    // InternalKim.g:3124:6: (lv_parameters_17_0= ruleList )
                                    {
                                    // InternalKim.g:3124:6: (lv_parameters_17_0= ruleList )
                                    // InternalKim.g:3125:7: lv_parameters_17_0= ruleList
                                    {
                                    if ( state.backtracking==0 ) {

                                      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_0_2_0());
                                      						
                                    }
                                    pushFollow(FOLLOW_47);
                                    lv_parameters_17_0=ruleList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                      							}
                                      							set(
                                      								current,
                                      								"parameters",
                                      								lv_parameters_17_0,
                                      								"org.integratedmodelling.kim.Kim.List");
                                      							afterParserOrEnumRuleCall();
                                      						
                                    }

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalKim.g:3143:4: ( (lv_actions_18_0= ruleAction ) )
                    // InternalKim.g:3144:5: (lv_actions_18_0= ruleAction )
                    {
                    // InternalKim.g:3144:5: (lv_actions_18_0= ruleAction )
                    // InternalKim.g:3145:6: lv_actions_18_0= ruleAction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_actions_18_0=ruleAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"actions",
                      							lv_actions_18_0,
                      							"org.integratedmodelling.kim.Kim.Action");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3162:4: ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )*
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==27) ) {
                            alt69=1;
                        }


                        switch (alt69) {
                    	case 1 :
                    	    // InternalKim.g:3163:5: ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) )
                    	    {
                    	    // InternalKim.g:3163:5: ( ( ',' )=>otherlv_19= ',' )
                    	    // InternalKim.g:3164:6: ( ',' )=>otherlv_19= ','
                    	    {
                    	    otherlv_19=(Token)match(input,27,FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_19, grammarAccess.getActionSpecificationAccess().getCommaKeyword_1_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:3170:5: ( (lv_actions_20_0= ruleAction ) )
                    	    // InternalKim.g:3171:6: (lv_actions_20_0= ruleAction )
                    	    {
                    	    // InternalKim.g:3171:6: (lv_actions_20_0= ruleAction )
                    	    // InternalKim.g:3172:7: lv_actions_20_0= ruleAction
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_33);
                    	    lv_actions_20_0=ruleAction();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"actions",
                    	      								lv_actions_20_0,
                    	      								"org.integratedmodelling.kim.Kim.Action");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop69;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionSpecification"


    // $ANTLR start "entryRuleFunctionOrID"
    // InternalKim.g:3195:1: entryRuleFunctionOrID returns [EObject current=null] : iv_ruleFunctionOrID= ruleFunctionOrID EOF ;
    public final EObject entryRuleFunctionOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionOrID = null;


        try {
            // InternalKim.g:3195:53: (iv_ruleFunctionOrID= ruleFunctionOrID EOF )
            // InternalKim.g:3196:2: iv_ruleFunctionOrID= ruleFunctionOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionOrID=ruleFunctionOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionOrID"


    // $ANTLR start "ruleFunctionOrID"
    // InternalKim.g:3202:1: ruleFunctionOrID returns [EObject current=null] : ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) ;
    public final EObject ruleFunctionOrID() throws RecognitionException {
        EObject current = null;

        Token lv_functionId_1_1=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_functionId_1_2 = null;



        	enterRule();

        try {
            // InternalKim.g:3208:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) )
            // InternalKim.g:3209:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            {
            // InternalKim.g:3209:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            int alt72=2;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                int LA72_1 = input.LA(2);

                if ( (synpred127_InternalKim()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                int LA72_2 = input.LA(2);

                if ( (synpred127_InternalKim()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                int LA72_3 = input.LA(2);

                if ( (synpred127_InternalKim()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }

            switch (alt72) {
                case 1 :
                    // InternalKim.g:3210:3: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:3210:3: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:3211:4: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:3211:4: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:3212:5: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_0_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3230:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:3230:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    // InternalKim.g:3231:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:3231:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    // InternalKim.g:3232:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    {
                    // InternalKim.g:3232:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    int alt71=2;
                    int LA71_0 = input.LA(1);

                    if ( (LA71_0==RULE_LOWERCASE_ID) ) {
                        int LA71_1 = input.LA(2);

                        if ( (LA71_1==EOF||(LA71_1>=RULE_UPPERCASE_ID && LA71_1<=RULE_STRING)||LA71_1==RULE_CAMELCASE_ID||LA71_1==RULE_LOWERCASE_DASHID||LA71_1==20||LA71_1==27||LA71_1==31||LA71_1==38||(LA71_1>=41 && LA71_1<=42)||(LA71_1>=54 && LA71_1<=56)||(LA71_1>=62 && LA71_1<=67)||LA71_1==104||(LA71_1>=130 && LA71_1<=131)||(LA71_1>=139 && LA71_1<=140)||(LA71_1>=142 && LA71_1<=160)) ) {
                            alt71=1;
                        }
                        else if ( (LA71_1==105||LA71_1==108) ) {
                            alt71=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 71, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA71_0==RULE_UPPERCASE_ID||LA71_0==RULE_LOWERCASE_DASHID) ) {
                        alt71=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 71, 0, input);

                        throw nvae;
                    }
                    switch (alt71) {
                        case 1 :
                            // InternalKim.g:3233:6: lv_functionId_1_1= RULE_LOWERCASE_ID
                            {
                            lv_functionId_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_functionId_1_1, grammarAccess.getFunctionOrIDAccess().getFunctionIdLOWERCASE_IDTerminalRuleCall_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFunctionOrIDRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"functionId",
                              							lv_functionId_1_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3248:6: lv_functionId_1_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionIdNamespaceIdParserRuleCall_1_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_functionId_1_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                              						}
                              						set(
                              							current,
                              							"functionId",
                              							lv_functionId_1_2,
                              							"org.integratedmodelling.kim.Kim.NamespaceId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionOrID"


    // $ANTLR start "entryRuleAction"
    // InternalKim.g:3270:1: entryRuleAction returns [EObject current=null] : iv_ruleAction= ruleAction EOF ;
    public final EObject entryRuleAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAction = null;


        try {
            // InternalKim.g:3270:47: (iv_ruleAction= ruleAction EOF )
            // InternalKim.g:3271:2: iv_ruleAction= ruleAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAction=ruleAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAction"


    // $ANTLR start "ruleAction"
    // InternalKim.g:3277:1: ruleAction returns [EObject current=null] : ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) ) ;
    public final EObject ruleAction() throws RecognitionException {
        EObject current = null;

        Token lv_set_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_conditionNegative_5_0=null;
        Token lv_integrate_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_conditionNegative_12_0=null;
        Token lv_do_14_1=null;
        Token lv_do_14_2=null;
        Token lv_do_14_3=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_conditionNegative_19_0=null;
        Token lv_move_21_0=null;
        Token lv_away_23_0=null;
        EObject lv_assignments_1_0 = null;

        EObject lv_assignments_3_0 = null;

        EObject lv_condition_6_0 = null;

        EObject lv_assignments_8_0 = null;

        EObject lv_assignments_10_0 = null;

        EObject lv_condition_13_0 = null;

        EObject lv_executed_15_0 = null;

        EObject lv_executed_17_0 = null;

        EObject lv_condition_20_0 = null;

        EObject lv_where_22_0 = null;

        EObject lv_condition_24_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3283:2: ( ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) ) )
            // InternalKim.g:3284:2: ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) )
            {
            // InternalKim.g:3284:2: ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) )
            int alt85=4;
            switch ( input.LA(1) ) {
            case 62:
                {
                alt85=1;
                }
                break;
            case 63:
                {
                alt85=2;
                }
                break;
            case 64:
            case 65:
            case 66:
                {
                alt85=3;
                }
                break;
            case 67:
                {
                alt85=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }

            switch (alt85) {
                case 1 :
                    // InternalKim.g:3285:3: ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3285:3: ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? )
                    // InternalKim.g:3286:4: ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3286:4: ( (lv_set_0_0= 'set' ) )
                    // InternalKim.g:3287:5: (lv_set_0_0= 'set' )
                    {
                    // InternalKim.g:3287:5: (lv_set_0_0= 'set' )
                    // InternalKim.g:3288:6: lv_set_0_0= 'set'
                    {
                    lv_set_0_0=(Token)match(input,62,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_set_0_0, grammarAccess.getActionAccess().getSetSetKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "set", true, "set");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3300:4: ( (lv_assignments_1_0= ruleValueAssignment ) )
                    // InternalKim.g:3301:5: (lv_assignments_1_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3301:5: (lv_assignments_1_0= ruleValueAssignment )
                    // InternalKim.g:3302:6: lv_assignments_1_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    lv_assignments_1_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_1_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3319:4: (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )*
                    loop73:
                    do {
                        int alt73=2;
                        int LA73_0 = input.LA(1);

                        if ( (LA73_0==27) ) {
                            int LA73_2 = input.LA(2);

                            if ( ((LA73_2>=RULE_UPPERCASE_ID && LA73_2<=RULE_STRING)||(LA73_2>=RULE_EXPR && LA73_2<=RULE_ID)||(LA73_2>=27 && LA73_2<=29)||LA73_2==36||LA73_2==38||LA73_2==49||(LA73_2>=251 && LA73_2<=252)) ) {
                                alt73=1;
                            }


                        }


                        switch (alt73) {
                    	case 1 :
                    	    // InternalKim.g:3320:5: otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_2=(Token)match(input,27,FOLLOW_52); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getActionAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3324:5: ( (lv_assignments_3_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3325:6: (lv_assignments_3_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3325:6: (lv_assignments_3_0= ruleValueAssignment )
                    	    // InternalKim.g:3326:7: lv_assignments_3_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_53);
                    	    lv_assignments_3_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_3_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop73;
                        }
                    } while (true);

                    // InternalKim.g:3344:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )?
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( ((LA75_0>=44 && LA75_0<=45)) ) {
                        alt75=1;
                    }
                    switch (alt75) {
                        case 1 :
                            // InternalKim.g:3345:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) )
                            {
                            // InternalKim.g:3345:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) )
                            // InternalKim.g:3346:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3356:6: (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) )
                            int alt74=2;
                            int LA74_0 = input.LA(1);

                            if ( (LA74_0==44) ) {
                                alt74=1;
                            }
                            else if ( (LA74_0==45) ) {
                                alt74=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 74, 0, input);

                                throw nvae;
                            }
                            switch (alt74) {
                                case 1 :
                                    // InternalKim.g:3357:7: otherlv_4= 'if'
                                    {
                                    otherlv_4=(Token)match(input,44,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_4, grammarAccess.getActionAccess().getIfKeyword_0_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3362:7: ( (lv_conditionNegative_5_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3362:7: ( (lv_conditionNegative_5_0= 'unless' ) )
                                    // InternalKim.g:3363:8: (lv_conditionNegative_5_0= 'unless' )
                                    {
                                    // InternalKim.g:3363:8: (lv_conditionNegative_5_0= 'unless' )
                                    // InternalKim.g:3364:9: lv_conditionNegative_5_0= 'unless'
                                    {
                                    lv_conditionNegative_5_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_5_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_0_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3378:5: ( (lv_condition_6_0= ruleValue ) )
                            // InternalKim.g:3379:6: (lv_condition_6_0= ruleValue )
                            {
                            // InternalKim.g:3379:6: (lv_condition_6_0= ruleValue )
                            // InternalKim.g:3380:7: lv_condition_6_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_6_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_6_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3400:3: ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3400:3: ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? )
                    // InternalKim.g:3401:4: ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3401:4: ( (lv_integrate_7_0= 'integrate' ) )
                    // InternalKim.g:3402:5: (lv_integrate_7_0= 'integrate' )
                    {
                    // InternalKim.g:3402:5: (lv_integrate_7_0= 'integrate' )
                    // InternalKim.g:3403:6: lv_integrate_7_0= 'integrate'
                    {
                    lv_integrate_7_0=(Token)match(input,63,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_integrate_7_0, grammarAccess.getActionAccess().getIntegrateIntegrateKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "integrate", true, "integrate");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3415:4: ( (lv_assignments_8_0= ruleValueAssignment ) )
                    // InternalKim.g:3416:5: (lv_assignments_8_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3416:5: (lv_assignments_8_0= ruleValueAssignment )
                    // InternalKim.g:3417:6: lv_assignments_8_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    lv_assignments_8_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_8_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3434:4: (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )*
                    loop76:
                    do {
                        int alt76=2;
                        int LA76_0 = input.LA(1);

                        if ( (LA76_0==27) ) {
                            int LA76_2 = input.LA(2);

                            if ( ((LA76_2>=RULE_UPPERCASE_ID && LA76_2<=RULE_STRING)||(LA76_2>=RULE_EXPR && LA76_2<=RULE_ID)||(LA76_2>=27 && LA76_2<=29)||LA76_2==36||LA76_2==38||LA76_2==49||(LA76_2>=251 && LA76_2<=252)) ) {
                                alt76=1;
                            }


                        }


                        switch (alt76) {
                    	case 1 :
                    	    // InternalKim.g:3435:5: otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_9=(Token)match(input,27,FOLLOW_52); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getActionAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3439:5: ( (lv_assignments_10_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3440:6: (lv_assignments_10_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3440:6: (lv_assignments_10_0= ruleValueAssignment )
                    	    // InternalKim.g:3441:7: lv_assignments_10_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_53);
                    	    lv_assignments_10_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_10_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop76;
                        }
                    } while (true);

                    // InternalKim.g:3459:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( ((LA78_0>=44 && LA78_0<=45)) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalKim.g:3460:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) )
                            {
                            // InternalKim.g:3460:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) )
                            // InternalKim.g:3461:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3471:6: (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) )
                            int alt77=2;
                            int LA77_0 = input.LA(1);

                            if ( (LA77_0==44) ) {
                                alt77=1;
                            }
                            else if ( (LA77_0==45) ) {
                                alt77=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 77, 0, input);

                                throw nvae;
                            }
                            switch (alt77) {
                                case 1 :
                                    // InternalKim.g:3472:7: otherlv_11= 'if'
                                    {
                                    otherlv_11=(Token)match(input,44,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_11, grammarAccess.getActionAccess().getIfKeyword_1_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3477:7: ( (lv_conditionNegative_12_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3477:7: ( (lv_conditionNegative_12_0= 'unless' ) )
                                    // InternalKim.g:3478:8: (lv_conditionNegative_12_0= 'unless' )
                                    {
                                    // InternalKim.g:3478:8: (lv_conditionNegative_12_0= 'unless' )
                                    // InternalKim.g:3479:9: lv_conditionNegative_12_0= 'unless'
                                    {
                                    lv_conditionNegative_12_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_12_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_1_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3493:5: ( (lv_condition_13_0= ruleValue ) )
                            // InternalKim.g:3494:6: (lv_condition_13_0= ruleValue )
                            {
                            // InternalKim.g:3494:6: (lv_condition_13_0= ruleValue )
                            // InternalKim.g:3495:7: lv_condition_13_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_1_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_13_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_13_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3515:3: ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3515:3: ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? )
                    // InternalKim.g:3516:4: ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3516:4: ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) )
                    // InternalKim.g:3517:5: ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) )
                    {
                    // InternalKim.g:3517:5: ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) )
                    // InternalKim.g:3518:6: (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' )
                    {
                    // InternalKim.g:3518:6: (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' )
                    int alt79=3;
                    switch ( input.LA(1) ) {
                    case 64:
                        {
                        alt79=1;
                        }
                        break;
                    case 65:
                        {
                        alt79=2;
                        }
                        break;
                    case 66:
                        {
                        alt79=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 79, 0, input);

                        throw nvae;
                    }

                    switch (alt79) {
                        case 1 :
                            // InternalKim.g:3519:7: lv_do_14_1= 'do'
                            {
                            lv_do_14_1=(Token)match(input,64,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_1, grammarAccess.getActionAccess().getDoDoKeyword_2_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", true, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3530:7: lv_do_14_2= 'then'
                            {
                            lv_do_14_2=(Token)match(input,65,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_2, grammarAccess.getActionAccess().getDoThenKeyword_2_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", true, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:3541:7: lv_do_14_3= 'finally'
                            {
                            lv_do_14_3=(Token)match(input,66,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_3, grammarAccess.getActionAccess().getDoFinallyKeyword_2_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", true, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:3554:4: ( (lv_executed_15_0= ruleValueExecution ) )
                    // InternalKim.g:3555:5: (lv_executed_15_0= ruleValueExecution )
                    {
                    // InternalKim.g:3555:5: (lv_executed_15_0= ruleValueExecution )
                    // InternalKim.g:3556:6: lv_executed_15_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    lv_executed_15_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"executed",
                      							lv_executed_15_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3573:4: (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )*
                    loop80:
                    do {
                        int alt80=2;
                        int LA80_0 = input.LA(1);

                        if ( (LA80_0==27) ) {
                            int LA80_2 = input.LA(2);

                            if ( ((LA80_2>=RULE_UPPERCASE_ID && LA80_2<=RULE_STRING)||LA80_2==RULE_EXPR||LA80_2==RULE_LOWERCASE_DASHID||LA80_2==104) ) {
                                alt80=1;
                            }


                        }


                        switch (alt80) {
                    	case 1 :
                    	    // InternalKim.g:3574:5: otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_16=(Token)match(input,27,FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_16, grammarAccess.getActionAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3578:5: ( (lv_executed_17_0= ruleValueExecution ) )
                    	    // InternalKim.g:3579:6: (lv_executed_17_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:3579:6: (lv_executed_17_0= ruleValueExecution )
                    	    // InternalKim.g:3580:7: lv_executed_17_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_53);
                    	    lv_executed_17_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"executed",
                    	      								lv_executed_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop80;
                        }
                    } while (true);

                    // InternalKim.g:3598:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( ((LA82_0>=44 && LA82_0<=45)) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // InternalKim.g:3599:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) )
                            {
                            // InternalKim.g:3599:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) )
                            // InternalKim.g:3600:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3610:6: (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) )
                            int alt81=2;
                            int LA81_0 = input.LA(1);

                            if ( (LA81_0==44) ) {
                                alt81=1;
                            }
                            else if ( (LA81_0==45) ) {
                                alt81=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 81, 0, input);

                                throw nvae;
                            }
                            switch (alt81) {
                                case 1 :
                                    // InternalKim.g:3611:7: otherlv_18= 'if'
                                    {
                                    otherlv_18=(Token)match(input,44,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_18, grammarAccess.getActionAccess().getIfKeyword_2_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3616:7: ( (lv_conditionNegative_19_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3616:7: ( (lv_conditionNegative_19_0= 'unless' ) )
                                    // InternalKim.g:3617:8: (lv_conditionNegative_19_0= 'unless' )
                                    {
                                    // InternalKim.g:3617:8: (lv_conditionNegative_19_0= 'unless' )
                                    // InternalKim.g:3618:9: lv_conditionNegative_19_0= 'unless'
                                    {
                                    lv_conditionNegative_19_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_19_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_2_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3632:5: ( (lv_condition_20_0= ruleValue ) )
                            // InternalKim.g:3633:6: (lv_condition_20_0= ruleValue )
                            {
                            // InternalKim.g:3633:6: (lv_condition_20_0= ruleValue )
                            // InternalKim.g:3634:7: lv_condition_20_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_20_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_20_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3654:3: ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? )
                    {
                    // InternalKim.g:3654:3: ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? )
                    // InternalKim.g:3655:4: ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?
                    {
                    // InternalKim.g:3655:4: ( (lv_move_21_0= 'move' ) )
                    // InternalKim.g:3656:5: (lv_move_21_0= 'move' )
                    {
                    // InternalKim.g:3656:5: (lv_move_21_0= 'move' )
                    // InternalKim.g:3657:6: lv_move_21_0= 'move'
                    {
                    lv_move_21_0=(Token)match(input,67,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_move_21_0, grammarAccess.getActionAccess().getMoveMoveKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "move", true, "move");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3669:4: ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) )
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( ((LA83_0>=RULE_UPPERCASE_ID && LA83_0<=RULE_STRING)||(LA83_0>=RULE_EXPR && LA83_0<=RULE_ID)||(LA83_0>=27 && LA83_0<=29)||LA83_0==38||(LA83_0>=49 && LA83_0<=50)||LA83_0==214||(LA83_0>=251 && LA83_0<=252)) ) {
                        alt83=1;
                    }
                    else if ( (LA83_0==68) ) {
                        alt83=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 83, 0, input);

                        throw nvae;
                    }
                    switch (alt83) {
                        case 1 :
                            // InternalKim.g:3670:5: ( (lv_where_22_0= ruleValue ) )
                            {
                            // InternalKim.g:3670:5: ( (lv_where_22_0= ruleValue ) )
                            // InternalKim.g:3671:6: (lv_where_22_0= ruleValue )
                            {
                            // InternalKim.g:3671:6: (lv_where_22_0= ruleValue )
                            // InternalKim.g:3672:7: lv_where_22_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getWhereValueParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_55);
                            lv_where_22_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"where",
                              								lv_where_22_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3690:5: ( (lv_away_23_0= 'away' ) )
                            {
                            // InternalKim.g:3690:5: ( (lv_away_23_0= 'away' ) )
                            // InternalKim.g:3691:6: (lv_away_23_0= 'away' )
                            {
                            // InternalKim.g:3691:6: (lv_away_23_0= 'away' )
                            // InternalKim.g:3692:7: lv_away_23_0= 'away'
                            {
                            lv_away_23_0=(Token)match(input,68,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_away_23_0, grammarAccess.getActionAccess().getAwayAwayKeyword_3_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "away", true, "away");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:3705:4: ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?
                    int alt84=2;
                    alt84 = dfa84.predict(input);
                    switch (alt84) {
                        case 1 :
                            // InternalKim.g:3706:5: ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue )
                            {
                            // InternalKim.g:3710:5: (lv_condition_24_0= ruleValue )
                            // InternalKim.g:3711:6: lv_condition_24_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_3_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_24_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getActionRule());
                              						}
                              						set(
                              							current,
                              							"condition",
                              							lv_condition_24_0,
                              							"org.integratedmodelling.kim.Kim.Value");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAction"


    // $ANTLR start "entryRuleValueAssignment"
    // InternalKim.g:3733:1: entryRuleValueAssignment returns [EObject current=null] : iv_ruleValueAssignment= ruleValueAssignment EOF ;
    public final EObject entryRuleValueAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueAssignment = null;


        try {
            // InternalKim.g:3733:56: (iv_ruleValueAssignment= ruleValueAssignment EOF )
            // InternalKim.g:3734:2: iv_ruleValueAssignment= ruleValueAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueAssignment=ruleValueAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueAssignment"


    // $ANTLR start "ruleValueAssignment"
    // InternalKim.g:3740:1: ruleValueAssignment returns [EObject current=null] : ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) ;
    public final EObject ruleValueAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_target_0_0=null;
        Token otherlv_1=null;
        EObject lv_assignedValue_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3746:2: ( ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) )
            // InternalKim.g:3747:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            {
            // InternalKim.g:3747:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            // InternalKim.g:3748:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) )
            {
            // InternalKim.g:3748:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_LOWERCASE_ID) ) {
                int LA87_1 = input.LA(2);

                if ( (LA87_1==36) ) {
                    alt87=1;
                }
            }
            else if ( (LA87_0==36) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalKim.g:3749:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to'
                    {
                    // InternalKim.g:3749:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==RULE_LOWERCASE_ID) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // InternalKim.g:3750:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            {
                            // InternalKim.g:3750:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            // InternalKim.g:3751:6: lv_target_0_0= RULE_LOWERCASE_ID
                            {
                            lv_target_0_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_target_0_0, grammarAccess.getValueAssignmentAccess().getTargetLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueAssignmentRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"target",
                              							lv_target_0_0,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,36,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueAssignmentAccess().getToKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:3772:3: ( (lv_assignedValue_2_0= ruleComputableValue ) )
            // InternalKim.g:3773:4: (lv_assignedValue_2_0= ruleComputableValue )
            {
            // InternalKim.g:3773:4: (lv_assignedValue_2_0= ruleComputableValue )
            // InternalKim.g:3774:5: lv_assignedValue_2_0= ruleComputableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueAssignmentAccess().getAssignedValueComputableValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_assignedValue_2_0=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueAssignmentRule());
              					}
              					set(
              						current,
              						"assignedValue",
              						lv_assignedValue_2_0,
              						"org.integratedmodelling.kim.Kim.ComputableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueAssignment"


    // $ANTLR start "entryRuleComputableValue"
    // InternalKim.g:3795:1: entryRuleComputableValue returns [EObject current=null] : iv_ruleComputableValue= ruleComputableValue EOF ;
    public final EObject entryRuleComputableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComputableValue = null;


        try {
            // InternalKim.g:3795:56: (iv_ruleComputableValue= ruleComputableValue EOF )
            // InternalKim.g:3796:2: iv_ruleComputableValue= ruleComputableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComputableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComputableValue=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComputableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComputableValue"


    // $ANTLR start "ruleComputableValue"
    // InternalKim.g:3802:1: ruleComputableValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) ;
    public final EObject ruleComputableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_1=null;
        Token lv_language_4_2=null;
        Token lv_language_4_3=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_7_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3808:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) )
            // InternalKim.g:3809:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            {
            // InternalKim.g:3809:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            int alt91=6;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // InternalKim.g:3810:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:3810:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:3811:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:3811:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:3812:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3830:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:3830:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:3831:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:3831:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:3832:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3850:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:3850:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:3851:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:3851:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:3852:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:3852:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:3853:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getComputableValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getComputableValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3869:4: (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==48) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // InternalKim.g:3870:5: otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_3=(Token)match(input,48,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getComputableValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:3874:5: ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:3875:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:3875:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:3876:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:3876:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            int alt88=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt88=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt88=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt88=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 88, 0, input);

                                throw nvae;
                            }

                            switch (alt88) {
                                case 1 :
                                    // InternalKim.g:3877:8: lv_language_4_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_4_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_1, grammarAccess.getComputableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_2_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3892:8: lv_language_4_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_4_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_2, grammarAccess.getComputableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3907:8: lv_language_4_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_4_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_3, grammarAccess.getComputableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_2_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_3,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3927:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:3927:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:3928:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:3928:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:3929:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:3929:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt90=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt90=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt90=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt90=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 90, 0, input);

                        throw nvae;
                    }

                    switch (alt90) {
                        case 1 :
                            // InternalKim.g:3930:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getComputableValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3945:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getComputableValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:3960:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getComputableValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:3978:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:3978:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:3979:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:3979:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:3980:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:3998:3: ( (lv_null_7_0= 'unknown' ) )
                    {
                    // InternalKim.g:3998:3: ( (lv_null_7_0= 'unknown' ) )
                    // InternalKim.g:3999:4: (lv_null_7_0= 'unknown' )
                    {
                    // InternalKim.g:3999:4: (lv_null_7_0= 'unknown' )
                    // InternalKim.g:4000:5: lv_null_7_0= 'unknown'
                    {
                    lv_null_7_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_7_0, grammarAccess.getComputableValueAccess().getNullUnknownKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getComputableValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComputableValue"


    // $ANTLR start "entryRuleValueExecution"
    // InternalKim.g:4016:1: entryRuleValueExecution returns [EObject current=null] : iv_ruleValueExecution= ruleValueExecution EOF ;
    public final EObject entryRuleValueExecution() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueExecution = null;


        try {
            // InternalKim.g:4016:55: (iv_ruleValueExecution= ruleValueExecution EOF )
            // InternalKim.g:4017:2: iv_ruleValueExecution= ruleValueExecution EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueExecutionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueExecution=ruleValueExecution();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueExecution; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueExecution"


    // $ANTLR start "ruleValueExecution"
    // InternalKim.g:4023:1: ruleValueExecution returns [EObject current=null] : ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) ;
    public final EObject ruleValueExecution() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_target_2_0=null;
        EObject lv_execValue_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4029:2: ( ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) )
            // InternalKim.g:4030:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            {
            // InternalKim.g:4030:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            // InternalKim.g:4031:3: ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            {
            // InternalKim.g:4031:3: ( (lv_execValue_0_0= ruleExecutableValue ) )
            // InternalKim.g:4032:4: (lv_execValue_0_0= ruleExecutableValue )
            {
            // InternalKim.g:4032:4: (lv_execValue_0_0= ruleExecutableValue )
            // InternalKim.g:4033:5: lv_execValue_0_0= ruleExecutableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueExecutionAccess().getExecValueExecutableValueParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_58);
            lv_execValue_0_0=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueExecutionRule());
              					}
              					set(
              						current,
              						"execValue",
              						lv_execValue_0_0,
              						"org.integratedmodelling.kim.Kim.ExecutableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4050:3: (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==69) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalKim.g:4051:4: otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    {
                    otherlv_1=(Token)match(input,69,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueExecutionAccess().getForKeyword_1_0());
                      			
                    }
                    // InternalKim.g:4055:4: ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:4056:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:4056:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:4057:6: lv_target_2_0= RULE_LOWERCASE_ID
                    {
                    lv_target_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_target_2_0, grammarAccess.getValueExecutionAccess().getTargetLOWERCASE_IDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueExecutionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"target",
                      							lv_target_2_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueExecution"


    // $ANTLR start "entryRuleExecutableValue"
    // InternalKim.g:4078:1: entryRuleExecutableValue returns [EObject current=null] : iv_ruleExecutableValue= ruleExecutableValue EOF ;
    public final EObject entryRuleExecutableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExecutableValue = null;


        try {
            // InternalKim.g:4078:56: (iv_ruleExecutableValue= ruleExecutableValue EOF )
            // InternalKim.g:4079:2: iv_ruleExecutableValue= ruleExecutableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecutableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExecutableValue=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecutableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExecutableValue"


    // $ANTLR start "ruleExecutableValue"
    // InternalKim.g:4085:1: ruleExecutableValue returns [EObject current=null] : ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) ;
    public final EObject ruleExecutableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_1_0=null;
        Token otherlv_2=null;
        Token lv_language_3_1=null;
        Token lv_language_3_2=null;
        Token lv_language_3_3=null;
        Token lv_urn_4_2=null;
        Token otherlv_5=null;
        Token lv_conditionNegated_6_0=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_urn_4_1 = null;

        EObject lv_condition_7_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4091:2: ( ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) )
            // InternalKim.g:4092:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
            {
            // InternalKim.g:4092:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
            // InternalKim.g:4093:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
            {
            // InternalKim.g:4093:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) )
            int alt96=3;
            alt96 = dfa96.predict(input);
            switch (alt96) {
                case 1 :
                    // InternalKim.g:4094:4: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:4094:4: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:4095:5: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:4095:5: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:4096:6: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutableValueAccess().getFunctionFunctionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_60);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      						}
                      						set(
                      							current,
                      							"function",
                      							lv_function_0_0,
                      							"org.integratedmodelling.kim.Kim.Function");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:4114:4: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:4114:4: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:4115:5: ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:4115:5: ( (lv_expr_1_0= RULE_EXPR ) )
                    // InternalKim.g:4116:6: (lv_expr_1_0= RULE_EXPR )
                    {
                    // InternalKim.g:4116:6: (lv_expr_1_0= RULE_EXPR )
                    // InternalKim.g:4117:7: lv_expr_1_0= RULE_EXPR
                    {
                    lv_expr_1_0=(Token)match(input,RULE_EXPR,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_expr_1_0, grammarAccess.getExecutableValueAccess().getExprEXPRTerminalRuleCall_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getExecutableValueRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"expr",
                      								lv_expr_1_0,
                      								"org.integratedmodelling.kim.Kim.EXPR");
                      						
                    }

                    }


                    }

                    // InternalKim.g:4133:5: (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==48) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            // InternalKim.g:4134:6: otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_2=(Token)match(input,48,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getExecutableValueAccess().getInKeyword_0_1_1_0());
                              					
                            }
                            // InternalKim.g:4138:6: ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:4139:7: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:4139:7: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:4140:8: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:4140:8: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            int alt93=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt93=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt93=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt93=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 93, 0, input);

                                throw nvae;
                            }

                            switch (alt93) {
                                case 1 :
                                    // InternalKim.g:4141:9: lv_language_3_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_60); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_1, grammarAccess.getExecutableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_0_1_1_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_1,
                                      										"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:4156:9: lv_language_3_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_60); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_2, grammarAccess.getExecutableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_0_1_1_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:4171:9: lv_language_3_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_60); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_3, grammarAccess.getExecutableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_0_1_1_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_3,
                                      										"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4191:4: ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) )
                    {
                    // InternalKim.g:4191:4: ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) )
                    // InternalKim.g:4192:5: ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) )
                    {
                    // InternalKim.g:4192:5: ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) )
                    // InternalKim.g:4193:6: (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING )
                    {
                    // InternalKim.g:4193:6: (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING )
                    int alt95=2;
                    int LA95_0 = input.LA(1);

                    if ( ((LA95_0>=RULE_UPPERCASE_ID && LA95_0<=RULE_LOWERCASE_ID)||LA95_0==RULE_LOWERCASE_DASHID||LA95_0==104) ) {
                        alt95=1;
                    }
                    else if ( (LA95_0==RULE_STRING) ) {
                        alt95=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 95, 0, input);

                        throw nvae;
                    }
                    switch (alt95) {
                        case 1 :
                            // InternalKim.g:4194:7: lv_urn_4_1= ruleUrnId
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getExecutableValueAccess().getUrnUrnIdParserRuleCall_0_2_0_0());
                              						
                            }
                            pushFollow(FOLLOW_60);
                            lv_urn_4_1=ruleUrnId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                              							}
                              							set(
                              								current,
                              								"urn",
                              								lv_urn_4_1,
                              								"org.integratedmodelling.kim.Kim.UrnId");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:4210:7: lv_urn_4_2= RULE_STRING
                            {
                            lv_urn_4_2=(Token)match(input,RULE_STRING,FOLLOW_60); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_urn_4_2, grammarAccess.getExecutableValueAccess().getUrnSTRINGTerminalRuleCall_0_2_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExecutableValueRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"urn",
                              								lv_urn_4_2,
                              								"org.eclipse.xtext.common.Terminals.STRING");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4228:3: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
            int alt98=2;
            alt98 = dfa98.predict(input);
            switch (alt98) {
                case 1 :
                    // InternalKim.g:4229:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) )
                    {
                    // InternalKim.g:4229:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) )
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==44) ) {
                        alt97=1;
                    }
                    else if ( (LA97_0==45) ) {
                        alt97=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 97, 0, input);

                        throw nvae;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalKim.g:4230:5: otherlv_5= 'if'
                            {
                            otherlv_5=(Token)match(input,44,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getExecutableValueAccess().getIfKeyword_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:4235:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                            {
                            // InternalKim.g:4235:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                            // InternalKim.g:4236:6: (lv_conditionNegated_6_0= 'unless' )
                            {
                            // InternalKim.g:4236:6: (lv_conditionNegated_6_0= 'unless' )
                            // InternalKim.g:4237:7: lv_conditionNegated_6_0= 'unless'
                            {
                            lv_conditionNegated_6_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_conditionNegated_6_0, grammarAccess.getExecutableValueAccess().getConditionNegatedUnlessKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExecutableValueRule());
                              							}
                              							setWithLastConsumed(current, "conditionNegated", true, "unless");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:4250:4: ( (lv_condition_7_0= ruleValue ) )
                    // InternalKim.g:4251:5: (lv_condition_7_0= ruleValue )
                    {
                    // InternalKim.g:4251:5: (lv_condition_7_0= ruleValue )
                    // InternalKim.g:4252:6: lv_condition_7_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutableValueAccess().getConditionValueParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_condition_7_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_7_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExecutableValue"


    // $ANTLR start "entryRuleMODEL_TYPE"
    // InternalKim.g:4274:1: entryRuleMODEL_TYPE returns [String current=null] : iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF ;
    public final String entryRuleMODEL_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMODEL_TYPE = null;


        try {
            // InternalKim.g:4274:50: (iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF )
            // InternalKim.g:4275:2: iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMODEL_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMODEL_TYPE=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMODEL_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMODEL_TYPE"


    // $ANTLR start "ruleMODEL_TYPE"
    // InternalKim.g:4281:1: ruleMODEL_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' ) ;
    public final AntlrDatatypeRuleToken ruleMODEL_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:4287:2: ( (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' ) )
            // InternalKim.g:4288:2: (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' )
            {
            // InternalKim.g:4288:2: (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' )
            int alt99=6;
            switch ( input.LA(1) ) {
            case 70:
                {
                alt99=1;
                }
                break;
            case 71:
                {
                alt99=2;
                }
                break;
            case 72:
                {
                alt99=3;
                }
                break;
            case 73:
                {
                alt99=4;
                }
                break;
            case 74:
                {
                alt99=5;
                }
                break;
            case 75:
                {
                alt99=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }

            switch (alt99) {
                case 1 :
                    // InternalKim.g:4289:3: kw= 'model'
                    {
                    kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getModelKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4295:3: kw= 'learn'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getLearnKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:4301:3: kw= 'number'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getNumberKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:4307:3: kw= 'object'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getObjectKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:4313:3: kw= 'text'
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getTextKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:4319:3: kw= 'boolean'
                    {
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getBooleanKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMODEL_TYPE"


    // $ANTLR start "entryRuleVALUE_OPERATOR"
    // InternalKim.g:4328:1: entryRuleVALUE_OPERATOR returns [String current=null] : iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF ;
    public final String entryRuleVALUE_OPERATOR() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVALUE_OPERATOR = null;


        try {
            // InternalKim.g:4328:54: (iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF )
            // InternalKim.g:4329:2: iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVALUE_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVALUE_OPERATOR=ruleVALUE_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVALUE_OPERATOR.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVALUE_OPERATOR"


    // $ANTLR start "ruleVALUE_OPERATOR"
    // InternalKim.g:4335:1: ruleVALUE_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' ) ;
    public final AntlrDatatypeRuleToken ruleVALUE_OPERATOR() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:4341:2: ( (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' ) )
            // InternalKim.g:4342:2: (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' )
            {
            // InternalKim.g:4342:2: (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' )
            int alt100=14;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt100=1;
                }
                break;
            case 77:
                {
                alt100=2;
                }
                break;
            case 78:
                {
                alt100=3;
                }
                break;
            case 79:
                {
                alt100=4;
                }
                break;
            case 80:
                {
                alt100=5;
                }
                break;
            case 81:
                {
                alt100=6;
                }
                break;
            case 82:
                {
                alt100=7;
                }
                break;
            case 83:
                {
                alt100=8;
                }
                break;
            case 84:
                {
                alt100=9;
                }
                break;
            case 85:
                {
                alt100=10;
                }
                break;
            case 86:
                {
                alt100=11;
                }
                break;
            case 87:
                {
                alt100=12;
                }
                break;
            case 55:
                {
                alt100=13;
                }
                break;
            case 88:
                {
                alt100=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }

            switch (alt100) {
                case 1 :
                    // InternalKim.g:4343:3: kw= '>'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4349:3: kw= '>='
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:4355:3: kw= '<='
                    {
                    kw=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:4361:3: kw= '<'
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:4367:3: kw= 'where'
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWhereKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:4373:3: kw= '=='
                    {
                    kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignEqualsSignKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:4379:3: kw= '='
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:4385:3: kw= 'without'
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWithoutKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:4391:3: kw= '!='
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getExclamationMarkEqualsSignKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:4397:3: kw= 'plus'
                    {
                    kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getPlusKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:4403:3: kw= 'minus'
                    {
                    kw=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getMinusKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:4409:3: kw= 'times'
                    {
                    kw=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getTimesKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:4415:3: kw= 'over'
                    {
                    kw=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getOverKeyword_12());
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalKim.g:4421:3: kw= 'by'
                    {
                    kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getByKeyword_13());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVALUE_OPERATOR"


    // $ANTLR start "entryRuleNamespace"
    // InternalKim.g:4430:1: entryRuleNamespace returns [EObject current=null] : iv_ruleNamespace= ruleNamespace EOF ;
    public final EObject entryRuleNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespace = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()
        	);

        try {
            // InternalKim.g:4436:2: (iv_ruleNamespace= ruleNamespace EOF )
            // InternalKim.g:4437:2: iv_ruleNamespace= ruleNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespace=ruleNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNamespace"


    // $ANTLR start "ruleNamespace"
    // InternalKim.g:4446:1: ruleNamespace returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) ) )? otherlv_50= ';' ) ;
    public final EObject ruleNamespace() throws RecognitionException {
        EObject current = null;

        Token lv_projectPrivate_3_0=null;
        Token lv_private_4_0=null;
        Token lv_inactive_5_0=null;
        Token otherlv_6=null;
        Token lv_scenario_7_0=null;
        Token lv_worldviewBound_8_0=null;
        Token lv_docstring_10_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_language_14_0=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_rootDomain_29_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_imported_16_0 = null;

        EObject lv_imported_18_0 = null;

        EObject lv_owlImports_20_0 = null;

        EObject lv_owlImports_22_0 = null;

        EObject lv_coverage_24_0 = null;

        EObject lv_coverage_26_0 = null;

        EObject lv_domainConcept_30_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_33_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_35_0 = null;

        AntlrDatatypeRuleToken lv_version_37_0 = null;

        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;

        EObject lv_weights_45_0 = null;

        EObject lv_parameters_47_0 = null;

        EObject lv_metadata_49_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()
        	);

        try {
            // InternalKim.g:4457:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) ) )? otherlv_50= ';' ) )
            // InternalKim.g:4458:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) ) )? otherlv_50= ';' )
            {
            // InternalKim.g:4458:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) ) )? otherlv_50= ';' )
            // InternalKim.g:4459:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) ) )? otherlv_50= ';'
            {
            // InternalKim.g:4459:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==RULE_ANNOTATION_ID) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalKim.g:4460:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:4460:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:4461:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:4461:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:4462:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:4479:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop101:
                    do {
                        int alt101=2;
                        int LA101_0 = input.LA(1);

                        if ( (LA101_0==RULE_ANNOTATION_ID) ) {
                            alt101=1;
                        }


                        switch (alt101) {
                    	case 1 :
                    	    // InternalKim.g:4480:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:4480:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:4481:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_62);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop101;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:4499:3: ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) )
            // InternalKim.g:4500:4: ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4500:4: ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) )
            // InternalKim.g:4501:5: ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());
            // InternalKim.g:4504:5: ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* )
            // InternalKim.g:4505:6: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )*
            {
            // InternalKim.g:4505:6: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )*
            loop104:
            do {
                int alt104=3;
                int LA104_0 = input.LA(1);

                if ( LA104_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt104=1;
                }
                else if ( LA104_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt104=1;
                }
                else if ( LA104_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
                    alt104=2;
                }


                switch (alt104) {
            	case 1 :
            	    // InternalKim.g:4506:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4506:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
            	    // InternalKim.g:4507:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:4507:106: ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
            	    // InternalKim.g:4508:6: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:4511:9: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
            	    // InternalKim.g:4511:10: {...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4511:19: ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
            	    // InternalKim.g:4511:20: ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) )
            	    {
            	    // InternalKim.g:4511:20: ( (lv_projectPrivate_3_0= 'project' ) )?
            	    int alt103=2;
            	    int LA103_0 = input.LA(1);

            	    if ( (LA103_0==22) ) {
            	        alt103=1;
            	    }
            	    switch (alt103) {
            	        case 1 :
            	            // InternalKim.g:4512:10: (lv_projectPrivate_3_0= 'project' )
            	            {
            	            // InternalKim.g:4512:10: (lv_projectPrivate_3_0= 'project' )
            	            // InternalKim.g:4513:11: lv_projectPrivate_3_0= 'project'
            	            {
            	            lv_projectPrivate_3_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_projectPrivate_3_0, grammarAccess.getNamespaceAccess().getProjectPrivateProjectKeyword_1_0_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getNamespaceRule());
            	              											}
            	              											setWithLastConsumed(current, "projectPrivate", true, "project");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:4525:9: ( (lv_private_4_0= 'private' ) )
            	    // InternalKim.g:4526:10: (lv_private_4_0= 'private' )
            	    {
            	    // InternalKim.g:4526:10: (lv_private_4_0= 'private' )
            	    // InternalKim.g:4527:11: lv_private_4_0= 'private'
            	    {
            	    lv_private_4_0=(Token)match(input,23,FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_private_4_0, grammarAccess.getNamespaceAccess().getPrivatePrivateKeyword_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getNamespaceRule());
            	      											}
            	      											setWithLastConsumed(current, "private", true, "private");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4545:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
            	    {
            	    // InternalKim.g:4545:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
            	    // InternalKim.g:4546:5: {...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:4546:106: ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
            	    // InternalKim.g:4547:6: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:4550:9: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
            	    // InternalKim.g:4550:10: {...}? => ( (lv_inactive_5_0= 'void' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4550:19: ( (lv_inactive_5_0= 'void' ) )
            	    // InternalKim.g:4550:20: (lv_inactive_5_0= 'void' )
            	    {
            	    // InternalKim.g:4550:20: (lv_inactive_5_0= 'void' )
            	    // InternalKim.g:4551:10: lv_inactive_5_0= 'void'
            	    {
            	    lv_inactive_5_0=(Token)match(input,21,FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_inactive_5_0, grammarAccess.getNamespaceAccess().getInactiveVoidKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getNamespaceRule());
            	      										}
            	      										setWithLastConsumed(current, "inactive", true, "void");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:4575:3: (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) )
            int alt105=3;
            switch ( input.LA(1) ) {
            case 89:
                {
                alt105=1;
                }
                break;
            case 90:
                {
                alt105=2;
                }
                break;
            case 91:
                {
                alt105=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }

            switch (alt105) {
                case 1 :
                    // InternalKim.g:4576:4: otherlv_6= 'namespace'
                    {
                    otherlv_6=(Token)match(input,89,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getNamespaceAccess().getNamespaceKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4581:4: ( (lv_scenario_7_0= 'scenario' ) )
                    {
                    // InternalKim.g:4581:4: ( (lv_scenario_7_0= 'scenario' ) )
                    // InternalKim.g:4582:5: (lv_scenario_7_0= 'scenario' )
                    {
                    // InternalKim.g:4582:5: (lv_scenario_7_0= 'scenario' )
                    // InternalKim.g:4583:6: lv_scenario_7_0= 'scenario'
                    {
                    lv_scenario_7_0=(Token)match(input,90,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_scenario_7_0, grammarAccess.getNamespaceAccess().getScenarioScenarioKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "scenario", true, "scenario");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4596:4: ( (lv_worldviewBound_8_0= 'worldview' ) )
                    {
                    // InternalKim.g:4596:4: ( (lv_worldviewBound_8_0= 'worldview' ) )
                    // InternalKim.g:4597:5: (lv_worldviewBound_8_0= 'worldview' )
                    {
                    // InternalKim.g:4597:5: (lv_worldviewBound_8_0= 'worldview' )
                    // InternalKim.g:4598:6: lv_worldviewBound_8_0= 'worldview'
                    {
                    lv_worldviewBound_8_0=(Token)match(input,91,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_worldviewBound_8_0, grammarAccess.getNamespaceAccess().getWorldviewBoundWorldviewKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "worldviewBound", true, "worldview");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4611:3: ( (lv_name_9_0= rulePathName ) )
            // InternalKim.g:4612:4: (lv_name_9_0= rulePathName )
            {
            // InternalKim.g:4612:4: (lv_name_9_0= rulePathName )
            // InternalKim.g:4613:5: lv_name_9_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamespaceAccess().getNamePathNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_64);
            lv_name_9_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamespaceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_9_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4630:3: ( (lv_docstring_10_0= RULE_STRING ) )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==RULE_STRING) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalKim.g:4631:4: (lv_docstring_10_0= RULE_STRING )
                    {
                    // InternalKim.g:4631:4: (lv_docstring_10_0= RULE_STRING )
                    // InternalKim.g:4632:5: lv_docstring_10_0= RULE_STRING
                    {
                    lv_docstring_10_0=(Token)match(input,RULE_STRING,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_10_0, grammarAccess.getNamespaceAccess().getDocstringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNamespaceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_10_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:4648:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) )
            // InternalKim.g:4649:4: ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4649:4: ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            // InternalKim.g:4650:5: ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
            // InternalKim.g:4653:5: ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            // InternalKim.g:4654:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            {
            // InternalKim.g:4654:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            loop116:
            do {
                int alt116=9;
                alt116 = dfa116.predict(input);
                switch (alt116) {
            	case 1 :
            	    // InternalKim.g:4655:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4655:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
            	    // InternalKim.g:4656:5: {...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalKim.g:4656:106: ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
            	    // InternalKim.g:4657:6: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
            	    // InternalKim.g:4660:9: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
            	    // InternalKim.g:4660:10: {...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4660:19: (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
            	    // InternalKim.g:4660:20: otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
            	    {
            	    otherlv_12=(Token)match(input,31,FOLLOW_66); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getNamespaceAccess().getUsingKeyword_5_0_0());
            	      								
            	    }
            	    otherlv_13=(Token)match(input,92,FOLLOW_10); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getNamespaceAccess().getLanguageKeyword_5_0_1());
            	      								
            	    }
            	    // InternalKim.g:4668:9: ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
            	    // InternalKim.g:4669:10: (lv_language_14_0= RULE_UPPERCASE_ID )
            	    {
            	    // InternalKim.g:4669:10: (lv_language_14_0= RULE_UPPERCASE_ID )
            	    // InternalKim.g:4670:11: lv_language_14_0= RULE_UPPERCASE_ID
            	    {
            	    lv_language_14_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_language_14_0, grammarAccess.getNamespaceAccess().getLanguageUPPERCASE_IDTerminalRuleCall_5_0_2_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getNamespaceRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"language",
            	      												lv_language_14_0,
            	      												"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4692:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4692:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
            	    // InternalKim.g:4693:5: {...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalKim.g:4693:106: ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
            	    // InternalKim.g:4694:6: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
            	    // InternalKim.g:4697:9: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
            	    // InternalKim.g:4697:10: {...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4697:19: (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
            	    // InternalKim.g:4697:20: otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
            	    {
            	    otherlv_15=(Token)match(input,31,FOLLOW_67); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getNamespaceAccess().getUsingKeyword_5_1_0());
            	      								
            	    }
            	    // InternalKim.g:4701:9: ( (lv_imported_16_0= ruleImport ) )
            	    // InternalKim.g:4702:10: (lv_imported_16_0= ruleImport )
            	    {
            	    // InternalKim.g:4702:10: (lv_imported_16_0= ruleImport )
            	    // InternalKim.g:4703:11: lv_imported_16_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_imported_16_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"imported",
            	      												lv_imported_16_0,
            	      												"org.integratedmodelling.kim.Kim.Import");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4720:9: ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
            	    loop107:
            	    do {
            	        int alt107=2;
            	        int LA107_0 = input.LA(1);

            	        if ( (LA107_0==27) ) {
            	            alt107=1;
            	        }


            	        switch (alt107) {
            	    	case 1 :
            	    	    // InternalKim.g:4721:10: ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) )
            	    	    {
            	    	    // InternalKim.g:4721:10: ( ( ',' )=>otherlv_17= ',' )
            	    	    // InternalKim.g:4722:11: ( ',' )=>otherlv_17= ','
            	    	    {
            	    	    otherlv_17=(Token)match(input,27,FOLLOW_67); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_17, grammarAccess.getNamespaceAccess().getCommaKeyword_5_1_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4728:10: ( (lv_imported_18_0= ruleImport ) )
            	    	    // InternalKim.g:4729:11: (lv_imported_18_0= ruleImport )
            	    	    {
            	    	    // InternalKim.g:4729:11: (lv_imported_18_0= ruleImport )
            	    	    // InternalKim.g:4730:12: lv_imported_18_0= ruleImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_68);
            	    	    lv_imported_18_0=ruleImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"imported",
            	    	      													lv_imported_18_0,
            	    	      													"org.integratedmodelling.kim.Kim.Import");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop107;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:4754:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4754:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
            	    // InternalKim.g:4755:5: {...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalKim.g:4755:106: ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
            	    // InternalKim.g:4756:6: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
            	    // InternalKim.g:4759:9: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
            	    // InternalKim.g:4759:10: {...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4759:19: (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
            	    // InternalKim.g:4759:20: otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
            	    {
            	    otherlv_19=(Token)match(input,93,FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getNamespaceAccess().getImportsKeyword_5_2_0());
            	      								
            	    }
            	    // InternalKim.g:4763:9: ( (lv_owlImports_20_0= ruleOwlImport ) )
            	    // InternalKim.g:4764:10: (lv_owlImports_20_0= ruleOwlImport )
            	    {
            	    // InternalKim.g:4764:10: (lv_owlImports_20_0= ruleOwlImport )
            	    // InternalKim.g:4765:11: lv_owlImports_20_0= ruleOwlImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_owlImports_20_0=ruleOwlImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"owlImports",
            	      												lv_owlImports_20_0,
            	      												"org.integratedmodelling.kim.Kim.OwlImport");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4782:9: (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
            	    loop108:
            	    do {
            	        int alt108=2;
            	        int LA108_0 = input.LA(1);

            	        if ( (LA108_0==27) ) {
            	            alt108=1;
            	        }


            	        switch (alt108) {
            	    	case 1 :
            	    	    // InternalKim.g:4783:10: otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,27,FOLLOW_69); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_21, grammarAccess.getNamespaceAccess().getCommaKeyword_5_2_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:4787:10: ( (lv_owlImports_22_0= ruleOwlImport ) )
            	    	    // InternalKim.g:4788:11: (lv_owlImports_22_0= ruleOwlImport )
            	    	    {
            	    	    // InternalKim.g:4788:11: (lv_owlImports_22_0= ruleOwlImport )
            	    	    // InternalKim.g:4789:12: lv_owlImports_22_0= ruleOwlImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_68);
            	    	    lv_owlImports_22_0=ruleOwlImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"owlImports",
            	    	      													lv_owlImports_22_0,
            	    	      													"org.integratedmodelling.kim.Kim.OwlImport");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop108;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:4813:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4813:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
            	    // InternalKim.g:4814:5: {...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalKim.g:4814:106: ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
            	    // InternalKim.g:4815:6: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
            	    // InternalKim.g:4818:9: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
            	    // InternalKim.g:4818:10: {...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4818:19: (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
            	    // InternalKim.g:4818:20: otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
            	    {
            	    otherlv_23=(Token)match(input,94,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getNamespaceAccess().getCoveringKeyword_5_3_0());
            	      								
            	    }
            	    // InternalKim.g:4822:9: ( (lv_coverage_24_0= ruleFunction ) )
            	    // InternalKim.g:4823:10: (lv_coverage_24_0= ruleFunction )
            	    {
            	    // InternalKim.g:4823:10: (lv_coverage_24_0= ruleFunction )
            	    // InternalKim.g:4824:11: lv_coverage_24_0= ruleFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_coverage_24_0=ruleFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"coverage",
            	      												lv_coverage_24_0,
            	      												"org.integratedmodelling.kim.Kim.Function");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4841:9: ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
            	    loop109:
            	    do {
            	        int alt109=2;
            	        int LA109_0 = input.LA(1);

            	        if ( (LA109_0==27) ) {
            	            alt109=1;
            	        }


            	        switch (alt109) {
            	    	case 1 :
            	    	    // InternalKim.g:4842:10: ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) )
            	    	    {
            	    	    // InternalKim.g:4842:10: ( ( ',' )=>otherlv_25= ',' )
            	    	    // InternalKim.g:4843:11: ( ',' )=>otherlv_25= ','
            	    	    {
            	    	    otherlv_25=(Token)match(input,27,FOLLOW_25); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_25, grammarAccess.getNamespaceAccess().getCommaKeyword_5_3_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4849:10: ( (lv_coverage_26_0= ruleFunction ) )
            	    	    // InternalKim.g:4850:11: (lv_coverage_26_0= ruleFunction )
            	    	    {
            	    	    // InternalKim.g:4850:11: (lv_coverage_26_0= ruleFunction )
            	    	    // InternalKim.g:4851:12: lv_coverage_26_0= ruleFunction
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_68);
            	    	    lv_coverage_26_0=ruleFunction();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"coverage",
            	    	      													lv_coverage_26_0,
            	    	      													"org.integratedmodelling.kim.Kim.Function");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop109;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:4875:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4875:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:4876:5: {...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
            	    }
            	    // InternalKim.g:4876:106: ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:4877:6: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
            	    // InternalKim.g:4880:9: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:4880:10: {...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4880:19: (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
            	    // InternalKim.g:4880:20: otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
            	    {
            	    otherlv_27=(Token)match(input,48,FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getNamespaceAccess().getInKeyword_5_4_0());
            	      								
            	    }
            	    otherlv_28=(Token)match(input,95,FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_28, grammarAccess.getNamespaceAccess().getDomainKeyword_5_4_1());
            	      								
            	    }
            	    // InternalKim.g:4888:9: ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
            	    int alt110=2;
            	    int LA110_0 = input.LA(1);

            	    if ( (LA110_0==96) ) {
            	        alt110=1;
            	    }
            	    else if ( ((LA110_0>=RULE_UPPERCASE_ID && LA110_0<=RULE_LOWERCASE_ID)||LA110_0==RULE_CAMELCASE_ID||LA110_0==RULE_LOWERCASE_DASHID||LA110_0==38||(LA110_0>=130 && LA110_0<=131)||(LA110_0>=139 && LA110_0<=140)||(LA110_0>=142 && LA110_0<=160)) ) {
            	        alt110=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 110, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt110) {
            	        case 1 :
            	            // InternalKim.g:4889:10: ( (lv_rootDomain_29_0= 'root' ) )
            	            {
            	            // InternalKim.g:4889:10: ( (lv_rootDomain_29_0= 'root' ) )
            	            // InternalKim.g:4890:11: (lv_rootDomain_29_0= 'root' )
            	            {
            	            // InternalKim.g:4890:11: (lv_rootDomain_29_0= 'root' )
            	            // InternalKim.g:4891:12: lv_rootDomain_29_0= 'root'
            	            {
            	            lv_rootDomain_29_0=(Token)match(input,96,FOLLOW_65); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_rootDomain_29_0, grammarAccess.getNamespaceAccess().getRootDomainRootKeyword_5_4_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getNamespaceRule());
            	              												}
            	              												setWithLastConsumed(current, "rootDomain", true, "root");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:4904:10: ( (lv_domainConcept_30_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:4904:10: ( (lv_domainConcept_30_0= ruleConcept ) )
            	            // InternalKim.g:4905:11: (lv_domainConcept_30_0= ruleConcept )
            	            {
            	            // InternalKim.g:4905:11: (lv_domainConcept_30_0= ruleConcept )
            	            // InternalKim.g:4906:12: lv_domainConcept_30_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_4_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_65);
            	            lv_domainConcept_30_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	              												}
            	              												set(
            	              													current,
            	              													"domainConcept",
            	              													lv_domainConcept_30_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:4930:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:4930:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) )
            	    // InternalKim.g:4931:5: {...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
            	    }
            	    // InternalKim.g:4931:106: ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) )
            	    // InternalKim.g:4932:6: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
            	    // InternalKim.g:4935:9: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) )
            	    // InternalKim.g:4935:10: {...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4935:19: (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) )
            	    // InternalKim.g:4935:20: otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* )
            	    {
            	    otherlv_31=(Token)match(input,97,FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getNamespaceAccess().getDisjointKeyword_5_5_0());
            	      								
            	    }
            	    otherlv_32=(Token)match(input,98,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getNamespaceAccess().getWithKeyword_5_5_1());
            	      								
            	    }
            	    // InternalKim.g:4943:9: ( (lv_disjointNamespaces_33_0= rulePathName ) )
            	    // InternalKim.g:4944:10: (lv_disjointNamespaces_33_0= rulePathName )
            	    {
            	    // InternalKim.g:4944:10: (lv_disjointNamespaces_33_0= rulePathName )
            	    // InternalKim.g:4945:11: lv_disjointNamespaces_33_0= rulePathName
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_disjointNamespaces_33_0=rulePathName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"disjointNamespaces",
            	      												lv_disjointNamespaces_33_0,
            	      												"org.integratedmodelling.kim.Kim.PathName");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4962:9: (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* )
            	    // InternalKim.g:4963:10: otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )*
            	    {
            	    otherlv_34=(Token)match(input,27,FOLLOW_74); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_34, grammarAccess.getNamespaceAccess().getCommaKeyword_5_5_3_0());
            	      									
            	    }
            	    // InternalKim.g:4967:10: ( (lv_disjointNamespaces_35_0= rulePathName ) )*
            	    loop111:
            	    do {
            	        int alt111=2;
            	        int LA111_0 = input.LA(1);

            	        if ( ((LA111_0>=RULE_UPPERCASE_ID && LA111_0<=RULE_LOWERCASE_ID)||LA111_0==RULE_LOWERCASE_DASHID) ) {
            	            alt111=1;
            	        }


            	        switch (alt111) {
            	    	case 1 :
            	    	    // InternalKim.g:4968:11: (lv_disjointNamespaces_35_0= rulePathName )
            	    	    {
            	    	    // InternalKim.g:4968:11: (lv_disjointNamespaces_35_0= rulePathName )
            	    	    // InternalKim.g:4969:12: lv_disjointNamespaces_35_0= rulePathName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_74);
            	    	    lv_disjointNamespaces_35_0=rulePathName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"disjointNamespaces",
            	    	      													lv_disjointNamespaces_35_0,
            	    	      													"org.integratedmodelling.kim.Kim.PathName");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop111;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:4993:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4993:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
            	    // InternalKim.g:4994:5: {...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
            	    }
            	    // InternalKim.g:4994:106: ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
            	    // InternalKim.g:4995:6: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
            	    // InternalKim.g:4998:9: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
            	    // InternalKim.g:4998:10: {...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4998:19: (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
            	    // InternalKim.g:4998:20: otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) )
            	    {
            	    otherlv_36=(Token)match(input,99,FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_36, grammarAccess.getNamespaceAccess().getVersionKeyword_5_6_0());
            	      								
            	    }
            	    // InternalKim.g:5002:9: ( (lv_version_37_0= ruleVersionNumber ) )
            	    // InternalKim.g:5003:10: (lv_version_37_0= ruleVersionNumber )
            	    {
            	    // InternalKim.g:5003:10: (lv_version_37_0= ruleVersionNumber )
            	    // InternalKim.g:5004:11: lv_version_37_0= ruleVersionNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_6_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_version_37_0=ruleVersionNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											set(
            	      												current,
            	      												"version",
            	      												lv_version_37_0,
            	      												"org.integratedmodelling.kim.Kim.VersionNumber");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:5027:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    {
            	    // InternalKim.g:5027:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    // InternalKim.g:5028:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7)");
            	    }
            	    // InternalKim.g:5028:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    // InternalKim.g:5029:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7);
            	    // InternalKim.g:5032:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            	    // InternalKim.g:5032:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5032:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            	    // InternalKim.g:5032:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            	    {
            	    // InternalKim.g:5032:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            	    // InternalKim.g:5033:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
            	    // InternalKim.g:5036:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            	    // InternalKim.g:5037:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
            	    {
            	    // InternalKim.g:5037:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+
            	    int cnt115=0;
            	    loop115:
            	    do {
            	        int alt115=4;
            	        switch ( input.LA(1) ) {
            	        case 31:
            	            {
            	            int LA115_2 = input.LA(2);

            	            if ( synpred217_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            	                alt115=3;
            	            }


            	            }
            	            break;
            	        case 100:
            	            {
            	            int LA115_3 = input.LA(2);

            	            if ( synpred214_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            	                alt115=1;
            	            }


            	            }
            	            break;
            	        case 102:
            	            {
            	            int LA115_4 = input.LA(2);

            	            if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            	                alt115=2;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt115) {
            	    	case 1 :
            	    	    // InternalKim.g:5038:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5038:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
            	    	    // InternalKim.g:5039:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
            	    	    }
            	    	    // InternalKim.g:5039:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
            	    	    // InternalKim.g:5040:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
            	    	    // InternalKim.g:5043:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
            	    	    // InternalKim.g:5043:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5043:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
            	    	    // InternalKim.g:5043:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
            	    	    {
            	    	    otherlv_39=(Token)match(input,100,FOLLOW_76); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_39, grammarAccess.getNamespaceAccess().getResolveKeyword_5_7_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5047:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
            	    	    int alt113=2;
            	    	    int LA113_0 = input.LA(1);

            	    	    if ( (LA113_0==101) ) {
            	    	        alt113=1;
            	    	    }
            	    	    switch (alt113) {
            	    	        case 1 :
            	    	            // InternalKim.g:5048:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
            	    	            {
            	    	            otherlv_40=(Token)match(input,101,FOLLOW_74); if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              															newLeafNode(otherlv_40, grammarAccess.getNamespaceAccess().getFromKeyword_5_7_0_1_0());
            	    	              														
            	    	            }
            	    	            // InternalKim.g:5052:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
            	    	            loop112:
            	    	            do {
            	    	                int alt112=2;
            	    	                int LA112_0 = input.LA(1);

            	    	                if ( ((LA112_0>=RULE_UPPERCASE_ID && LA112_0<=RULE_LOWERCASE_ID)||LA112_0==RULE_LOWERCASE_DASHID) ) {
            	    	                    alt112=1;
            	    	                }


            	    	                switch (alt112) {
            	    	            	case 1 :
            	    	            	    // InternalKim.g:5053:16: (lv_lookupNamespace_41_0= rulePathName )
            	    	            	    {
            	    	            	    // InternalKim.g:5053:16: (lv_lookupNamespace_41_0= rulePathName )
            	    	            	    // InternalKim.g:5054:17: lv_lookupNamespace_41_0= rulePathName
            	    	            	    {
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
            	    	            	      																
            	    	            	    }
            	    	            	    pushFollow(FOLLOW_74);
            	    	            	    lv_lookupNamespace_41_0=rulePathName();

            	    	            	    state._fsp--;
            	    	            	    if (state.failed) return current;
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	if (current==null) {
            	    	            	      																		current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	            	      																	}
            	    	            	      																	add(
            	    	            	      																		current,
            	    	            	      																		"lookupNamespace",
            	    	            	      																		lv_lookupNamespace_41_0,
            	    	            	      																		"org.integratedmodelling.kim.Kim.PathName");
            	    	            	      																	afterParserOrEnumRuleCall();
            	    	            	      																
            	    	            	    }

            	    	            	    }


            	    	            	    }
            	    	            	    break;

            	    	            	default :
            	    	            	    break loop112;
            	    	                }
            	    	            } while (true);


            	    	            }
            	    	            break;

            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:5078:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5078:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
            	    	    // InternalKim.g:5079:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
            	    	    }
            	    	    // InternalKim.g:5079:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
            	    	    // InternalKim.g:5080:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
            	    	    // InternalKim.g:5083:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
            	    	    // InternalKim.g:5083:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5083:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
            	    	    // InternalKim.g:5083:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
            	    	    {
            	    	    otherlv_42=(Token)match(input,102,FOLLOW_74); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_42, grammarAccess.getNamespaceAccess().getOutsideKeyword_5_7_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5087:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
            	    	    loop114:
            	    	    do {
            	    	        int alt114=2;
            	    	        int LA114_0 = input.LA(1);

            	    	        if ( ((LA114_0>=RULE_UPPERCASE_ID && LA114_0<=RULE_LOWERCASE_ID)||LA114_0==RULE_LOWERCASE_DASHID) ) {
            	    	            alt114=1;
            	    	        }


            	    	        switch (alt114) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:5088:15: (lv_blacklistNamespace_43_0= rulePathName )
            	    	    	    {
            	    	    	    // InternalKim.g:5088:15: (lv_blacklistNamespace_43_0= rulePathName )
            	    	    	    // InternalKim.g:5089:16: lv_blacklistNamespace_43_0= rulePathName
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
            	    	    	      															
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_74);
            	    	    	    lv_blacklistNamespace_43_0=rulePathName();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																if (current==null) {
            	    	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	    	      																}
            	    	    	      																add(
            	    	    	      																	current,
            	    	    	      																	"blacklistNamespace",
            	    	    	      																	lv_blacklistNamespace_43_0,
            	    	    	      																	"org.integratedmodelling.kim.Kim.PathName");
            	    	    	      																afterParserOrEnumRuleCall();
            	    	    	      															
            	    	    	    }

            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop114;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalKim.g:5112:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5112:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) )
            	    	    // InternalKim.g:5113:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
            	    	    }
            	    	    // InternalKim.g:5113:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) )
            	    	    // InternalKim.g:5114:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
            	    	    // InternalKim.g:5117:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) )
            	    	    // InternalKim.g:5117:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5117:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) )
            	    	    // InternalKim.g:5117:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) )
            	    	    {
            	    	    otherlv_44=(Token)match(input,31,FOLLOW_32); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_44, grammarAccess.getNamespaceAccess().getUsingKeyword_5_7_2_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5121:14: ( (lv_weights_45_0= ruleMetadata ) )
            	    	    // InternalKim.g:5122:15: (lv_weights_45_0= ruleMetadata )
            	    	    {
            	    	    // InternalKim.g:5122:15: (lv_weights_45_0= ruleMetadata )
            	    	    // InternalKim.g:5123:16: lv_weights_45_0= ruleMetadata
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_7_2_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_65);
            	    	    lv_weights_45_0=ruleMetadata();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      																}
            	    	      																set(
            	    	      																	current,
            	    	      																	"weights",
            	    	      																	lv_weights_45_0,
            	    	      																	"org.integratedmodelling.kim.Kim.Metadata");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt115 >= 1 ) break loop115;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(115, input);
            	                throw eee;
            	        }
            	        cnt115++;
            	    } while (true);

            	    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7())");
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            }

            // InternalKim.g:5166:3: (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==103) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalKim.g:5167:4: otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMetadata ) )
                    {
                    otherlv_46=(Token)match(input,103,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getNamespaceAccess().getParametersKeyword_6_0());
                      			
                    }
                    // InternalKim.g:5171:4: ( (lv_parameters_47_0= ruleMetadata ) )
                    // InternalKim.g:5172:5: (lv_parameters_47_0= ruleMetadata )
                    {
                    // InternalKim.g:5172:5: (lv_parameters_47_0= ruleMetadata )
                    // InternalKim.g:5173:6: lv_parameters_47_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getParametersMetadataParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_77);
                    lv_parameters_47_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"parameters",
                      							lv_parameters_47_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:5191:3: (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==42) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalKim.g:5192:4: otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMetadata ) )
                    {
                    otherlv_48=(Token)match(input,42,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getNamespaceAccess().getMetadataKeyword_7_0());
                      			
                    }
                    // InternalKim.g:5196:4: ( (lv_metadata_49_0= ruleMetadata ) )
                    // InternalKim.g:5197:5: (lv_metadata_49_0= ruleMetadata )
                    {
                    // InternalKim.g:5197:5: (lv_metadata_49_0= ruleMetadata )
                    // InternalKim.g:5198:6: lv_metadata_49_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getMetadataMetadataParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_metadata_49_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_49_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_50=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_50, grammarAccess.getNamespaceAccess().getSemicolonKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNamespace"


    // $ANTLR start "entryRuleOwlImport"
    // InternalKim.g:5227:1: entryRuleOwlImport returns [EObject current=null] : iv_ruleOwlImport= ruleOwlImport EOF ;
    public final EObject entryRuleOwlImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwlImport = null;


        try {
            // InternalKim.g:5227:50: (iv_ruleOwlImport= ruleOwlImport EOF )
            // InternalKim.g:5228:2: iv_ruleOwlImport= ruleOwlImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwlImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwlImport=ruleOwlImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwlImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwlImport"


    // $ANTLR start "ruleOwlImport"
    // InternalKim.g:5234:1: ruleOwlImport returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) ;
    public final EObject ruleOwlImport() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_prefix_2_0=null;


        	enterRule();

        try {
            // InternalKim.g:5240:2: ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) )
            // InternalKim.g:5241:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            {
            // InternalKim.g:5241:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            // InternalKim.g:5242:3: ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            {
            // InternalKim.g:5242:3: ( (lv_name_0_0= RULE_STRING ) )
            // InternalKim.g:5243:4: (lv_name_0_0= RULE_STRING )
            {
            // InternalKim.g:5243:4: (lv_name_0_0= RULE_STRING )
            // InternalKim.g:5244:5: lv_name_0_0= RULE_STRING
            {
            lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getOwlImportAccess().getNameSTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOwlImportRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.common.Terminals.STRING");
              				
            }

            }


            }

            // InternalKim.g:5260:3: (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            // InternalKim.g:5261:4: otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            {
            otherlv_1=(Token)match(input,25,FOLLOW_59); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getOwlImportAccess().getAsKeyword_1_0());
              			
            }
            // InternalKim.g:5265:4: ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            // InternalKim.g:5266:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            {
            // InternalKim.g:5266:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            // InternalKim.g:5267:6: lv_prefix_2_0= RULE_LOWERCASE_ID
            {
            lv_prefix_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_prefix_2_0, grammarAccess.getOwlImportAccess().getPrefixLOWERCASE_IDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getOwlImportRule());
              						}
              						setWithLastConsumed(
              							current,
              							"prefix",
              							lv_prefix_2_0,
              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwlImport"


    // $ANTLR start "entryRuleImport"
    // InternalKim.g:5288:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalKim.g:5288:47: (iv_ruleImport= ruleImport EOF )
            // InternalKim.g:5289:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalKim.g:5295:1: ruleImport returns [EObject current=null] : ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token lv_star_1_0=null;
        Token otherlv_2=null;
        EObject lv_imports_0_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5301:2: ( ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) )
            // InternalKim.g:5302:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            {
            // InternalKim.g:5302:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            // InternalKim.g:5303:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) )
            {
            // InternalKim.g:5303:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==38||LA120_0==40) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalKim.g:5304:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from'
                    {
                    // InternalKim.g:5304:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) )
                    int alt119=2;
                    int LA119_0 = input.LA(1);

                    if ( (LA119_0==38) ) {
                        alt119=1;
                    }
                    else if ( (LA119_0==40) ) {
                        alt119=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 119, 0, input);

                        throw nvae;
                    }
                    switch (alt119) {
                        case 1 :
                            // InternalKim.g:5305:5: ( (lv_imports_0_0= ruleList ) )
                            {
                            // InternalKim.g:5305:5: ( (lv_imports_0_0= ruleList ) )
                            // InternalKim.g:5306:6: (lv_imports_0_0= ruleList )
                            {
                            // InternalKim.g:5306:6: (lv_imports_0_0= ruleList )
                            // InternalKim.g:5307:7: lv_imports_0_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getImportAccess().getImportsListParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_78);
                            lv_imports_0_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getImportRule());
                              							}
                              							set(
                              								current,
                              								"imports",
                              								lv_imports_0_0,
                              								"org.integratedmodelling.kim.Kim.List");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:5325:5: ( (lv_star_1_0= '*' ) )
                            {
                            // InternalKim.g:5325:5: ( (lv_star_1_0= '*' ) )
                            // InternalKim.g:5326:6: (lv_star_1_0= '*' )
                            {
                            // InternalKim.g:5326:6: (lv_star_1_0= '*' )
                            // InternalKim.g:5327:7: lv_star_1_0= '*'
                            {
                            lv_star_1_0=(Token)match(input,40,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_star_1_0, grammarAccess.getImportAccess().getStarAsteriskKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getImportRule());
                              							}
                              							setWithLastConsumed(current, "star", true, "*");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,101,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportAccess().getFromKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5345:3: ( (lv_name_3_0= rulePathName ) )
            // InternalKim.g:5346:4: (lv_name_3_0= rulePathName )
            {
            // InternalKim.g:5346:4: (lv_name_3_0= rulePathName )
            // InternalKim.g:5347:5: lv_name_3_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportAccess().getNamePathNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_3_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleUrnId"
    // InternalKim.g:5368:1: entryRuleUrnId returns [String current=null] : iv_ruleUrnId= ruleUrnId EOF ;
    public final String entryRuleUrnId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnId = null;


        try {
            // InternalKim.g:5368:45: (iv_ruleUrnId= ruleUrnId EOF )
            // InternalKim.g:5369:2: iv_ruleUrnId= ruleUrnId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnId=ruleUrnId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnId"


    // $ANTLR start "ruleUrnId"
    // InternalKim.g:5375:1: ruleUrnId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? ) ;
    public final AntlrDatatypeRuleToken ruleUrnId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_8=null;
        AntlrDatatypeRuleToken this_PathName_1 = null;

        AntlrDatatypeRuleToken this_PathName_3 = null;

        AntlrDatatypeRuleToken this_PathName_5 = null;

        AntlrDatatypeRuleToken this_Path_7 = null;

        AntlrDatatypeRuleToken this_VersionNumber_10 = null;

        AntlrDatatypeRuleToken this_Path_12 = null;

        AntlrDatatypeRuleToken this_UrnKvp_13 = null;

        AntlrDatatypeRuleToken this_Path_15 = null;

        AntlrDatatypeRuleToken this_UrnKvp_16 = null;



        	enterRule();

        try {
            // InternalKim.g:5381:2: ( ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? ) )
            // InternalKim.g:5382:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? )
            {
            // InternalKim.g:5382:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? )
            // InternalKim.g:5383:3: (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )?
            {
            // InternalKim.g:5383:3: (kw= 'urn:klab:' )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==104) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalKim.g:5384:4: kw= 'urn:klab:'
                    {
                    kw=(Token)match(input,104,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_79);
            this_PathName_1=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,105,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_79);
            this_PathName_3=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_3);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,105,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_4());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_79);
            this_PathName_5=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_5);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,105,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_6());
              		
            }
            // InternalKim.g:5435:3: (this_Path_7= rulePath | this_INT_8= RULE_INT )
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( ((LA122_0>=RULE_UPPERCASE_ID && LA122_0<=RULE_LOWERCASE_ID)||LA122_0==RULE_LOWERCASE_DASHID) ) {
                alt122=1;
            }
            else if ( (LA122_0==RULE_INT) ) {
                alt122=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }
            switch (alt122) {
                case 1 :
                    // InternalKim.g:5436:4: this_Path_7= rulePath
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7_0());
                      			
                    }
                    pushFollow(FOLLOW_81);
                    this_Path_7=rulePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Path_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5447:4: this_INT_8= RULE_INT
                    {
                    this_INT_8=(Token)match(input,RULE_INT,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_8, grammarAccess.getUrnIdAccess().getINTTerminalRuleCall_7_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5455:3: (kw= ':' this_VersionNumber_10= ruleVersionNumber )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==105) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalKim.g:5456:4: kw= ':' this_VersionNumber_10= ruleVersionNumber
                    {
                    kw=(Token)match(input,105,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_8_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1());
                      			
                    }
                    pushFollow(FOLLOW_82);
                    this_VersionNumber_10=ruleVersionNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_VersionNumber_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5472:3: (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==53) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalKim.g:5473:4: kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )*
                    {
                    kw=(Token)match(input,53,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0());
                      			
                    }
                    // InternalKim.g:5478:4: (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp )
                    int alt124=2;
                    alt124 = dfa124.predict(input);
                    switch (alt124) {
                        case 1 :
                            // InternalKim.g:5479:5: this_Path_12= rulePath
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_1_0());
                              				
                            }
                            pushFollow(FOLLOW_83);
                            this_Path_12=rulePath();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_Path_12);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:5490:5: this_UrnKvp_13= ruleUrnKvp
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_1_1());
                              				
                            }
                            pushFollow(FOLLOW_83);
                            this_UrnKvp_13=ruleUrnKvp();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_UrnKvp_13);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:5501:4: (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )*
                    loop126:
                    do {
                        int alt126=2;
                        int LA126_0 = input.LA(1);

                        if ( (LA126_0==106) ) {
                            alt126=1;
                        }


                        switch (alt126) {
                    	case 1 :
                    	    // InternalKim.g:5502:5: kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )
                    	    {
                    	    kw=(Token)match(input,106,FOLLOW_25); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current.merge(kw);
                    	      					newLeafNode(kw, grammarAccess.getUrnIdAccess().getAmpersandKeyword_9_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:5507:5: (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )
                    	    int alt125=2;
                    	    alt125 = dfa125.predict(input);
                    	    switch (alt125) {
                    	        case 1 :
                    	            // InternalKim.g:5508:6: this_Path_15= rulePath
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              						newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_2_1_0());
                    	              					
                    	            }
                    	            pushFollow(FOLLOW_83);
                    	            this_Path_15=rulePath();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_Path_15);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						afterParserOrEnumRuleCall();
                    	              					
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:5519:6: this_UrnKvp_16= ruleUrnKvp
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              						newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_2_1_1());
                    	              					
                    	            }
                    	            pushFollow(FOLLOW_83);
                    	            this_UrnKvp_16=ruleUrnKvp();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_UrnKvp_16);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						afterParserOrEnumRuleCall();
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop126;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnId"


    // $ANTLR start "entryRuleUrnKvp"
    // InternalKim.g:5536:1: entryRuleUrnKvp returns [String current=null] : iv_ruleUrnKvp= ruleUrnKvp EOF ;
    public final String entryRuleUrnKvp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnKvp = null;


        try {
            // InternalKim.g:5536:46: (iv_ruleUrnKvp= ruleUrnKvp EOF )
            // InternalKim.g:5537:2: iv_ruleUrnKvp= ruleUrnKvp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnKvpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnKvp=ruleUrnKvp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnKvp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnKvp"


    // $ANTLR start "ruleUrnKvp"
    // InternalKim.g:5543:1: ruleUrnKvp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) ) ;
    public final AntlrDatatypeRuleToken ruleUrnKvp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_3=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;

        AntlrDatatypeRuleToken this_Path_2 = null;



        	enterRule();

        try {
            // InternalKim.g:5549:2: ( (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) ) )
            // InternalKim.g:5550:2: (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) )
            {
            // InternalKim.g:5550:2: (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) )
            // InternalKim.g:5551:3: this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnKvpAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_84);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,82,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnKvpAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalKim.g:5566:3: (this_Path_2= rulePath | this_INT_3= RULE_INT )
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( ((LA128_0>=RULE_UPPERCASE_ID && LA128_0<=RULE_LOWERCASE_ID)||LA128_0==RULE_LOWERCASE_DASHID) ) {
                alt128=1;
            }
            else if ( (LA128_0==RULE_INT) ) {
                alt128=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }
            switch (alt128) {
                case 1 :
                    // InternalKim.g:5567:4: this_Path_2= rulePath
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnKvpAccess().getPathParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Path_2=rulePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Path_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5578:4: this_INT_3= RULE_INT
                    {
                    this_INT_3=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_3, grammarAccess.getUrnKvpAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnKvp"


    // $ANTLR start "entryRuleLocalFilePath"
    // InternalKim.g:5590:1: entryRuleLocalFilePath returns [String current=null] : iv_ruleLocalFilePath= ruleLocalFilePath EOF ;
    public final String entryRuleLocalFilePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLocalFilePath = null;


        try {
            // InternalKim.g:5590:53: (iv_ruleLocalFilePath= ruleLocalFilePath EOF )
            // InternalKim.g:5591:2: iv_ruleLocalFilePath= ruleLocalFilePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalFilePathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalFilePath=ruleLocalFilePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalFilePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalFilePath"


    // $ANTLR start "ruleLocalFilePath"
    // InternalKim.g:5597:1: ruleLocalFilePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleLocalFilePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_CAMELCASE_ID_0=null;
        Token this_LOWERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_CAMELCASE_ID_4=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;
        Token this_LOWERCASE_ID_8=null;
        Token this_LOWERCASE_ID_10=null;


        	enterRule();

        try {
            // InternalKim.g:5603:2: ( ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) )
            // InternalKim.g:5604:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            {
            // InternalKim.g:5604:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            // InternalKim.g:5605:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            {
            // InternalKim.g:5605:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt129=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt129=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                alt129=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt129=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;
            }

            switch (alt129) {
                case 1 :
                    // InternalKim.g:5606:4: this_CAMELCASE_ID_0= RULE_CAMELCASE_ID
                    {
                    this_CAMELCASE_ID_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_CAMELCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_CAMELCASE_ID_0, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5614:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:5622:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5630:3: (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==107) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // InternalKim.g:5631:4: kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,107,FOLLOW_86); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getSolidusKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:5636:4: (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt130=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_CAMELCASE_ID:
            	        {
            	        alt130=1;
            	        }
            	        break;
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt130=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt130=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 130, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt130) {
            	        case 1 :
            	            // InternalKim.g:5637:5: this_CAMELCASE_ID_4= RULE_CAMELCASE_ID
            	            {
            	            this_CAMELCASE_ID_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_85); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_CAMELCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_CAMELCASE_ID_4, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5645:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_85); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:5653:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_85); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);

            // InternalKim.g:5662:3: (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==108) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalKim.g:5663:4: kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,108,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getFullStopKeyword_2_0());
                      			
                    }
                    this_LOWERCASE_ID_8=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5676:3: (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==53) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalKim.g:5677:4: kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,53,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getNumberSignKeyword_3_0());
                      			
                    }
                    this_LOWERCASE_ID_10=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalFilePath"


    // $ANTLR start "entryRuleObserveStatement"
    // InternalKim.g:5694:1: entryRuleObserveStatement returns [EObject current=null] : iv_ruleObserveStatement= ruleObserveStatement EOF ;
    public final EObject entryRuleObserveStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatement = null;


        try {
            // InternalKim.g:5694:57: (iv_ruleObserveStatement= ruleObserveStatement EOF )
            // InternalKim.g:5695:2: iv_ruleObserveStatement= ruleObserveStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatement=ruleObserveStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatement"


    // $ANTLR start "ruleObserveStatement"
    // InternalKim.g:5701:1: ruleObserveStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) ) ;
    public final EObject ruleObserveStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_body_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5707:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) ) )
            // InternalKim.g:5708:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) )
            {
            // InternalKim.g:5708:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) )
            // InternalKim.g:5709:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) )
            {
            // InternalKim.g:5709:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==RULE_ANNOTATION_ID) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalKim.g:5710:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:5710:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:5711:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:5711:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:5712:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_87);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObserveStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:5729:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop134:
                    do {
                        int alt134=2;
                        int LA134_0 = input.LA(1);

                        if ( (LA134_0==RULE_ANNOTATION_ID) ) {
                            alt134=1;
                        }


                        switch (alt134) {
                    	case 1 :
                    	    // InternalKim.g:5730:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:5730:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:5731:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_87);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getObserveStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop134;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_2=(Token)match(input,109,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getObserveStatementAccess().getObserveKeyword_1());
              		
            }
            // InternalKim.g:5753:3: ( (lv_body_3_0= ruleObserveStatementBody ) )
            // InternalKim.g:5754:4: (lv_body_3_0= ruleObserveStatementBody )
            {
            // InternalKim.g:5754:4: (lv_body_3_0= ruleObserveStatementBody )
            // InternalKim.g:5755:5: lv_body_3_0= ruleObserveStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObserveStatementAccess().getBodyObserveStatementBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_3_0=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObserveStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_3_0,
              						"org.integratedmodelling.kim.Kim.ObserveStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObserveStatement"


    // $ANTLR start "entryRuleObserveStatementBody"
    // InternalKim.g:5776:1: entryRuleObserveStatementBody returns [EObject current=null] : iv_ruleObserveStatementBody= ruleObserveStatementBody EOF ;
    public final EObject entryRuleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4()
        	);

        try {
            // InternalKim.g:5781:2: (iv_ruleObserveStatementBody= ruleObserveStatementBody EOF )
            // InternalKim.g:5782:2: iv_ruleObserveStatementBody= ruleObserveStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatementBody=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatementBody"


    // $ANTLR start "ruleObserveStatementBody"
    // InternalKim.g:5791:1: ruleObserveStatementBody returns [EObject current=null] : ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ;
    public final EObject ruleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;

        EObject lv_actions_22_0 = null;

        EObject lv_accessor_24_0 = null;

        EObject lv_metadata_26_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4()
        	);

        try {
            // InternalKim.g:5801:2: ( ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            // InternalKim.g:5802:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            {
            // InternalKim.g:5802:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            // InternalKim.g:5803:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            {
            // InternalKim.g:5803:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            // InternalKim.g:5804:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
            // InternalKim.g:5807:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            // InternalKim.g:5808:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
            {
            // InternalKim.g:5808:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+
            int cnt145=0;
            loop145:
            do {
                int alt145=4;
                alt145 = dfa145.predict(input);
                switch (alt145) {
            	case 1 :
            	    // InternalKim.g:5809:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
            	    {
            	    // InternalKim.g:5809:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
            	    // InternalKim.g:5810:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
            	    }
            	    // InternalKim.g:5810:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
            	    // InternalKim.g:5811:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
            	    // InternalKim.g:5814:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
            	    // InternalKim.g:5814:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:5814:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
            	    // InternalKim.g:5814:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )*
            	    {
            	    // InternalKim.g:5814:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
            	    int alt136=2;
            	    alt136 = dfa136.predict(input);
            	    switch (alt136) {
            	        case 1 :
            	            // InternalKim.g:5815:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
            	            {
            	            // InternalKim.g:5815:9: ( (lv_urn_1_0= ruleUrn ) )
            	            // InternalKim.g:5816:10: (lv_urn_1_0= ruleUrn )
            	            {
            	            // InternalKim.g:5816:10: (lv_urn_1_0= ruleUrn )
            	            // InternalKim.g:5817:11: lv_urn_1_0= ruleUrn
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_11);
            	            lv_urn_1_0=ruleUrn();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"urn",
            	              												lv_urn_1_0,
            	              												"org.integratedmodelling.kim.Kim.Urn");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            otherlv_2=(Token)match(input,25,FOLLOW_8); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_2, grammarAccess.getObserveStatementBodyAccess().getAsKeyword_0_0_1());
            	              								
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:5839:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
            	    // InternalKim.g:5840:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    {
            	    // InternalKim.g:5840:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    // InternalKim.g:5841:10: lv_concept_3_0= ruleNamedObservableSemantics
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_concept_3_0=ruleNamedObservableSemantics();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"concept",
            	      											lv_concept_3_0,
            	      											"org.integratedmodelling.kim.Kim.NamedObservableSemantics");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }

            	    // InternalKim.g:5858:8: ( (lv_docstring_4_0= RULE_STRING ) )?
            	    int alt137=2;
            	    int LA137_0 = input.LA(1);

            	    if ( (LA137_0==RULE_STRING) ) {
            	        int LA137_1 = input.LA(2);

            	        if ( (LA137_1==EOF||(LA137_1>=RULE_UPPERCASE_ID && LA137_1<=RULE_STRING)||LA137_1==RULE_CAMELCASE_ID||LA137_1==RULE_LOWERCASE_DASHID||LA137_1==20||(LA137_1>=30 && LA137_1<=31)||LA137_1==38||(LA137_1>=41 && LA137_1<=42)||(LA137_1>=54 && LA137_1<=56)||(LA137_1>=62 && LA137_1<=67)||LA137_1==104||(LA137_1>=110 && LA137_1<=111)||(LA137_1>=130 && LA137_1<=131)||(LA137_1>=139 && LA137_1<=140)||(LA137_1>=142 && LA137_1<=160)) ) {
            	            alt137=1;
            	        }
            	    }
            	    switch (alt137) {
            	        case 1 :
            	            // InternalKim.g:5859:9: (lv_docstring_4_0= RULE_STRING )
            	            {
            	            // InternalKim.g:5859:9: (lv_docstring_4_0= RULE_STRING )
            	            // InternalKim.g:5860:10: lv_docstring_4_0= RULE_STRING
            	            {
            	            lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_89); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_docstring_4_0, grammarAccess.getObserveStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_0_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										setWithLastConsumed(
            	              											current,
            	              											"docstring",
            	              											lv_docstring_4_0,
            	              											"org.eclipse.xtext.common.Terminals.STRING");
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5876:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
            	    int alt139=2;
            	    int LA139_0 = input.LA(1);

            	    if ( (LA139_0==110) ) {
            	        alt139=1;
            	    }
            	    switch (alt139) {
            	        case 1 :
            	            // InternalKim.g:5877:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            {
            	            otherlv_5=(Token)match(input,110,FOLLOW_25); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_5, grammarAccess.getObserveStatementBodyAccess().getExtendsKeyword_0_3_0());
            	              								
            	            }
            	            // InternalKim.g:5881:9: ( (lv_parents_6_0= rulePathName ) )
            	            // InternalKim.g:5882:10: (lv_parents_6_0= rulePathName )
            	            {
            	            // InternalKim.g:5882:10: (lv_parents_6_0= rulePathName )
            	            // InternalKim.g:5883:11: lv_parents_6_0= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_90);
            	            lv_parents_6_0=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											add(
            	              												current,
            	              												"parents",
            	              												lv_parents_6_0,
            	              												"org.integratedmodelling.kim.Kim.PathName");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            // InternalKim.g:5900:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            loop138:
            	            do {
            	                int alt138=2;
            	                int LA138_0 = input.LA(1);

            	                if ( (LA138_0==27) ) {
            	                    alt138=1;
            	                }


            	                switch (alt138) {
            	            	case 1 :
            	            	    // InternalKim.g:5901:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
            	            	    {
            	            	    otherlv_7=(Token)match(input,27,FOLLOW_25); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_7, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_3_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:5905:10: ( (lv_parents_8_0= rulePathName ) )
            	            	    // InternalKim.g:5906:11: (lv_parents_8_0= rulePathName )
            	            	    {
            	            	    // InternalKim.g:5906:11: (lv_parents_8_0= rulePathName )
            	            	    // InternalKim.g:5907:12: lv_parents_8_0= rulePathName
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_90);
            	            	    lv_parents_8_0=rulePathName();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"parents",
            	            	      													lv_parents_8_0,
            	            	      													"org.integratedmodelling.kim.Kim.PathName");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop138;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5926:8: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) )
            	    // InternalKim.g:5927:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
            	    {
            	    // InternalKim.g:5927:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
            	    // InternalKim.g:5928:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
            	    // InternalKim.g:5931:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
            	    // InternalKim.g:5932:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
            	    {
            	    // InternalKim.g:5932:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
            	    loop142:
            	    do {
            	        int alt142=3;
            	        int LA142_0 = input.LA(1);

            	        if ( LA142_0 == 30 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            	            alt142=1;
            	        }
            	        else if ( LA142_0 == 111 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            	            alt142=2;
            	        }


            	        switch (alt142) {
            	    	case 1 :
            	    	    // InternalKim.g:5933:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5933:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
            	    	    // InternalKim.g:5934:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
            	    	    }
            	    	    // InternalKim.g:5934:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
            	    	    // InternalKim.g:5935:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
            	    	    // InternalKim.g:5938:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
            	    	    // InternalKim.g:5938:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:5938:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
            	    	    // InternalKim.g:5938:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	    	    {
            	    	    otherlv_10=(Token)match(input,30,FOLLOW_8); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_10, grammarAccess.getObserveStatementBodyAccess().getObservingKeyword_0_4_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5942:14: ( (lv_states_11_0= ruleObservableSemantics ) )
            	    	    // InternalKim.g:5943:15: (lv_states_11_0= ruleObservableSemantics )
            	    	    {
            	    	    // InternalKim.g:5943:15: (lv_states_11_0= ruleObservableSemantics )
            	    	    // InternalKim.g:5944:16: lv_states_11_0= ruleObservableSemantics
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_90);
            	    	    lv_states_11_0=ruleObservableSemantics();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      																}
            	    	      																add(
            	    	      																	current,
            	    	      																	"states",
            	    	      																	lv_states_11_0,
            	    	      																	"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:5961:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	    	    loop140:
            	    	    do {
            	    	        int alt140=2;
            	    	        int LA140_0 = input.LA(1);

            	    	        if ( (LA140_0==27) ) {
            	    	            alt140=1;
            	    	        }


            	    	        switch (alt140) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:5962:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
            	    	    	    {
            	    	    	    otherlv_12=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_12, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_4_0_2_0());
            	    	    	      														
            	    	    	    }
            	    	    	    // InternalKim.g:5966:15: ( (lv_states_13_0= ruleObservableSemantics ) )
            	    	    	    // InternalKim.g:5967:16: (lv_states_13_0= ruleObservableSemantics )
            	    	    	    {
            	    	    	    // InternalKim.g:5967:16: (lv_states_13_0= ruleObservableSemantics )
            	    	    	    // InternalKim.g:5968:17: lv_states_13_0= ruleObservableSemantics
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
            	    	    	      																
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_90);
            	    	    	    lv_states_13_0=ruleObservableSemantics();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	if (current==null) {
            	    	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	    	      																	}
            	    	    	      																	add(
            	    	    	      																		current,
            	    	    	      																		"states",
            	    	    	      																		lv_states_13_0,
            	    	    	      																		"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	    	    	      																	afterParserOrEnumRuleCall();
            	    	    	      																
            	    	    	    }

            	    	    	    }


            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop140;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:5992:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5992:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
            	    	    // InternalKim.g:5993:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
            	    	    }
            	    	    // InternalKim.g:5993:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
            	    	    // InternalKim.g:5994:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
            	    	    // InternalKim.g:5997:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
            	    	    // InternalKim.g:5997:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:5997:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
            	    	    // InternalKim.g:5997:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
            	    	    {
            	    	    otherlv_14=(Token)match(input,111,FOLLOW_39); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_14, grammarAccess.getObserveStatementBodyAccess().getChildrenKeyword_0_4_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:6001:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
            	    	    // InternalKim.g:6002:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
            	    	    {
            	    	    otherlv_15=(Token)match(input,38,FOLLOW_88); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_15, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_4_1_1_0());
            	    	      														
            	    	    }
            	    	    // InternalKim.g:6006:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
            	    	    // InternalKim.g:6007:16: (lv_observations_16_0= ruleObserveStatementBody )
            	    	    {
            	    	    // InternalKim.g:6007:16: (lv_observations_16_0= ruleObserveStatementBody )
            	    	    // InternalKim.g:6008:17: lv_observations_16_0= ruleObserveStatementBody
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
            	    	      																
            	    	    }
            	    	    pushFollow(FOLLOW_91);
            	    	    lv_observations_16_0=ruleObserveStatementBody();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																	if (current==null) {
            	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      																	}
            	    	      																	add(
            	    	      																		current,
            	    	      																		"observations",
            	    	      																		lv_observations_16_0,
            	    	      																		"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	    	      																	afterParserOrEnumRuleCall();
            	    	      																
            	    	    }

            	    	    }


            	    	    }

            	    	    otherlv_17=(Token)match(input,41,FOLLOW_90); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_17, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_4_1_1_2());
            	    	      														
            	    	    }

            	    	    }

            	    	    // InternalKim.g:6030:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
            	    	    loop141:
            	    	    do {
            	    	        int alt141=2;
            	    	        int LA141_0 = input.LA(1);

            	    	        if ( (LA141_0==27) ) {
            	    	            alt141=1;
            	    	        }


            	    	        switch (alt141) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:6031:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
            	    	    	    {
            	    	    	    otherlv_18=(Token)match(input,27,FOLLOW_39); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_18, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_4_1_2_0());
            	    	    	      														
            	    	    	    }
            	    	    	    otherlv_19=(Token)match(input,38,FOLLOW_88); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_19, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_4_1_2_1());
            	    	    	      														
            	    	    	    }
            	    	    	    // InternalKim.g:6039:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
            	    	    	    // InternalKim.g:6040:16: (lv_observations_20_0= ruleObserveStatementBody )
            	    	    	    {
            	    	    	    // InternalKim.g:6040:16: (lv_observations_20_0= ruleObserveStatementBody )
            	    	    	    // InternalKim.g:6041:17: lv_observations_20_0= ruleObserveStatementBody
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
            	    	    	      																
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_91);
            	    	    	    lv_observations_20_0=ruleObserveStatementBody();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	if (current==null) {
            	    	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	    	      																	}
            	    	    	      																	add(
            	    	    	      																		current,
            	    	    	      																		"observations",
            	    	    	      																		lv_observations_20_0,
            	    	    	      																		"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	    	    	      																	afterParserOrEnumRuleCall();
            	    	    	      																
            	    	    	    }

            	    	    	    }


            	    	    	    }

            	    	    	    otherlv_21=(Token)match(input,41,FOLLOW_90); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_21, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_4_1_2_3());
            	    	    	      														
            	    	    	    }

            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop141;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop142;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    }

            	    // InternalKim.g:6076:8: ( (lv_actions_22_0= ruleActionSpecification ) )*
            	    loop143:
            	    do {
            	        int alt143=2;
            	        int LA143_0 = input.LA(1);

            	        if ( ((LA143_0>=54 && LA143_0<=56)||(LA143_0>=62 && LA143_0<=67)) ) {
            	            alt143=1;
            	        }


            	        switch (alt143) {
            	    	case 1 :
            	    	    // InternalKim.g:6077:9: (lv_actions_22_0= ruleActionSpecification )
            	    	    {
            	    	    // InternalKim.g:6077:9: (lv_actions_22_0= ruleActionSpecification )
            	    	    // InternalKim.g:6078:10: lv_actions_22_0= ruleActionSpecification
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_5_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_92);
            	    	    lv_actions_22_0=ruleActionSpecification();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"actions",
            	    	      											lv_actions_22_0,
            	    	      											"org.integratedmodelling.kim.Kim.ActionSpecification");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop143;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6101:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
            	    {
            	    // InternalKim.g:6101:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
            	    // InternalKim.g:6102:4: {...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
            	    }
            	    // InternalKim.g:6102:114: ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
            	    // InternalKim.g:6103:5: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
            	    // InternalKim.g:6106:8: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
            	    // InternalKim.g:6106:9: {...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:6106:18: (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
            	    // InternalKim.g:6106:19: otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )?
            	    {
            	    otherlv_23=(Token)match(input,31,FOLLOW_93); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(otherlv_23, grammarAccess.getObserveStatementBodyAccess().getUsingKeyword_1_0());
            	      							
            	    }
            	    // InternalKim.g:6110:8: ( (lv_accessor_24_0= ruleFunction ) )?
            	    int alt144=2;
            	    alt144 = dfa144.predict(input);
            	    switch (alt144) {
            	        case 1 :
            	            // InternalKim.g:6111:9: (lv_accessor_24_0= ruleFunction )
            	            {
            	            // InternalKim.g:6111:9: (lv_accessor_24_0= ruleFunction )
            	            // InternalKim.g:6112:10: lv_accessor_24_0= ruleFunction
            	            {
            	            if ( state.backtracking==0 ) {

            	              										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_1_1_0());
            	              									
            	            }
            	            pushFollow(FOLLOW_93);
            	            lv_accessor_24_0=ruleFunction();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										set(
            	              											current,
            	              											"accessor",
            	              											lv_accessor_24_0,
            	              											"org.integratedmodelling.kim.Kim.Function");
            	              										afterParserOrEnumRuleCall();
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6135:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6135:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) )
            	    // InternalKim.g:6136:4: {...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2)");
            	    }
            	    // InternalKim.g:6136:114: ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) )
            	    // InternalKim.g:6137:5: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2);
            	    // InternalKim.g:6140:8: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) )
            	    // InternalKim.g:6140:9: {...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:6140:18: (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )
            	    // InternalKim.g:6140:19: otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) )
            	    {
            	    otherlv_25=(Token)match(input,42,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(otherlv_25, grammarAccess.getObserveStatementBodyAccess().getMetadataKeyword_2_0());
            	      							
            	    }
            	    // InternalKim.g:6144:8: ( (lv_metadata_26_0= ruleMetadata ) )
            	    // InternalKim.g:6145:9: (lv_metadata_26_0= ruleMetadata )
            	    {
            	    // InternalKim.g:6145:9: (lv_metadata_26_0= ruleMetadata )
            	    // InternalKim.g:6146:10: lv_metadata_26_0= ruleMetadata
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_2_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_93);
            	    lv_metadata_26_0=ruleMetadata();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"metadata",
            	      											lv_metadata_26_0,
            	      											"org.integratedmodelling.kim.Kim.Metadata");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt145 >= 1 ) break loop145;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(145, input);
                        throw eee;
                }
                cnt145++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObserveStatementBody"


    // $ANTLR start "entryRuleObservableSemantics"
    // InternalKim.g:6183:1: entryRuleObservableSemantics returns [EObject current=null] : iv_ruleObservableSemantics= ruleObservableSemantics EOF ;
    public final EObject entryRuleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:6187:2: (iv_ruleObservableSemantics= ruleObservableSemantics EOF )
            // InternalKim.g:6188:2: iv_ruleObservableSemantics= ruleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObservableSemantics=ruleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObservableSemantics"


    // $ANTLR start "ruleObservableSemantics"
    // InternalKim.g:6197:1: ruleObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token lv_optional_15_0=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_valueOperators_13_0 = null;

        EObject lv_valueOperators_14_0 = null;

        EObject lv_from_17_0 = null;

        EObject lv_to_19_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:6206:2: ( ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:6207:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:6207:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:6208:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:6208:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?
            int alt146=2;
            alt146 = dfa146.predict(input);
            switch (alt146) {
                case 1 :
                    // InternalKim.g:6209:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:6209:4: ( (lv_value_0_0= ruleValue ) )
                    // InternalKim.g:6210:5: (lv_value_0_0= ruleValue )
                    {
                    // InternalKim.g:6210:5: (lv_value_0_0= ruleValue )
                    // InternalKim.g:6211:6: lv_value_0_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,25,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6233:3: ( (lv_generic_2_0= 'any' ) )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==112) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalKim.g:6234:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:6234:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:6235:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,112,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:6247:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:6248:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:6248:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:6249:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_94);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:6266:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:6267:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:6267:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:6268:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:6271:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:6272:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:6272:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop153:
            do {
                int alt153=7;
                alt153 = dfa153.predict(input);
                switch (alt153) {
            	case 1 :
            	    // InternalKim.g:6273:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6273:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:6274:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:6274:116: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:6275:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:6278:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:6278:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6278:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:6278:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,35,FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,36,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:6286:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:6287:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:6287:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:6288:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6311:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6311:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:6312:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:6312:116: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:6313:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:6316:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:6316:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6316:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt149=2;
            	    int LA149_0 = input.LA(1);

            	    if ( (LA149_0==48) ) {
            	        alt149=1;
            	    }
            	    else if ( (LA149_0==113) ) {
            	        alt149=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 149, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt149) {
            	        case 1 :
            	            // InternalKim.g:6316:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:6316:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:6317:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            otherlv_8=(Token)match(input,48,FOLLOW_95); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:6321:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt148=2;
            	            int LA148_0 = input.LA(1);

            	            if ( (LA148_0==EOF||(LA148_0>=RULE_LOWERCASE_ID && LA148_0<=RULE_STRING)||(LA148_0>=RULE_CAMELCASE_ID && LA148_0<=RULE_LOWERCASE_DASHID)||LA148_0==RULE_BACKCASE_ID||LA148_0==20||LA148_0==27||(LA148_0>=30 && LA148_0<=31)||LA148_0==35||LA148_0==38||(LA148_0>=40 && LA148_0<=42)||LA148_0==48||(LA148_0>=54 && LA148_0<=56)||(LA148_0>=62 && LA148_0<=67)||(LA148_0>=76 && LA148_0<=88)||LA148_0==104||LA148_0==107||LA148_0==111||(LA148_0>=113 && LA148_0<=120)||(LA148_0>=130 && LA148_0<=131)||(LA148_0>=139 && LA148_0<=140)||(LA148_0>=142 && LA148_0<=160)||(LA148_0>=173 && LA148_0<=174)||(LA148_0>=177 && LA148_0<=179)||(LA148_0>=181 && LA148_0<=189)||(LA148_0>=192 && LA148_0<=202)||LA148_0==209||(LA148_0>=251 && LA148_0<=252)||LA148_0==259) ) {
            	                alt148=1;
            	            }
            	            else if ( (LA148_0==RULE_UPPERCASE_ID) ) {
            	                int LA148_2 = input.LA(2);

            	                if ( (LA148_2==EOF||(LA148_2>=RULE_UPPERCASE_ID && LA148_2<=RULE_STRING)||(LA148_2>=RULE_CAMELCASE_ID && LA148_2<=RULE_LOWERCASE_DASHID)||LA148_2==RULE_BACKCASE_ID||LA148_2==20||LA148_2==25||LA148_2==27||(LA148_2>=30 && LA148_2<=31)||LA148_2==35||LA148_2==38||(LA148_2>=40 && LA148_2<=42)||LA148_2==48||(LA148_2>=54 && LA148_2<=56)||(LA148_2>=62 && LA148_2<=67)||(LA148_2>=76 && LA148_2<=88)||(LA148_2>=104 && LA148_2<=105)||(LA148_2>=107 && LA148_2<=108)||LA148_2==111||(LA148_2>=113 && LA148_2<=120)||(LA148_2>=130 && LA148_2<=131)||(LA148_2>=139 && LA148_2<=140)||(LA148_2>=142 && LA148_2<=160)||(LA148_2>=173 && LA148_2<=174)||(LA148_2>=177 && LA148_2<=179)||(LA148_2>=181 && LA148_2<=189)||(LA148_2>=192 && LA148_2<=202)||LA148_2==209||(LA148_2>=251 && LA148_2<=252)||LA148_2==259) ) {
            	                    alt148=1;
            	                }
            	                else if ( (LA148_2==250) ) {
            	                    alt148=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 148, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 148, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt148) {
            	                case 1 :
            	                    // InternalKim.g:6322:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:6322:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:6323:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:6323:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:6324:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_94);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:6342:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:6342:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:6343:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:6343:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:6344:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_94);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6364:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:6364:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:6365:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            otherlv_11=(Token)match(input,113,FOLLOW_95); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_11, grammarAccess.getObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:6369:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:6370:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:6370:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:6371:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_94);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6395:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:6395:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:6396:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:6396:116: ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:6397:6: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:6400:9: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:6400:10: {...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6400:19: ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
            	    // InternalKim.g:6400:20: ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:6400:20: ( (lv_valueOperators_13_0= ruleValueOperator ) )
            	    // InternalKim.g:6401:10: (lv_valueOperators_13_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:6401:10: (lv_valueOperators_13_0= ruleValueOperator )
            	    // InternalKim.g:6402:11: lv_valueOperators_13_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_valueOperators_13_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_13_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:6419:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*
            	    loop150:
            	    do {
            	        int alt150=2;
            	        alt150 = dfa150.predict(input);
            	        switch (alt150) {
            	    	case 1 :
            	    	    // InternalKim.g:6420:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:6420:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    	    // InternalKim.g:6421:11: lv_valueOperators_14_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_94);
            	    	    lv_valueOperators_14_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_14_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop150;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:6444:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:6444:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
            	    // InternalKim.g:6445:5: {...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:6445:116: ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
            	    // InternalKim.g:6446:6: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:6449:9: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
            	    // InternalKim.g:6449:10: {...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6449:19: ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
            	    int alt151=2;
            	    int LA151_0 = input.LA(1);

            	    if ( (LA151_0==114) ) {
            	        alt151=1;
            	    }
            	    else if ( (LA151_0==115) ) {
            	        alt151=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 151, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt151) {
            	        case 1 :
            	            // InternalKim.g:6449:20: ( (lv_optional_15_0= 'optional' ) )
            	            {
            	            // InternalKim.g:6449:20: ( (lv_optional_15_0= 'optional' ) )
            	            // InternalKim.g:6450:10: (lv_optional_15_0= 'optional' )
            	            {
            	            // InternalKim.g:6450:10: (lv_optional_15_0= 'optional' )
            	            // InternalKim.g:6451:11: lv_optional_15_0= 'optional'
            	            {
            	            lv_optional_15_0=(Token)match(input,114,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_15_0, grammarAccess.getObservableSemanticsAccess().getOptionalOptionalKeyword_3_3_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6464:9: otherlv_16= 'required'
            	            {
            	            otherlv_16=(Token)match(input,115,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_16, grammarAccess.getObservableSemanticsAccess().getRequiredKeyword_3_3_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:6474:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6474:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:6475:5: {...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:6475:116: ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:6476:6: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:6479:9: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
            	    // InternalKim.g:6479:10: {...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6479:19: ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
            	    // InternalKim.g:6479:20: ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:6479:20: ( (lv_from_17_0= ruleNumber ) )
            	    // InternalKim.g:6480:10: (lv_from_17_0= ruleNumber )
            	    {
            	    // InternalKim.g:6480:10: (lv_from_17_0= ruleNumber )
            	    // InternalKim.g:6481:11: lv_from_17_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_4_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_from_17_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_17_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_18=(Token)match(input,36,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_4_1());
            	      								
            	    }
            	    // InternalKim.g:6502:9: ( (lv_to_19_0= ruleNumber ) )
            	    // InternalKim.g:6503:10: (lv_to_19_0= ruleNumber )
            	    {
            	    // InternalKim.g:6503:10: (lv_to_19_0= ruleNumber )
            	    // InternalKim.g:6504:11: lv_to_19_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_to_19_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_19_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:6527:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6527:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:6528:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:6528:116: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:6529:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:6532:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:6532:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6532:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:6532:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    {
            	    otherlv_20=(Token)match(input,116,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_20, grammarAccess.getObservableSemanticsAccess().getNamedKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:6536:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    // InternalKim.g:6537:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:6537:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    // InternalKim.g:6538:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    {
            	    // InternalKim.g:6538:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    int alt152=2;
            	    int LA152_0 = input.LA(1);

            	    if ( (LA152_0==RULE_LOWERCASE_ID) ) {
            	        alt152=1;
            	    }
            	    else if ( (LA152_0==RULE_STRING) ) {
            	        alt152=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 152, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt152) {
            	        case 1 :
            	            // InternalKim.g:6539:12: lv_name_21_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_1, grammarAccess.getObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_5_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6554:12: lv_name_21_2= RULE_STRING
            	            {
            	            lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_2, grammarAccess.getObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_3_5_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop153;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObservableSemantics"


    // $ANTLR start "entryRuleValueOperator"
    // InternalKim.g:6591:1: entryRuleValueOperator returns [EObject current=null] : iv_ruleValueOperator= ruleValueOperator EOF ;
    public final EObject entryRuleValueOperator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueOperator = null;


        try {
            // InternalKim.g:6591:54: (iv_ruleValueOperator= ruleValueOperator EOF )
            // InternalKim.g:6592:2: iv_ruleValueOperator= ruleValueOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueOperator=ruleValueOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueOperator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueOperator"


    // $ANTLR start "ruleValueOperator"
    // InternalKim.g:6598:1: ruleValueOperator returns [EObject current=null] : ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) | ( (lv_averaged_10_0= 'averaged' ) ) | ( (lv_summed_11_0= 'summed' ) ) ) ;
    public final EObject ruleValueOperator() throws RecognitionException {
        EObject current = null;

        Token lv_downTo_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_total_9_0=null;
        Token lv_averaged_10_0=null;
        Token lv_summed_11_0=null;
        AntlrDatatypeRuleToken lv_modifier_0_0 = null;

        EObject lv_comparisonValue_3_0 = null;

        EObject lv_comparisonQuantity_4_0 = null;

        EObject lv_comparisonConcept_5_0 = null;

        EObject lv_comparisonObservable_7_0 = null;



        	enterRule();

        try {
            // InternalKim.g:6604:2: ( ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) | ( (lv_averaged_10_0= 'averaged' ) ) | ( (lv_summed_11_0= 'summed' ) ) ) )
            // InternalKim.g:6605:2: ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) | ( (lv_averaged_10_0= 'averaged' ) ) | ( (lv_summed_11_0= 'summed' ) ) )
            {
            // InternalKim.g:6605:2: ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) | ( (lv_averaged_10_0= 'averaged' ) ) | ( (lv_summed_11_0= 'summed' ) ) )
            int alt156=4;
            switch ( input.LA(1) ) {
            case 55:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 117:
                {
                alt156=1;
                }
                break;
            case 118:
                {
                alt156=2;
                }
                break;
            case 119:
                {
                alt156=3;
                }
                break;
            case 120:
                {
                alt156=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;
            }

            switch (alt156) {
                case 1 :
                    // InternalKim.g:6606:3: ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) )
                    {
                    // InternalKim.g:6606:3: ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) )
                    // InternalKim.g:6607:4: ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) )
                    {
                    // InternalKim.g:6607:4: ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) )
                    int alt154=2;
                    int LA154_0 = input.LA(1);

                    if ( (LA154_0==55||(LA154_0>=76 && LA154_0<=88)) ) {
                        alt154=1;
                    }
                    else if ( (LA154_0==117) ) {
                        alt154=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 154, 0, input);

                        throw nvae;
                    }
                    switch (alt154) {
                        case 1 :
                            // InternalKim.g:6608:5: ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) )
                            {
                            // InternalKim.g:6608:5: ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) )
                            // InternalKim.g:6609:6: (lv_modifier_0_0= ruleVALUE_OPERATOR )
                            {
                            // InternalKim.g:6609:6: (lv_modifier_0_0= ruleVALUE_OPERATOR )
                            // InternalKim.g:6610:7: lv_modifier_0_0= ruleVALUE_OPERATOR
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getModifierVALUE_OPERATORParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_8);
                            lv_modifier_0_0=ruleVALUE_OPERATOR();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"modifier",
                              								lv_modifier_0_0,
                              								"org.integratedmodelling.kim.Kim.VALUE_OPERATOR");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:6628:5: ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' )
                            {
                            // InternalKim.g:6628:5: ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' )
                            // InternalKim.g:6629:6: ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to'
                            {
                            // InternalKim.g:6629:6: ( (lv_downTo_1_0= 'down' ) )
                            // InternalKim.g:6630:7: (lv_downTo_1_0= 'down' )
                            {
                            // InternalKim.g:6630:7: (lv_downTo_1_0= 'down' )
                            // InternalKim.g:6631:8: lv_downTo_1_0= 'down'
                            {
                            lv_downTo_1_0=(Token)match(input,117,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_downTo_1_0, grammarAccess.getValueOperatorAccess().getDownToDownKeyword_0_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getValueOperatorRule());
                              								}
                              								setWithLastConsumed(current, "downTo", lv_downTo_1_0, "down");
                              							
                            }

                            }


                            }

                            otherlv_2=(Token)match(input,36,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getValueOperatorAccess().getToKeyword_0_0_1_1());
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:6649:4: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) )
                    int alt155=4;
                    alt155 = dfa155.predict(input);
                    switch (alt155) {
                        case 1 :
                            // InternalKim.g:6650:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
                            {
                            // InternalKim.g:6650:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
                            // InternalKim.g:6651:6: (lv_comparisonValue_3_0= ruleNumber )
                            {
                            // InternalKim.g:6651:6: (lv_comparisonValue_3_0= ruleNumber )
                            // InternalKim.g:6652:7: lv_comparisonValue_3_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonValueNumberParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonValue_3_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"comparisonValue",
                              								lv_comparisonValue_3_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:6670:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
                            {
                            // InternalKim.g:6670:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
                            // InternalKim.g:6671:6: (lv_comparisonQuantity_4_0= ruleQuantity )
                            {
                            // InternalKim.g:6671:6: (lv_comparisonQuantity_4_0= ruleQuantity )
                            // InternalKim.g:6672:7: lv_comparisonQuantity_4_0= ruleQuantity
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonQuantityQuantityParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonQuantity_4_0=ruleQuantity();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"comparisonQuantity",
                              								lv_comparisonQuantity_4_0,
                              								"org.integratedmodelling.kim.Kim.Quantity");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:6690:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
                            {
                            // InternalKim.g:6690:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
                            // InternalKim.g:6691:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:6691:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
                            // InternalKim.g:6692:7: lv_comparisonConcept_5_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonConcept_5_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"comparisonConcept",
                              								lv_comparisonConcept_5_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:6710:5: (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' )
                            {
                            // InternalKim.g:6710:5: (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' )
                            // InternalKim.g:6711:6: otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')'
                            {
                            otherlv_6=(Token)match(input,38,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getValueOperatorAccess().getLeftParenthesisKeyword_0_1_3_0());
                              					
                            }
                            // InternalKim.g:6715:6: ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) )
                            // InternalKim.g:6716:7: (lv_comparisonObservable_7_0= ruleObservableSemantics )
                            {
                            // InternalKim.g:6716:7: (lv_comparisonObservable_7_0= ruleObservableSemantics )
                            // InternalKim.g:6717:8: lv_comparisonObservable_7_0= ruleObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonObservableObservableSemanticsParserRuleCall_0_1_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_91);
                            lv_comparisonObservable_7_0=ruleObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              								}
                              								set(
                              									current,
                              									"comparisonObservable",
                              									lv_comparisonObservable_7_0,
                              									"org.integratedmodelling.kim.Kim.ObservableSemantics");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getValueOperatorAccess().getRightParenthesisKeyword_0_1_3_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:6742:3: ( (lv_total_9_0= 'total' ) )
                    {
                    // InternalKim.g:6742:3: ( (lv_total_9_0= 'total' ) )
                    // InternalKim.g:6743:4: (lv_total_9_0= 'total' )
                    {
                    // InternalKim.g:6743:4: (lv_total_9_0= 'total' )
                    // InternalKim.g:6744:5: lv_total_9_0= 'total'
                    {
                    lv_total_9_0=(Token)match(input,118,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_total_9_0, grammarAccess.getValueOperatorAccess().getTotalTotalKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueOperatorRule());
                      					}
                      					setWithLastConsumed(current, "total", lv_total_9_0, "total");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:6757:3: ( (lv_averaged_10_0= 'averaged' ) )
                    {
                    // InternalKim.g:6757:3: ( (lv_averaged_10_0= 'averaged' ) )
                    // InternalKim.g:6758:4: (lv_averaged_10_0= 'averaged' )
                    {
                    // InternalKim.g:6758:4: (lv_averaged_10_0= 'averaged' )
                    // InternalKim.g:6759:5: lv_averaged_10_0= 'averaged'
                    {
                    lv_averaged_10_0=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_averaged_10_0, grammarAccess.getValueOperatorAccess().getAveragedAveragedKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueOperatorRule());
                      					}
                      					setWithLastConsumed(current, "averaged", lv_averaged_10_0, "averaged");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:6772:3: ( (lv_summed_11_0= 'summed' ) )
                    {
                    // InternalKim.g:6772:3: ( (lv_summed_11_0= 'summed' ) )
                    // InternalKim.g:6773:4: (lv_summed_11_0= 'summed' )
                    {
                    // InternalKim.g:6773:4: (lv_summed_11_0= 'summed' )
                    // InternalKim.g:6774:5: lv_summed_11_0= 'summed'
                    {
                    lv_summed_11_0=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_summed_11_0, grammarAccess.getValueOperatorAccess().getSummedSummedKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueOperatorRule());
                      					}
                      					setWithLastConsumed(current, "summed", lv_summed_11_0, "summed");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueOperator"


    // $ANTLR start "entryRuleAnnotatedObservableSemantics"
    // InternalKim.g:6790:1: entryRuleAnnotatedObservableSemantics returns [EObject current=null] : iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF ;
    public final EObject entryRuleAnnotatedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4()
        	);

        try {
            // InternalKim.g:6794:2: (iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF )
            // InternalKim.g:6795:2: iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedObservableSemantics=ruleAnnotatedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedObservableSemantics"


    // $ANTLR start "ruleAnnotatedObservableSemantics"
    // InternalKim.g:6804:1: ruleAnnotatedObservableSemantics returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleAnnotatedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_generic_3_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token lv_optional_16_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_name_22_1=null;
        Token lv_name_22_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_value_1_0 = null;

        EObject lv_declaration_4_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_8_0 = null;

        EObject lv_unit_10_0 = null;

        EObject lv_currency_11_0 = null;

        EObject lv_unit_13_0 = null;

        EObject lv_valueOperators_14_0 = null;

        EObject lv_valueOperators_15_0 = null;

        EObject lv_from_18_0 = null;

        EObject lv_to_20_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4()
        	);

        try {
            // InternalKim.g:6813:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:6814:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:6814:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:6815:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:6815:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop157:
            do {
                int alt157=2;
                int LA157_0 = input.LA(1);

                if ( (LA157_0==RULE_ANNOTATION_ID) ) {
                    alt157=1;
                }


                switch (alt157) {
            	case 1 :
            	    // InternalKim.g:6816:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:6816:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:6817:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_8);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop157;
                }
            } while (true);

            // InternalKim.g:6834:3: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )?
            int alt158=2;
            alt158 = dfa158.predict(input);
            switch (alt158) {
                case 1 :
                    // InternalKim.g:6835:4: ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as'
                    {
                    // InternalKim.g:6835:4: ( (lv_value_1_0= ruleValue ) )
                    // InternalKim.g:6836:5: (lv_value_1_0= ruleValue )
                    {
                    // InternalKim.g:6836:5: (lv_value_1_0= ruleValue )
                    // InternalKim.g:6837:6: lv_value_1_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueValueParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_1_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_1_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,25,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAnnotatedObservableSemanticsAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6859:3: ( (lv_generic_3_0= 'any' ) )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==112) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalKim.g:6860:4: (lv_generic_3_0= 'any' )
                    {
                    // InternalKim.g:6860:4: (lv_generic_3_0= 'any' )
                    // InternalKim.g:6861:5: lv_generic_3_0= 'any'
                    {
                    lv_generic_3_0=(Token)match(input,112,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_3_0, grammarAccess.getAnnotatedObservableSemanticsAccess().getGenericAnyKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:6873:3: ( (lv_declaration_4_0= ruleConceptDeclaration ) )
            // InternalKim.g:6874:4: (lv_declaration_4_0= ruleConceptDeclaration )
            {
            // InternalKim.g:6874:4: (lv_declaration_4_0= ruleConceptDeclaration )
            // InternalKim.g:6875:5: lv_declaration_4_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_94);
            lv_declaration_4_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_4_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:6892:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:6893:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:6893:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:6894:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());
            // InternalKim.g:6897:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:6898:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:6898:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop165:
            do {
                int alt165=7;
                alt165 = dfa165.predict(input);
                switch (alt165) {
            	case 1 :
            	    // InternalKim.g:6899:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6899:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:6900:5: {...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalKim.g:6900:125: ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:6901:6: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0);
            	    // InternalKim.g:6904:9: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:6904:10: {...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6904:19: (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
            	    // InternalKim.g:6904:20: otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) )
            	    {
            	    otherlv_6=(Token)match(input,35,FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingKeyword_4_0_0());
            	      								
            	    }
            	    otherlv_7=(Token)match(input,36,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getAnnotatedObservableSemanticsAccess().getToKeyword_4_0_1());
            	      								
            	    }
            	    // InternalKim.g:6912:9: ( (lv_accordingTo_8_0= rulePropertyId ) )
            	    // InternalKim.g:6913:10: (lv_accordingTo_8_0= rulePropertyId )
            	    {
            	    // InternalKim.g:6913:10: (lv_accordingTo_8_0= rulePropertyId )
            	    // InternalKim.g:6914:11: lv_accordingTo_8_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_4_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_accordingTo_8_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_8_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6937:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6937:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:6938:5: {...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalKim.g:6938:125: ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:6939:6: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1);
            	    // InternalKim.g:6942:9: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:6942:10: {...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6942:19: ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
            	    int alt161=2;
            	    int LA161_0 = input.LA(1);

            	    if ( (LA161_0==48) ) {
            	        alt161=1;
            	    }
            	    else if ( (LA161_0==113) ) {
            	        alt161=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 161, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt161) {
            	        case 1 :
            	            // InternalKim.g:6942:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:6942:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:6943:10: otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
            	            {
            	            otherlv_9=(Token)match(input,48,FOLLOW_95); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_9, grammarAccess.getAnnotatedObservableSemanticsAccess().getInKeyword_4_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:6947:10: ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
            	            int alt160=2;
            	            int LA160_0 = input.LA(1);

            	            if ( (LA160_0==EOF||(LA160_0>=RULE_LOWERCASE_ID && LA160_0<=RULE_STRING)||(LA160_0>=RULE_CAMELCASE_ID && LA160_0<=RULE_INT)||LA160_0==RULE_BACKCASE_ID||LA160_0==20||LA160_0==27||(LA160_0>=30 && LA160_0<=33)||LA160_0==35||(LA160_0>=37 && LA160_0<=38)||LA160_0==40||LA160_0==42||LA160_0==48||(LA160_0>=54 && LA160_0<=56)||(LA160_0>=62 && LA160_0<=67)||(LA160_0>=76 && LA160_0<=88)||LA160_0==107||(LA160_0>=113 && LA160_0<=120)||(LA160_0>=251 && LA160_0<=252)||LA160_0==259) ) {
            	                alt160=1;
            	            }
            	            else if ( (LA160_0==RULE_UPPERCASE_ID) ) {
            	                int LA160_2 = input.LA(2);

            	                if ( (LA160_2==250) ) {
            	                    alt160=2;
            	                }
            	                else if ( (LA160_2==EOF||LA160_2==RULE_STRING||LA160_2==RULE_INT||LA160_2==20||LA160_2==27||(LA160_2>=30 && LA160_2<=33)||LA160_2==35||LA160_2==37||LA160_2==40||LA160_2==42||LA160_2==48||(LA160_2>=54 && LA160_2<=56)||(LA160_2>=62 && LA160_2<=67)||(LA160_2>=76 && LA160_2<=88)||LA160_2==107||(LA160_2>=113 && LA160_2<=120)||(LA160_2>=251 && LA160_2<=252)||LA160_2==259) ) {
            	                    alt160=1;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 160, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 160, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt160) {
            	                case 1 :
            	                    // InternalKim.g:6948:11: ( (lv_unit_10_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:6948:11: ( (lv_unit_10_0= ruleUnit ) )
            	                    // InternalKim.g:6949:12: (lv_unit_10_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:6949:12: (lv_unit_10_0= ruleUnit )
            	                    // InternalKim.g:6950:13: lv_unit_10_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_94);
            	                    lv_unit_10_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:6968:11: ( (lv_currency_11_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:6968:11: ( (lv_currency_11_0= ruleCurrency ) )
            	                    // InternalKim.g:6969:12: (lv_currency_11_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:6969:12: (lv_currency_11_0= ruleCurrency )
            	                    // InternalKim.g:6970:13: lv_currency_11_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_4_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_94);
            	                    lv_currency_11_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_11_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6990:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:6990:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
            	            // InternalKim.g:6991:10: otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) )
            	            {
            	            otherlv_12=(Token)match(input,113,FOLLOW_95); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_12, grammarAccess.getAnnotatedObservableSemanticsAccess().getPerKeyword_4_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:6995:10: ( (lv_unit_13_0= ruleUnit ) )
            	            // InternalKim.g:6996:11: (lv_unit_13_0= ruleUnit )
            	            {
            	            // InternalKim.g:6996:11: (lv_unit_13_0= ruleUnit )
            	            // InternalKim.g:6997:12: lv_unit_13_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_94);
            	            lv_unit_13_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_13_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:7021:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:7021:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:7022:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalKim.g:7022:125: ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:7023:6: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2);
            	    // InternalKim.g:7026:9: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:7026:10: {...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7026:19: ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
            	    // InternalKim.g:7026:20: ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:7026:20: ( (lv_valueOperators_14_0= ruleValueOperator ) )
            	    // InternalKim.g:7027:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:7027:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    // InternalKim.g:7028:11: lv_valueOperators_14_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_valueOperators_14_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_14_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:7045:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*
            	    loop162:
            	    do {
            	        int alt162=2;
            	        alt162 = dfa162.predict(input);
            	        switch (alt162) {
            	    	case 1 :
            	    	    // InternalKim.g:7046:10: (lv_valueOperators_15_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:7046:10: (lv_valueOperators_15_0= ruleValueOperator )
            	    	    // InternalKim.g:7047:11: lv_valueOperators_15_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_94);
            	    	    lv_valueOperators_15_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_15_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop162;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:7070:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:7070:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
            	    // InternalKim.g:7071:5: {...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalKim.g:7071:125: ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
            	    // InternalKim.g:7072:6: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3);
            	    // InternalKim.g:7075:9: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
            	    // InternalKim.g:7075:10: {...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7075:19: ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
            	    int alt163=2;
            	    int LA163_0 = input.LA(1);

            	    if ( (LA163_0==114) ) {
            	        alt163=1;
            	    }
            	    else if ( (LA163_0==115) ) {
            	        alt163=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 163, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt163) {
            	        case 1 :
            	            // InternalKim.g:7075:20: ( (lv_optional_16_0= 'optional' ) )
            	            {
            	            // InternalKim.g:7075:20: ( (lv_optional_16_0= 'optional' ) )
            	            // InternalKim.g:7076:10: (lv_optional_16_0= 'optional' )
            	            {
            	            // InternalKim.g:7076:10: (lv_optional_16_0= 'optional' )
            	            // InternalKim.g:7077:11: lv_optional_16_0= 'optional'
            	            {
            	            lv_optional_16_0=(Token)match(input,114,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_16_0, grammarAccess.getAnnotatedObservableSemanticsAccess().getOptionalOptionalKeyword_4_3_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7090:9: otherlv_17= 'required'
            	            {
            	            otherlv_17=(Token)match(input,115,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_17, grammarAccess.getAnnotatedObservableSemanticsAccess().getRequiredKeyword_4_3_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:7100:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7100:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:7101:5: {...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4)");
            	    }
            	    // InternalKim.g:7101:125: ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:7102:6: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4);
            	    // InternalKim.g:7105:9: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
            	    // InternalKim.g:7105:10: {...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7105:19: ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
            	    // InternalKim.g:7105:20: ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:7105:20: ( (lv_from_18_0= ruleNumber ) )
            	    // InternalKim.g:7106:10: (lv_from_18_0= ruleNumber )
            	    {
            	    // InternalKim.g:7106:10: (lv_from_18_0= ruleNumber )
            	    // InternalKim.g:7107:11: lv_from_18_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getFromNumberParserRuleCall_4_4_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_from_18_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_18_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_19=(Token)match(input,36,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getAnnotatedObservableSemanticsAccess().getToKeyword_4_4_1());
            	      								
            	    }
            	    // InternalKim.g:7128:9: ( (lv_to_20_0= ruleNumber ) )
            	    // InternalKim.g:7129:10: (lv_to_20_0= ruleNumber )
            	    {
            	    // InternalKim.g:7129:10: (lv_to_20_0= ruleNumber )
            	    // InternalKim.g:7130:11: lv_to_20_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getToNumberParserRuleCall_4_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_to_20_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_20_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:7153:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7153:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:7154:5: {...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5)");
            	    }
            	    // InternalKim.g:7154:125: ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:7155:6: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5);
            	    // InternalKim.g:7158:9: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:7158:10: {...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7158:19: (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:7158:20: otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
            	    {
            	    otherlv_21=(Token)match(input,116,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getAnnotatedObservableSemanticsAccess().getNamedKeyword_4_5_0());
            	      								
            	    }
            	    // InternalKim.g:7162:9: ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
            	    // InternalKim.g:7163:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:7163:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
            	    // InternalKim.g:7164:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
            	    {
            	    // InternalKim.g:7164:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
            	    int alt164=2;
            	    int LA164_0 = input.LA(1);

            	    if ( (LA164_0==RULE_LOWERCASE_ID) ) {
            	        alt164=1;
            	    }
            	    else if ( (LA164_0==RULE_STRING) ) {
            	        alt164=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 164, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt164) {
            	        case 1 :
            	            // InternalKim.g:7165:12: lv_name_22_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_22_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_22_1, grammarAccess.getAnnotatedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_4_5_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_22_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7180:12: lv_name_22_2= RULE_STRING
            	            {
            	            lv_name_22_2=(Token)match(input,RULE_STRING,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_22_2, grammarAccess.getAnnotatedObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_4_5_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_22_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop165;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedObservableSemantics"


    // $ANTLR start "entryRuleDependency"
    // InternalKim.g:7217:1: entryRuleDependency returns [EObject current=null] : iv_ruleDependency= ruleDependency EOF ;
    public final EObject entryRuleDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependency = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()
        	);

        try {
            // InternalKim.g:7221:2: (iv_ruleDependency= ruleDependency EOF )
            // InternalKim.g:7222:2: iv_ruleDependency= ruleDependency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependency=ruleDependency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalKim.g:7231:1: ruleDependency returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) ) ;
    public final EObject ruleDependency() throws RecognitionException {
        EObject current = null;

        Token lv_modelReference_1_1=null;
        Token lv_modelReference_1_4=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_optional_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_name_12_1=null;
        Token lv_name_12_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_3 = null;

        EObject lv_observable_2_0 = null;

        EObject lv_alternativeObservables_5_0 = null;

        EObject lv_alternativeObservables_7_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()
        	);

        try {
            // InternalKim.g:7240:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            // InternalKim.g:7241:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) )
            {
            // InternalKim.g:7241:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) )
            // InternalKim.g:7242:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )
            {
            // InternalKim.g:7242:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop166:
            do {
                int alt166=2;
                int LA166_0 = input.LA(1);

                if ( (LA166_0==RULE_ANNOTATION_ID) ) {
                    alt166=1;
                }


                switch (alt166) {
            	case 1 :
            	    // InternalKim.g:7243:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:7243:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:7244:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDependencyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDependencyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop166;
                }
            } while (true);

            // InternalKim.g:7261:3: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )
            int alt173=2;
            alt173 = dfa173.predict(input);
            switch (alt173) {
                case 1 :
                    // InternalKim.g:7262:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
                    {
                    // InternalKim.g:7262:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
                    int alt168=2;
                    alt168 = dfa168.predict(input);
                    switch (alt168) {
                        case 1 :
                            // InternalKim.g:7263:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                            {
                            // InternalKim.g:7263:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                            // InternalKim.g:7264:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                            {
                            // InternalKim.g:7264:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                            // InternalKim.g:7265:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                            {
                            // InternalKim.g:7265:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                            int alt167=4;
                            alt167 = dfa167.predict(input);
                            switch (alt167) {
                                case 1 :
                                    // InternalKim.g:7266:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
                                    {
                                    lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_modelReference_1_1, grammarAccess.getDependencyAccess().getModelReferenceLOWERCASE_IDTerminalRuleCall_1_0_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDependencyRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7281:8: lv_modelReference_1_2= rulePathName
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_1_0_0_0_1());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_modelReference_1_2=rulePathName();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDependencyRule());
                                      								}
                                      								set(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_2,
                                      									"org.integratedmodelling.kim.Kim.PathName");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:7297:8: lv_modelReference_1_3= ruleUrnId
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferenceUrnIdParserRuleCall_1_0_0_0_2());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_modelReference_1_3=ruleUrnId();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDependencyRule());
                                      								}
                                      								set(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_3,
                                      									"org.integratedmodelling.kim.Kim.UrnId");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }
                                    break;
                                case 4 :
                                    // InternalKim.g:7313:8: lv_modelReference_1_4= RULE_STRING
                                    {
                                    lv_modelReference_1_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_modelReference_1_4, grammarAccess.getDependencyAccess().getModelReferenceSTRINGTerminalRuleCall_1_0_0_0_3());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDependencyRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_4,
                                      									"org.eclipse.xtext.common.Terminals.STRING");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:7331:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                            {
                            // InternalKim.g:7331:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                            // InternalKim.g:7332:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                            {
                            // InternalKim.g:7332:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                            // InternalKim.g:7333:7: lv_observable_2_0= ruleDependencyObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDependencyAccess().getObservableDependencyObservableSemanticsParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_observable_2_0=ruleDependencyObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDependencyRule());
                              							}
                              							set(
                              								current,
                              								"observable",
                              								lv_observable_2_0,
                              								"org.integratedmodelling.kim.Kim.DependencyObservableSemantics");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:7352:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) )
                    {
                    // InternalKim.g:7352:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) )
                    // InternalKim.g:7353:5: ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) )
                    {
                    // InternalKim.g:7353:5: ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) )
                    // InternalKim.g:7354:6: ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?)
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());
                    // InternalKim.g:7357:6: ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?)
                    // InternalKim.g:7358:7: ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?
                    {
                    // InternalKim.g:7358:7: ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+
                    int cnt172=0;
                    loop172:
                    do {
                        int alt172=3;
                        int LA172_0 = input.LA(1);

                        if ( LA172_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
                            alt172=1;
                        }
                        else if ( LA172_0 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
                            alt172=2;
                        }


                        switch (alt172) {
                    	case 1 :
                    	    // InternalKim.g:7359:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
                    	    {
                    	    // InternalKim.g:7359:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
                    	    // InternalKim.g:7360:6: {...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0)");
                    	    }
                    	    // InternalKim.g:7360:110: ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
                    	    // InternalKim.g:7361:7: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0);
                    	    // InternalKim.g:7364:10: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
                    	    // InternalKim.g:7364:11: {...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "true");
                    	    }
                    	    // InternalKim.g:7364:20: (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
                    	    // InternalKim.g:7364:21: otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
                    	    {
                    	    otherlv_4=(Token)match(input,38,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_4, grammarAccess.getDependencyAccess().getLeftParenthesisKeyword_1_1_0_0());
                    	      									
                    	    }
                    	    // InternalKim.g:7368:10: ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    // InternalKim.g:7369:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
                    	    {
                    	    // InternalKim.g:7369:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
                    	    // InternalKim.g:7370:12: lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_28);
                    	    lv_alternativeObservables_5_0=ruleAlternativeDependencyObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	      												}
                    	      												add(
                    	      													current,
                    	      													"alternativeObservables",
                    	      													lv_alternativeObservables_5_0,
                    	      													"org.integratedmodelling.kim.Kim.AlternativeDependencyObservableSemantics");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }

                    	    // InternalKim.g:7387:10: (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )*
                    	    loop169:
                    	    do {
                    	        int alt169=2;
                    	        int LA169_0 = input.LA(1);

                    	        if ( (LA169_0==27) ) {
                    	            alt169=1;
                    	        }


                    	        switch (alt169) {
                    	    	case 1 :
                    	    	    // InternalKim.g:7388:11: otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    	    {
                    	    	    otherlv_6=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      											newLeafNode(otherlv_6, grammarAccess.getDependencyAccess().getCommaKeyword_1_1_0_2_0());
                    	    	      										
                    	    	    }
                    	    	    // InternalKim.g:7392:11: ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    	    // InternalKim.g:7393:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
                    	    	    {
                    	    	    // InternalKim.g:7393:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
                    	    	    // InternalKim.g:7394:13: lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {

                    	    	      													newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_2_1_0());
                    	    	      												
                    	    	    }
                    	    	    pushFollow(FOLLOW_28);
                    	    	    lv_alternativeObservables_7_0=ruleAlternativeDependencyObservableSemantics();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      													if (current==null) {
                    	    	      														current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	    	      													}
                    	    	      													add(
                    	    	      														current,
                    	    	      														"alternativeObservables",
                    	    	      														lv_alternativeObservables_7_0,
                    	    	      														"org.integratedmodelling.kim.Kim.AlternativeDependencyObservableSemantics");
                    	    	      													afterParserOrEnumRuleCall();
                    	    	      												
                    	    	    }

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop169;
                    	        }
                    	    } while (true);

                    	    otherlv_8=(Token)match(input,41,FOLLOW_96); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_8, grammarAccess.getDependencyAccess().getRightParenthesisKeyword_1_1_0_3());
                    	      									
                    	    }
                    	    // InternalKim.g:7416:10: ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
                    	    int alt170=3;
                    	    int LA170_0 = input.LA(1);

                    	    if ( (LA170_0==114) ) {
                    	        alt170=1;
                    	    }
                    	    else if ( (LA170_0==115) ) {
                    	        alt170=2;
                    	    }
                    	    switch (alt170) {
                    	        case 1 :
                    	            // InternalKim.g:7417:11: ( (lv_optional_9_0= 'optional' ) )
                    	            {
                    	            // InternalKim.g:7417:11: ( (lv_optional_9_0= 'optional' ) )
                    	            // InternalKim.g:7418:12: (lv_optional_9_0= 'optional' )
                    	            {
                    	            // InternalKim.g:7418:12: (lv_optional_9_0= 'optional' )
                    	            // InternalKim.g:7419:13: lv_optional_9_0= 'optional'
                    	            {
                    	            lv_optional_9_0=(Token)match(input,114,FOLLOW_97); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_optional_9_0, grammarAccess.getDependencyAccess().getOptionalOptionalKeyword_1_1_0_4_0_0());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(current, "optional", true, "optional");
                    	              												
                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:7432:11: otherlv_10= 'required'
                    	            {
                    	            otherlv_10=(Token)match(input,115,FOLLOW_97); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              											newLeafNode(otherlv_10, grammarAccess.getDependencyAccess().getRequiredKeyword_1_1_0_4_1());
                    	              										
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:7443:5: ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7443:5: ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) )
                    	    // InternalKim.g:7444:6: {...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1)");
                    	    }
                    	    // InternalKim.g:7444:110: ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) )
                    	    // InternalKim.g:7445:7: ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1);
                    	    // InternalKim.g:7448:10: ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) )
                    	    // InternalKim.g:7448:11: {...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "true");
                    	    }
                    	    // InternalKim.g:7448:20: (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) )
                    	    // InternalKim.g:7448:21: otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) )
                    	    {
                    	    otherlv_11=(Token)match(input,116,FOLLOW_44); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_11, grammarAccess.getDependencyAccess().getNamedKeyword_1_1_1_0());
                    	      									
                    	    }
                    	    // InternalKim.g:7452:10: ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) )
                    	    // InternalKim.g:7453:11: ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) )
                    	    {
                    	    // InternalKim.g:7453:11: ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) )
                    	    // InternalKim.g:7454:12: (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING )
                    	    {
                    	    // InternalKim.g:7454:12: (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING )
                    	    int alt171=2;
                    	    int LA171_0 = input.LA(1);

                    	    if ( (LA171_0==RULE_LOWERCASE_ID) ) {
                    	        alt171=1;
                    	    }
                    	    else if ( (LA171_0==RULE_STRING) ) {
                    	        alt171=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 171, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt171) {
                    	        case 1 :
                    	            // InternalKim.g:7455:13: lv_name_12_1= RULE_LOWERCASE_ID
                    	            {
                    	            lv_name_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_97); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_name_12_1, grammarAccess.getDependencyAccess().getNameLOWERCASE_IDTerminalRuleCall_1_1_1_1_0_0());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(
                    	              														current,
                    	              														"name",
                    	              														lv_name_12_1,
                    	              														"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                    	              												
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:7470:13: lv_name_12_2= RULE_STRING
                    	            {
                    	            lv_name_12_2=(Token)match(input,RULE_STRING,FOLLOW_97); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_name_12_2, grammarAccess.getDependencyAccess().getNameSTRINGTerminalRuleCall_1_1_1_1_0_1());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(
                    	              														current,
                    	              														"name",
                    	              														lv_name_12_2,
                    	              														"org.eclipse.xtext.common.Terminals.STRING");
                    	              												
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt172 >= 1 ) break loop172;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(172, input);
                                throw eee;
                        }
                        cnt172++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()) ) {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canLeave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1())");
                    }

                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleConceptDeclaration"
    // InternalKim.g:7509:1: entryRuleConceptDeclaration returns [EObject current=null] : iv_ruleConceptDeclaration= ruleConceptDeclaration EOF ;
    public final EObject entryRuleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptDeclaration = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:7513:2: (iv_ruleConceptDeclaration= ruleConceptDeclaration EOF )
            // InternalKim.g:7514:2: iv_ruleConceptDeclaration= ruleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptDeclaration=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptDeclaration"


    // $ANTLR start "ruleConceptDeclaration"
    // InternalKim.g:7523:1: ruleConceptDeclaration returns [EObject current=null] : ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? ) ;
    public final EObject ruleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token lv_distributedWithinInherency_26_0=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        EObject lv_main_0_0 = null;

        EObject lv_inherency_4_0 = null;

        EObject lv_motivation_7_0 = null;

        EObject lv_compresent_9_0 = null;

        EObject lv_causant_12_0 = null;

        EObject lv_adjacent_15_0 = null;

        EObject lv_container_18_0 = null;

        EObject lv_contained_20_0 = null;

        EObject lv_caused_22_0 = null;

        EObject lv_during_24_0 = null;

        EObject lv_context_27_0 = null;

        EObject lv_relationshipSource_29_0 = null;

        EObject lv_relationshipTarget_31_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:7532:2: ( ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? ) )
            // InternalKim.g:7533:2: ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? )
            {
            // InternalKim.g:7533:2: ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? )
            // InternalKim.g:7534:3: ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?
            {
            // InternalKim.g:7534:3: ( (lv_main_0_0= ruleConcept ) )+
            int cnt174=0;
            loop174:
            do {
                int alt174=2;
                alt174 = dfa174.predict(input);
                switch (alt174) {
            	case 1 :
            	    // InternalKim.g:7535:4: (lv_main_0_0= ruleConcept )
            	    {
            	    // InternalKim.g:7535:4: (lv_main_0_0= ruleConcept )
            	    // InternalKim.g:7536:5: lv_main_0_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_main_0_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_0_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt174 >= 1 ) break loop174;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(174, input);
                        throw eee;
                }
                cnt174++;
            } while (true);

            // InternalKim.g:7553:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?
            int alt179=2;
            alt179 = dfa179.predict(input);
            switch (alt179) {
                case 1 :
                    // InternalKim.g:7554:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
                    {
                    // InternalKim.g:7554:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
                    // InternalKim.g:7555:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
                    // InternalKim.g:7558:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
                    // InternalKim.g:7559:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
                    {
                    // InternalKim.g:7559:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
                    loop178:
                    do {
                        int alt178=12;
                        alt178 = dfa178.predict(input);
                        switch (alt178) {
                    	case 1 :
                    	    // InternalKim.g:7560:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7560:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:7561:5: {...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalKim.g:7561:115: ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7562:6: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
                    	    // InternalKim.g:7565:9: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7565:10: {...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7565:19: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7565:20: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_2=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_2, grammarAccess.getConceptDeclarationAccess().getOfKeyword_1_0_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7569:9: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7570:10: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:7570:10: ( (lv_distributedOfInherency_3_0= 'each' ) )?
                    	    int alt175=2;
                    	    int LA175_0 = input.LA(1);

                    	    if ( (LA175_0==26) ) {
                    	        alt175=1;
                    	    }
                    	    switch (alt175) {
                    	        case 1 :
                    	            // InternalKim.g:7571:11: (lv_distributedOfInherency_3_0= 'each' )
                    	            {
                    	            // InternalKim.g:7571:11: (lv_distributedOfInherency_3_0= 'each' )
                    	            // InternalKim.g:7572:12: lv_distributedOfInherency_3_0= 'each'
                    	            {
                    	            lv_distributedOfInherency_3_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedOfInherency_3_0, grammarAccess.getConceptDeclarationAccess().getDistributedOfInherencyEachKeyword_1_0_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedOfInherency", true, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:7584:10: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7585:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7585:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7586:12: lv_inherency_4_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    lv_inherency_4_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"inherency",
                    	      													lv_inherency_4_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:7610:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7610:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:7611:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalKim.g:7611:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7612:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
                    	    // InternalKim.g:7615:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7615:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7615:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7615:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_5=(Token)match(input,69,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_5, grammarAccess.getConceptDeclarationAccess().getForKeyword_1_1_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7619:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7620:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:7620:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
                    	    int alt176=2;
                    	    int LA176_0 = input.LA(1);

                    	    if ( (LA176_0==26) ) {
                    	        alt176=1;
                    	    }
                    	    switch (alt176) {
                    	        case 1 :
                    	            // InternalKim.g:7621:11: (lv_distributedForInherency_6_0= 'each' )
                    	            {
                    	            // InternalKim.g:7621:11: (lv_distributedForInherency_6_0= 'each' )
                    	            // InternalKim.g:7622:12: lv_distributedForInherency_6_0= 'each'
                    	            {
                    	            lv_distributedForInherency_6_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedForInherency_6_0, grammarAccess.getConceptDeclarationAccess().getDistributedForInherencyEachKeyword_1_1_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedForInherency", true, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:7634:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7635:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7635:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7636:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    lv_motivation_7_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"motivation",
                    	      													lv_motivation_7_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKim.g:7660:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7660:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7661:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalKim.g:7661:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7662:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
                    	    // InternalKim.g:7665:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7665:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7665:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7665:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_8=(Token)match(input,98,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_8, grammarAccess.getConceptDeclarationAccess().getWithKeyword_1_2_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7669:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7670:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7670:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7671:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    lv_compresent_9_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"compresent",
                    	      												lv_compresent_9_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKim.g:7694:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7694:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7695:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalKim.g:7695:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7696:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
                    	    // InternalKim.g:7699:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7699:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7699:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7699:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_10=(Token)match(input,122,FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_10, grammarAccess.getConceptDeclarationAccess().getCausedKeyword_1_3_0());
                    	      								
                    	    }
                    	    otherlv_11=(Token)match(input,88,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_11, grammarAccess.getConceptDeclarationAccess().getByKeyword_1_3_1());
                    	      								
                    	    }
                    	    // InternalKim.g:7707:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7708:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7708:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7709:11: lv_causant_12_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    lv_causant_12_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"causant",
                    	      												lv_causant_12_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalKim.g:7732:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7732:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7733:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalKim.g:7733:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7734:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
                    	    // InternalKim.g:7737:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7737:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7737:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7737:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_13=(Token)match(input,123,FOLLOW_24); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_13, grammarAccess.getConceptDeclarationAccess().getAdjacentKeyword_1_4_0());
                    	      								
                    	    }
                    	    otherlv_14=(Token)match(input,36,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_14, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_4_1());
                    	      								
                    	    }
                    	    // InternalKim.g:7745:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7746:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7746:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7747:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    lv_adjacent_15_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"adjacent",
                    	      												lv_adjacent_15_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalKim.g:7770:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7770:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7771:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalKim.g:7771:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7772:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
                    	    // InternalKim.g:7775:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7775:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7775:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7775:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_16=(Token)match(input,124,FOLLOW_101); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_16, grammarAccess.getConceptDeclarationAccess().getContainedKeyword_1_5_0());
                    	      								
                    	    }
                    	    otherlv_17=(Token)match(input,48,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_17, grammarAccess.getConceptDeclarationAccess().getInKeyword_1_5_1());
                    	      								
                    	    }
                    	    // InternalKim.g:7783:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7784:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7784:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7785:11: lv_container_18_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    lv_container_18_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"container",
                    	      												lv_container_18_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalKim.g:7808:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7808:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7809:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalKim.g:7809:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7810:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
                    	    // InternalKim.g:7813:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7813:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7813:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7813:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_19=(Token)match(input,125,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_19, grammarAccess.getConceptDeclarationAccess().getContainingKeyword_1_6_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7817:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7818:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7818:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7819:11: lv_contained_20_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    lv_contained_20_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"contained",
                    	      												lv_contained_20_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalKim.g:7842:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7842:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7843:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalKim.g:7843:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7844:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
                    	    // InternalKim.g:7847:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7847:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7847:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7847:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_21=(Token)match(input,126,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_21, grammarAccess.getConceptDeclarationAccess().getCausingKeyword_1_7_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7851:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7852:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7852:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7853:11: lv_caused_22_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    lv_caused_22_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"caused",
                    	      												lv_caused_22_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 9 :
                    	    // InternalKim.g:7876:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7876:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7877:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
                    	    }
                    	    // InternalKim.g:7877:115: ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7878:6: ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
                    	    // InternalKim.g:7881:9: ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7881:10: {...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7881:19: (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7881:20: otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_23=(Token)match(input,127,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_23, grammarAccess.getConceptDeclarationAccess().getDuringKeyword_1_8_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7885:9: ( (lv_during_24_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7886:10: (lv_during_24_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7886:10: (lv_during_24_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7887:11: lv_during_24_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    lv_during_24_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"during",
                    	      												lv_during_24_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 10 :
                    	    // InternalKim.g:7910:4: ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7910:4: ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:7911:5: {...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
                    	    }
                    	    // InternalKim.g:7911:115: ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7912:6: ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
                    	    // InternalKim.g:7915:9: ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7915:10: {...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7915:19: (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7915:20: otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_25=(Token)match(input,128,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_25, grammarAccess.getConceptDeclarationAccess().getWithinKeyword_1_9_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7919:9: ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7920:10: ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:7920:10: ( (lv_distributedWithinInherency_26_0= 'each' ) )?
                    	    int alt177=2;
                    	    int LA177_0 = input.LA(1);

                    	    if ( (LA177_0==26) ) {
                    	        alt177=1;
                    	    }
                    	    switch (alt177) {
                    	        case 1 :
                    	            // InternalKim.g:7921:11: (lv_distributedWithinInherency_26_0= 'each' )
                    	            {
                    	            // InternalKim.g:7921:11: (lv_distributedWithinInherency_26_0= 'each' )
                    	            // InternalKim.g:7922:12: lv_distributedWithinInherency_26_0= 'each'
                    	            {
                    	            lv_distributedWithinInherency_26_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedWithinInherency_26_0, grammarAccess.getConceptDeclarationAccess().getDistributedWithinInherencyEachKeyword_1_9_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedWithinInherency", true, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:7934:10: ( (lv_context_27_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7935:11: (lv_context_27_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7935:11: (lv_context_27_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7936:12: lv_context_27_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    lv_context_27_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"context",
                    	      													lv_context_27_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 11 :
                    	    // InternalKim.g:7960:4: ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7960:4: ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7961:5: {...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
                    	    }
                    	    // InternalKim.g:7961:116: ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7962:6: ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
                    	    // InternalKim.g:7965:9: ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7965:10: {...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7965:19: (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7965:20: otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_28=(Token)match(input,129,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_28, grammarAccess.getConceptDeclarationAccess().getLinkingKeyword_1_10_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7969:9: ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7970:10: (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7970:10: (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7971:11: lv_relationshipSource_29_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_relationshipSource_29_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"relationshipSource",
                    	      												lv_relationshipSource_29_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }

                    	    otherlv_30=(Token)match(input,36,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_30, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_10_2());
                    	      								
                    	    }
                    	    // InternalKim.g:7992:9: ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7993:10: (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7993:10: (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7994:11: lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    lv_relationshipTarget_31_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"relationshipTarget",
                    	      												lv_relationshipTarget_31_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop178;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptDeclaration"


    // $ANTLR start "entryRuleConceptReference"
    // InternalKim.g:8031:1: entryRuleConceptReference returns [EObject current=null] : iv_ruleConceptReference= ruleConceptReference EOF ;
    public final EObject entryRuleConceptReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptReference = null;


        try {
            // InternalKim.g:8031:57: (iv_ruleConceptReference= ruleConceptReference EOF )
            // InternalKim.g:8032:2: iv_ruleConceptReference= ruleConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptReference=ruleConceptReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConceptReference"


    // $ANTLR start "ruleConceptReference"
    // InternalKim.g:8038:1: ruleConceptReference returns [EObject current=null] : ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) ) ;
    public final EObject ruleConceptReference() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_templateType_2_1=null;
        Token lv_templateType_2_2=null;
        Token lv_name_3_0=null;
        Token otherlv_5=null;
        Token lv_name_7_0=null;
        Token otherlv_9=null;
        Token lv_name_11_0=null;
        Token otherlv_13=null;
        Token lv_name_15_0=null;
        Token otherlv_17=null;
        Token lv_name_19_0=null;
        Token otherlv_21=null;
        Token lv_name_23_0=null;
        Token otherlv_25=null;
        Token lv_name_27_0=null;
        Token otherlv_29=null;
        Token lv_name_31_0=null;
        Token otherlv_33=null;
        Token lv_name_35_0=null;
        Token otherlv_37=null;
        Token lv_name_39_0=null;
        Token otherlv_41=null;
        Token lv_template_43_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_4_0 = null;

        EObject lv_extends_6_0 = null;

        AntlrDatatypeRuleToken lv_type_8_0 = null;

        EObject lv_extends_10_0 = null;

        AntlrDatatypeRuleToken lv_type_12_0 = null;

        EObject lv_extends_14_0 = null;

        AntlrDatatypeRuleToken lv_type_16_0 = null;

        EObject lv_extends_18_0 = null;

        AntlrDatatypeRuleToken lv_type_20_0 = null;

        EObject lv_extends_22_0 = null;

        AntlrDatatypeRuleToken lv_type_24_0 = null;

        EObject lv_extends_26_0 = null;

        AntlrDatatypeRuleToken lv_type_28_0 = null;

        EObject lv_extends_30_0 = null;

        AntlrDatatypeRuleToken lv_type_32_0 = null;

        EObject lv_extends_34_0 = null;

        AntlrDatatypeRuleToken lv_type_36_0 = null;

        EObject lv_extends_38_0 = null;

        AntlrDatatypeRuleToken lv_type_40_0 = null;

        EObject lv_extends_42_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8044:2: ( ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) ) )
            // InternalKim.g:8045:2: ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) )
            {
            // InternalKim.g:8045:2: ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) )
            int alt192=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt192=1;
                }
                break;
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_ID:
            case RULE_LOWERCASE_DASHID:
                {
                alt192=2;
                }
                break;
            case 130:
            case 131:
                {
                alt192=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 192, 0, input);

                throw nvae;
            }

            switch (alt192) {
                case 1 :
                    // InternalKim.g:8046:3: ( (lv_name_0_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:8046:3: ( (lv_name_0_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:8047:4: (lv_name_0_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:8047:4: (lv_name_0_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:8048:5: lv_name_0_0= RULE_CAMELCASE_ID
                    {
                    lv_name_0_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getConceptReferenceAccess().getNameCAMELCASE_IDTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptReferenceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:8065:3: ( (lv_name_1_0= ruleNamespaceId ) )
                    {
                    // InternalKim.g:8065:3: ( (lv_name_1_0= ruleNamespaceId ) )
                    // InternalKim.g:8066:4: (lv_name_1_0= ruleNamespaceId )
                    {
                    // InternalKim.g:8066:4: (lv_name_1_0= ruleNamespaceId )
                    // InternalKim.g:8067:5: lv_name_1_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameNamespaceIdParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_1_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.integratedmodelling.kim.Kim.NamespaceId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:8085:3: ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) )
                    {
                    // InternalKim.g:8085:3: ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) )
                    // InternalKim.g:8086:4: ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) )
                    {
                    // InternalKim.g:8086:4: ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) )
                    // InternalKim.g:8087:5: ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) )
                    {
                    // InternalKim.g:8087:5: ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) )
                    // InternalKim.g:8088:6: (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' )
                    {
                    // InternalKim.g:8088:6: (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' )
                    int alt180=2;
                    int LA180_0 = input.LA(1);

                    if ( (LA180_0==130) ) {
                        alt180=1;
                    }
                    else if ( (LA180_0==131) ) {
                        alt180=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 180, 0, input);

                        throw nvae;
                    }
                    switch (alt180) {
                        case 1 :
                            // InternalKim.g:8089:7: lv_templateType_2_1= '${'
                            {
                            lv_templateType_2_1=(Token)match(input,130,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_2_1, grammarAccess.getConceptReferenceAccess().getTemplateTypeDollarSignLeftCurlyBracketKeyword_2_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:8100:7: lv_templateType_2_2= '#{'
                            {
                            lv_templateType_2_2=(Token)match(input,131,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_2_2, grammarAccess.getConceptReferenceAccess().getTemplateTypeNumberSignLeftCurlyBracketKeyword_2_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_2_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:8113:4: ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) )
                    int alt191=10;
                    switch ( input.LA(1) ) {
                    case 60:
                        {
                        alt191=1;
                        }
                        break;
                    case 132:
                        {
                        alt191=2;
                        }
                        break;
                    case 133:
                        {
                        alt191=3;
                        }
                        break;
                    case 123:
                        {
                        alt191=4;
                        }
                        break;
                    case 134:
                        {
                        alt191=5;
                        }
                        break;
                    case 124:
                        {
                        alt191=6;
                        }
                        break;
                    case 135:
                        {
                        alt191=7;
                        }
                        break;
                    case 136:
                        {
                        alt191=8;
                        }
                        break;
                    case 122:
                        {
                        alt191=9;
                        }
                        break;
                    case 137:
                        {
                        alt191=10;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 191, 0, input);

                        throw nvae;
                    }

                    switch (alt191) {
                        case 1 :
                            // InternalKim.g:8114:5: ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8114:5: ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8115:6: ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8115:6: ( (lv_name_3_0= 'context' ) )
                            // InternalKim.g:8116:7: (lv_name_3_0= 'context' )
                            {
                            // InternalKim.g:8116:7: (lv_name_3_0= 'context' )
                            // InternalKim.g:8117:8: lv_name_3_0= 'context'
                            {
                            lv_name_3_0=(Token)match(input,60,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_3_0, grammarAccess.getConceptReferenceAccess().getNameContextKeyword_2_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_3_0, "context");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8129:6: ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) )
                            int alt181=2;
                            int LA181_0 = input.LA(1);

                            if ( (LA181_0==95||LA181_0==160||(LA181_0>=167 && LA181_0<=168)||LA181_0==190||(LA181_0>=211 && LA181_0<=213)||(LA181_0>=218 && LA181_0<=247)) ) {
                                alt181=1;
                            }
                            else if ( (LA181_0==110) ) {
                                alt181=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 181, 0, input);

                                throw nvae;
                            }
                            switch (alt181) {
                                case 1 :
                                    // InternalKim.g:8130:7: ( (lv_type_4_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8130:7: ( (lv_type_4_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8131:8: (lv_type_4_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8131:8: (lv_type_4_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8132:9: lv_type_4_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_type_4_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_4_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8150:7: (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8150:7: (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) )
                                    // InternalKim.g:8151:8: otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) )
                                    {
                                    otherlv_5=(Token)match(input,110,FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_0_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8155:8: ( (lv_extends_6_0= ruleConcept ) )
                                    // InternalKim.g:8156:9: (lv_extends_6_0= ruleConcept )
                                    {
                                    // InternalKim.g:8156:9: (lv_extends_6_0= ruleConcept )
                                    // InternalKim.g:8157:10: lv_extends_6_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_0_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_extends_6_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_6_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:8178:5: ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8178:5: ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8179:6: ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8179:6: ( (lv_name_7_0= 'inherent' ) )
                            // InternalKim.g:8180:7: (lv_name_7_0= 'inherent' )
                            {
                            // InternalKim.g:8180:7: (lv_name_7_0= 'inherent' )
                            // InternalKim.g:8181:8: lv_name_7_0= 'inherent'
                            {
                            lv_name_7_0=(Token)match(input,132,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_7_0, grammarAccess.getConceptReferenceAccess().getNameInherentKeyword_2_1_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_7_0, "inherent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8193:6: ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) )
                            int alt182=2;
                            int LA182_0 = input.LA(1);

                            if ( (LA182_0==95||LA182_0==160||(LA182_0>=167 && LA182_0<=168)||LA182_0==190||(LA182_0>=211 && LA182_0<=213)||(LA182_0>=218 && LA182_0<=247)) ) {
                                alt182=1;
                            }
                            else if ( (LA182_0==110) ) {
                                alt182=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 182, 0, input);

                                throw nvae;
                            }
                            switch (alt182) {
                                case 1 :
                                    // InternalKim.g:8194:7: ( (lv_type_8_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8194:7: ( (lv_type_8_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8195:8: (lv_type_8_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8195:8: (lv_type_8_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8196:9: lv_type_8_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_1_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_type_8_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_8_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8214:7: (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8214:7: (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) )
                                    // InternalKim.g:8215:8: otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) )
                                    {
                                    otherlv_9=(Token)match(input,110,FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_9, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_1_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8219:8: ( (lv_extends_10_0= ruleConcept ) )
                                    // InternalKim.g:8220:9: (lv_extends_10_0= ruleConcept )
                                    {
                                    // InternalKim.g:8220:9: (lv_extends_10_0= ruleConcept )
                                    // InternalKim.g:8221:10: lv_extends_10_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_1_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_extends_10_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_10_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:8242:5: ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8242:5: ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8243:6: ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8243:6: ( (lv_name_11_0= 'compresent' ) )
                            // InternalKim.g:8244:7: (lv_name_11_0= 'compresent' )
                            {
                            // InternalKim.g:8244:7: (lv_name_11_0= 'compresent' )
                            // InternalKim.g:8245:8: lv_name_11_0= 'compresent'
                            {
                            lv_name_11_0=(Token)match(input,133,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_11_0, grammarAccess.getConceptReferenceAccess().getNameCompresentKeyword_2_1_2_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_11_0, "compresent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8257:6: ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) )
                            int alt183=2;
                            int LA183_0 = input.LA(1);

                            if ( (LA183_0==95||LA183_0==160||(LA183_0>=167 && LA183_0<=168)||LA183_0==190||(LA183_0>=211 && LA183_0<=213)||(LA183_0>=218 && LA183_0<=247)) ) {
                                alt183=1;
                            }
                            else if ( (LA183_0==110) ) {
                                alt183=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 183, 0, input);

                                throw nvae;
                            }
                            switch (alt183) {
                                case 1 :
                                    // InternalKim.g:8258:7: ( (lv_type_12_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8258:7: ( (lv_type_12_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8259:8: (lv_type_12_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8259:8: (lv_type_12_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8260:9: lv_type_12_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_2_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_type_12_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_12_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8278:7: (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8278:7: (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) )
                                    // InternalKim.g:8279:8: otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) )
                                    {
                                    otherlv_13=(Token)match(input,110,FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_13, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_2_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8283:8: ( (lv_extends_14_0= ruleConcept ) )
                                    // InternalKim.g:8284:9: (lv_extends_14_0= ruleConcept )
                                    {
                                    // InternalKim.g:8284:9: (lv_extends_14_0= ruleConcept )
                                    // InternalKim.g:8285:10: lv_extends_14_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_2_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_extends_14_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_14_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:8306:5: ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8306:5: ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8307:6: ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8307:6: ( (lv_name_15_0= 'adjacent' ) )
                            // InternalKim.g:8308:7: (lv_name_15_0= 'adjacent' )
                            {
                            // InternalKim.g:8308:7: (lv_name_15_0= 'adjacent' )
                            // InternalKim.g:8309:8: lv_name_15_0= 'adjacent'
                            {
                            lv_name_15_0=(Token)match(input,123,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_15_0, grammarAccess.getConceptReferenceAccess().getNameAdjacentKeyword_2_1_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_15_0, "adjacent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8321:6: ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) )
                            int alt184=2;
                            int LA184_0 = input.LA(1);

                            if ( (LA184_0==95||LA184_0==160||(LA184_0>=167 && LA184_0<=168)||LA184_0==190||(LA184_0>=211 && LA184_0<=213)||(LA184_0>=218 && LA184_0<=247)) ) {
                                alt184=1;
                            }
                            else if ( (LA184_0==110) ) {
                                alt184=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 184, 0, input);

                                throw nvae;
                            }
                            switch (alt184) {
                                case 1 :
                                    // InternalKim.g:8322:7: ( (lv_type_16_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8322:7: ( (lv_type_16_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8323:8: (lv_type_16_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8323:8: (lv_type_16_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8324:9: lv_type_16_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_3_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_type_16_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_16_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8342:7: (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8342:7: (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) )
                                    // InternalKim.g:8343:8: otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) )
                                    {
                                    otherlv_17=(Token)match(input,110,FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_17, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_3_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8347:8: ( (lv_extends_18_0= ruleConcept ) )
                                    // InternalKim.g:8348:9: (lv_extends_18_0= ruleConcept )
                                    {
                                    // InternalKim.g:8348:9: (lv_extends_18_0= ruleConcept )
                                    // InternalKim.g:8349:10: lv_extends_18_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_3_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_extends_18_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_18_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:8370:5: ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8370:5: ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8371:6: ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8371:6: ( (lv_name_19_0= 'container' ) )
                            // InternalKim.g:8372:7: (lv_name_19_0= 'container' )
                            {
                            // InternalKim.g:8372:7: (lv_name_19_0= 'container' )
                            // InternalKim.g:8373:8: lv_name_19_0= 'container'
                            {
                            lv_name_19_0=(Token)match(input,134,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_19_0, grammarAccess.getConceptReferenceAccess().getNameContainerKeyword_2_1_4_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_19_0, "container");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8385:6: ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) )
                            int alt185=2;
                            int LA185_0 = input.LA(1);

                            if ( (LA185_0==95||LA185_0==160||(LA185_0>=167 && LA185_0<=168)||LA185_0==190||(LA185_0>=211 && LA185_0<=213)||(LA185_0>=218 && LA185_0<=247)) ) {
                                alt185=1;
                            }
                            else if ( (LA185_0==110) ) {
                                alt185=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 185, 0, input);

                                throw nvae;
                            }
                            switch (alt185) {
                                case 1 :
                                    // InternalKim.g:8386:7: ( (lv_type_20_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8386:7: ( (lv_type_20_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8387:8: (lv_type_20_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8387:8: (lv_type_20_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8388:9: lv_type_20_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_4_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_type_20_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_20_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8406:7: (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8406:7: (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) )
                                    // InternalKim.g:8407:8: otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) )
                                    {
                                    otherlv_21=(Token)match(input,110,FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_21, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_4_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8411:8: ( (lv_extends_22_0= ruleConcept ) )
                                    // InternalKim.g:8412:9: (lv_extends_22_0= ruleConcept )
                                    {
                                    // InternalKim.g:8412:9: (lv_extends_22_0= ruleConcept )
                                    // InternalKim.g:8413:10: lv_extends_22_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_4_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_extends_22_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_22_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalKim.g:8434:5: ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8434:5: ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8435:6: ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8435:6: ( (lv_name_23_0= 'contained' ) )
                            // InternalKim.g:8436:7: (lv_name_23_0= 'contained' )
                            {
                            // InternalKim.g:8436:7: (lv_name_23_0= 'contained' )
                            // InternalKim.g:8437:8: lv_name_23_0= 'contained'
                            {
                            lv_name_23_0=(Token)match(input,124,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_23_0, grammarAccess.getConceptReferenceAccess().getNameContainedKeyword_2_1_5_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_23_0, "contained");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8449:6: ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) )
                            int alt186=2;
                            int LA186_0 = input.LA(1);

                            if ( (LA186_0==95||LA186_0==160||(LA186_0>=167 && LA186_0<=168)||LA186_0==190||(LA186_0>=211 && LA186_0<=213)||(LA186_0>=218 && LA186_0<=247)) ) {
                                alt186=1;
                            }
                            else if ( (LA186_0==110) ) {
                                alt186=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 186, 0, input);

                                throw nvae;
                            }
                            switch (alt186) {
                                case 1 :
                                    // InternalKim.g:8450:7: ( (lv_type_24_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8450:7: ( (lv_type_24_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8451:8: (lv_type_24_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8451:8: (lv_type_24_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8452:9: lv_type_24_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_5_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_type_24_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_24_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8470:7: (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8470:7: (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) )
                                    // InternalKim.g:8471:8: otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) )
                                    {
                                    otherlv_25=(Token)match(input,110,FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_25, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_5_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8475:8: ( (lv_extends_26_0= ruleConcept ) )
                                    // InternalKim.g:8476:9: (lv_extends_26_0= ruleConcept )
                                    {
                                    // InternalKim.g:8476:9: (lv_extends_26_0= ruleConcept )
                                    // InternalKim.g:8477:10: lv_extends_26_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_5_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_extends_26_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_26_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 7 :
                            // InternalKim.g:8498:5: ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8498:5: ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8499:6: ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8499:6: ( (lv_name_27_0= 'purpose' ) )
                            // InternalKim.g:8500:7: (lv_name_27_0= 'purpose' )
                            {
                            // InternalKim.g:8500:7: (lv_name_27_0= 'purpose' )
                            // InternalKim.g:8501:8: lv_name_27_0= 'purpose'
                            {
                            lv_name_27_0=(Token)match(input,135,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_27_0, grammarAccess.getConceptReferenceAccess().getNamePurposeKeyword_2_1_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_27_0, "purpose");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8513:6: ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) )
                            int alt187=2;
                            int LA187_0 = input.LA(1);

                            if ( (LA187_0==95||LA187_0==160||(LA187_0>=167 && LA187_0<=168)||LA187_0==190||(LA187_0>=211 && LA187_0<=213)||(LA187_0>=218 && LA187_0<=247)) ) {
                                alt187=1;
                            }
                            else if ( (LA187_0==110) ) {
                                alt187=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 187, 0, input);

                                throw nvae;
                            }
                            switch (alt187) {
                                case 1 :
                                    // InternalKim.g:8514:7: ( (lv_type_28_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8514:7: ( (lv_type_28_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8515:8: (lv_type_28_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8515:8: (lv_type_28_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8516:9: lv_type_28_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_6_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_type_28_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_28_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8534:7: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8534:7: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) )
                                    // InternalKim.g:8535:8: otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) )
                                    {
                                    otherlv_29=(Token)match(input,110,FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_29, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_6_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8539:8: ( (lv_extends_30_0= ruleConcept ) )
                                    // InternalKim.g:8540:9: (lv_extends_30_0= ruleConcept )
                                    {
                                    // InternalKim.g:8540:9: (lv_extends_30_0= ruleConcept )
                                    // InternalKim.g:8541:10: lv_extends_30_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_6_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_extends_30_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_30_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 8 :
                            // InternalKim.g:8562:5: ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8562:5: ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8563:6: ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8563:6: ( (lv_name_31_0= 'causant' ) )
                            // InternalKim.g:8564:7: (lv_name_31_0= 'causant' )
                            {
                            // InternalKim.g:8564:7: (lv_name_31_0= 'causant' )
                            // InternalKim.g:8565:8: lv_name_31_0= 'causant'
                            {
                            lv_name_31_0=(Token)match(input,136,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_31_0, grammarAccess.getConceptReferenceAccess().getNameCausantKeyword_2_1_7_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_31_0, "causant");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8577:6: ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) )
                            int alt188=2;
                            int LA188_0 = input.LA(1);

                            if ( (LA188_0==95||LA188_0==160||(LA188_0>=167 && LA188_0<=168)||LA188_0==190||(LA188_0>=211 && LA188_0<=213)||(LA188_0>=218 && LA188_0<=247)) ) {
                                alt188=1;
                            }
                            else if ( (LA188_0==110) ) {
                                alt188=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 188, 0, input);

                                throw nvae;
                            }
                            switch (alt188) {
                                case 1 :
                                    // InternalKim.g:8578:7: ( (lv_type_32_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8578:7: ( (lv_type_32_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8579:8: (lv_type_32_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8579:8: (lv_type_32_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8580:9: lv_type_32_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_7_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_type_32_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_32_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8598:7: (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8598:7: (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) )
                                    // InternalKim.g:8599:8: otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) )
                                    {
                                    otherlv_33=(Token)match(input,110,FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_33, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_7_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8603:8: ( (lv_extends_34_0= ruleConcept ) )
                                    // InternalKim.g:8604:9: (lv_extends_34_0= ruleConcept )
                                    {
                                    // InternalKim.g:8604:9: (lv_extends_34_0= ruleConcept )
                                    // InternalKim.g:8605:10: lv_extends_34_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_7_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_extends_34_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_34_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 9 :
                            // InternalKim.g:8626:5: ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8626:5: ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8627:6: ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8627:6: ( (lv_name_35_0= 'caused' ) )
                            // InternalKim.g:8628:7: (lv_name_35_0= 'caused' )
                            {
                            // InternalKim.g:8628:7: (lv_name_35_0= 'caused' )
                            // InternalKim.g:8629:8: lv_name_35_0= 'caused'
                            {
                            lv_name_35_0=(Token)match(input,122,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_35_0, grammarAccess.getConceptReferenceAccess().getNameCausedKeyword_2_1_8_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_35_0, "caused");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8641:6: ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) )
                            int alt189=2;
                            int LA189_0 = input.LA(1);

                            if ( (LA189_0==95||LA189_0==160||(LA189_0>=167 && LA189_0<=168)||LA189_0==190||(LA189_0>=211 && LA189_0<=213)||(LA189_0>=218 && LA189_0<=247)) ) {
                                alt189=1;
                            }
                            else if ( (LA189_0==110) ) {
                                alt189=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 189, 0, input);

                                throw nvae;
                            }
                            switch (alt189) {
                                case 1 :
                                    // InternalKim.g:8642:7: ( (lv_type_36_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8642:7: ( (lv_type_36_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8643:8: (lv_type_36_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8643:8: (lv_type_36_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8644:9: lv_type_36_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_8_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_type_36_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_36_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8662:7: (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8662:7: (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) )
                                    // InternalKim.g:8663:8: otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) )
                                    {
                                    otherlv_37=(Token)match(input,110,FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_37, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_8_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8667:8: ( (lv_extends_38_0= ruleConcept ) )
                                    // InternalKim.g:8668:9: (lv_extends_38_0= ruleConcept )
                                    {
                                    // InternalKim.g:8668:9: (lv_extends_38_0= ruleConcept )
                                    // InternalKim.g:8669:10: lv_extends_38_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_8_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_extends_38_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_38_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 10 :
                            // InternalKim.g:8690:5: ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8690:5: ( ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8691:6: ( (lv_name_39_0= 'cooccurrent' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8691:6: ( (lv_name_39_0= 'cooccurrent' ) )
                            // InternalKim.g:8692:7: (lv_name_39_0= 'cooccurrent' )
                            {
                            // InternalKim.g:8692:7: (lv_name_39_0= 'cooccurrent' )
                            // InternalKim.g:8693:8: lv_name_39_0= 'cooccurrent'
                            {
                            lv_name_39_0=(Token)match(input,137,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_39_0, grammarAccess.getConceptReferenceAccess().getNameCooccurrentKeyword_2_1_9_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_39_0, "cooccurrent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8705:6: ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) )
                            int alt190=2;
                            int LA190_0 = input.LA(1);

                            if ( (LA190_0==95||LA190_0==160||(LA190_0>=167 && LA190_0<=168)||LA190_0==190||(LA190_0>=211 && LA190_0<=213)||(LA190_0>=218 && LA190_0<=247)) ) {
                                alt190=1;
                            }
                            else if ( (LA190_0==110) ) {
                                alt190=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 190, 0, input);

                                throw nvae;
                            }
                            switch (alt190) {
                                case 1 :
                                    // InternalKim.g:8706:7: ( (lv_type_40_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8706:7: ( (lv_type_40_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8707:8: (lv_type_40_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8707:8: (lv_type_40_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8708:9: lv_type_40_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_9_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_type_40_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_40_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8726:7: (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8726:7: (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) )
                                    // InternalKim.g:8727:8: otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) )
                                    {
                                    otherlv_41=(Token)match(input,110,FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_41, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_9_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8731:8: ( (lv_extends_42_0= ruleConcept ) )
                                    // InternalKim.g:8732:9: (lv_extends_42_0= ruleConcept )
                                    {
                                    // InternalKim.g:8732:9: (lv_extends_42_0= ruleConcept )
                                    // InternalKim.g:8733:10: lv_extends_42_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_9_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_104);
                                    lv_extends_42_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_42_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:8754:4: ( (lv_template_43_0= '}' ) )
                    // InternalKim.g:8755:5: (lv_template_43_0= '}' )
                    {
                    // InternalKim.g:8755:5: (lv_template_43_0= '}' )
                    // InternalKim.g:8756:6: lv_template_43_0= '}'
                    {
                    lv_template_43_0=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_template_43_0, grammarAccess.getConceptReferenceAccess().getTemplateRightCurlyBracketKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptReferenceRule());
                      						}
                      						setWithLastConsumed(current, "template", true, "}");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConceptReference"


    // $ANTLR start "entryRuleOPERATOR_TARGET"
    // InternalKim.g:8773:1: entryRuleOPERATOR_TARGET returns [String current=null] : iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF ;
    public final String entryRuleOPERATOR_TARGET() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOPERATOR_TARGET = null;


        try {
            // InternalKim.g:8773:55: (iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF )
            // InternalKim.g:8774:2: iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOPERATOR_TARGETRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOPERATOR_TARGET=ruleOPERATOR_TARGET();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOPERATOR_TARGET.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOPERATOR_TARGET"


    // $ANTLR start "ruleOPERATOR_TARGET"
    // InternalKim.g:8780:1: ruleOPERATOR_TARGET returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' ) ;
    public final AntlrDatatypeRuleToken ruleOPERATOR_TARGET() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:8786:2: ( (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' ) )
            // InternalKim.g:8787:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' )
            {
            // InternalKim.g:8787:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' )
            int alt193=10;
            switch ( input.LA(1) ) {
            case 60:
                {
                alt193=1;
                }
                break;
            case 132:
                {
                alt193=2;
                }
                break;
            case 133:
                {
                alt193=3;
                }
                break;
            case 123:
                {
                alt193=4;
                }
                break;
            case 134:
                {
                alt193=5;
                }
                break;
            case 124:
                {
                alt193=6;
                }
                break;
            case 135:
                {
                alt193=7;
                }
                break;
            case 136:
                {
                alt193=8;
                }
                break;
            case 122:
                {
                alt193=9;
                }
                break;
            case 137:
                {
                alt193=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 193, 0, input);

                throw nvae;
            }

            switch (alt193) {
                case 1 :
                    // InternalKim.g:8788:3: kw= 'context'
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContextKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:8794:3: kw= 'inherent'
                    {
                    kw=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getInherentKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:8800:3: kw= 'compresent'
                    {
                    kw=(Token)match(input,133,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCompresentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:8806:3: kw= 'adjacent'
                    {
                    kw=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getAdjacentKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:8812:3: kw= 'container'
                    {
                    kw=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainerKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:8818:3: kw= 'contained'
                    {
                    kw=(Token)match(input,124,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainedKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:8824:3: kw= 'purpose'
                    {
                    kw=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getPurposeKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:8830:3: kw= 'causant'
                    {
                    kw=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausantKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:8836:3: kw= 'caused'
                    {
                    kw=(Token)match(input,122,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausedKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:8842:3: kw= 'cooccurrent'
                    {
                    kw=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCooccurrentKeyword_9());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOPERATOR_TARGET"


    // $ANTLR start "entryRuleConcept"
    // InternalKim.g:8851:1: entryRuleConcept returns [EObject current=null] : iv_ruleConcept= ruleConcept EOF ;
    public final EObject entryRuleConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcept = null;


        try {
            // InternalKim.g:8851:48: (iv_ruleConcept= ruleConcept EOF )
            // InternalKim.g:8852:2: iv_ruleConcept= ruleConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcept=ruleConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcept"


    // $ANTLR start "ruleConcept"
    // InternalKim.g:8858:1: ruleConcept returns [EObject current=null] : ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( ( ( (lv_change_24_0= 'change' ) ) otherlv_25= 'in' ) | ( (lv_change_26_0= 'next' ) ) ) ( (lv_concept_27_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_28_0= 'uncertainty' ) ) otherlv_29= 'of' ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_31_0= 'magnitude' ) ) otherlv_32= 'of' ( (lv_concept_33_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_34_0= 'level' ) ) otherlv_35= 'of' ( (lv_concept_36_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_37_0= 'type' ) ) otherlv_38= 'of' ( (lv_concept_39_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_40_0= 'observability' ) ) otherlv_41= 'of' ( (lv_concept_42_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_43_0= 'proportion' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_46= 'in' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_48_0= 'percentage' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_51= 'in' ) ( (lv_other_52_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_53_0= 'ratio' ) ) otherlv_54= 'of' ( (lv_concept_55_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_56= 'to' ) ( (lv_other_57_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_58_0= 'monetary' ) )? ( (lv_value_59_0= 'value' ) ) otherlv_60= 'of' ( (lv_concept_61_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_62= 'over' ) ( (lv_other_63_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_64_0= 'occurrence' ) ) otherlv_65= 'of' ( (lv_concept_66_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_authConcept_67_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_69_0= RULE_INT ) ) ) otherlv_70= 'by' ( ( (lv_authority_71_1= RULE_UPPERCASE_ID | lv_authority_71_2= RULE_UPPERCASE_PATH ) ) ) ) | (otherlv_72= '(' ( (lv_declaration_73_0= ruleExpression ) ) otherlv_74= ')' ) ) ;
    public final EObject ruleConcept() throws RecognitionException {
        EObject current = null;

        Token lv_negated_0_1=null;
        Token lv_negated_0_2=null;
        Token lv_authConcept_2_0=null;
        Token otherlv_3=null;
        Token lv_stringIdentifier_4_1=null;
        Token lv_stringIdentifier_4_2=null;
        Token lv_stringIdentifier_4_3=null;
        Token lv_stringIdentifier_4_4=null;
        Token lv_intIdentifier_5_0=null;
        Token otherlv_6=null;
        Token lv_authority_7_1=null;
        Token lv_authority_7_2=null;
        Token lv_presence_8_0=null;
        Token otherlv_9=null;
        Token lv_count_11_0=null;
        Token otherlv_12=null;
        Token lv_distance_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token lv_probability_18_0=null;
        Token otherlv_19=null;
        Token lv_assessment_21_0=null;
        Token otherlv_22=null;
        Token lv_change_24_0=null;
        Token otherlv_25=null;
        Token lv_change_26_0=null;
        Token lv_uncertainty_28_0=null;
        Token otherlv_29=null;
        Token lv_magnitude_31_0=null;
        Token otherlv_32=null;
        Token lv_level_34_0=null;
        Token otherlv_35=null;
        Token lv_type_37_0=null;
        Token otherlv_38=null;
        Token lv_observability_40_0=null;
        Token otherlv_41=null;
        Token lv_proportion_43_0=null;
        Token otherlv_44=null;
        Token otherlv_46=null;
        Token lv_percentage_48_0=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        Token lv_ratio_53_0=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token lv_monetary_58_0=null;
        Token lv_value_59_0=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token lv_occurrence_64_0=null;
        Token otherlv_65=null;
        Token lv_authConcept_67_0=null;
        Token lv_stringIdentifier_68_1=null;
        Token lv_stringIdentifier_68_2=null;
        Token lv_stringIdentifier_68_3=null;
        Token lv_stringIdentifier_68_4=null;
        Token lv_intIdentifier_69_0=null;
        Token otherlv_70=null;
        Token lv_authority_71_1=null;
        Token lv_authority_71_2=null;
        Token otherlv_72=null;
        Token otherlv_74=null;
        EObject lv_name_1_0 = null;

        EObject lv_concept_10_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_concept_17_0 = null;

        EObject lv_concept_20_0 = null;

        EObject lv_concept_23_0 = null;

        EObject lv_concept_27_0 = null;

        EObject lv_concept_30_0 = null;

        EObject lv_concept_33_0 = null;

        EObject lv_concept_36_0 = null;

        EObject lv_concept_39_0 = null;

        EObject lv_concept_42_0 = null;

        EObject lv_concept_45_0 = null;

        EObject lv_other_47_0 = null;

        EObject lv_concept_50_0 = null;

        EObject lv_other_52_0 = null;

        EObject lv_concept_55_0 = null;

        EObject lv_other_57_0 = null;

        EObject lv_concept_61_0 = null;

        EObject lv_other_63_0 = null;

        EObject lv_concept_66_0 = null;

        EObject lv_declaration_73_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8864:2: ( ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( ( ( (lv_change_24_0= 'change' ) ) otherlv_25= 'in' ) | ( (lv_change_26_0= 'next' ) ) ) ( (lv_concept_27_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_28_0= 'uncertainty' ) ) otherlv_29= 'of' ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_31_0= 'magnitude' ) ) otherlv_32= 'of' ( (lv_concept_33_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_34_0= 'level' ) ) otherlv_35= 'of' ( (lv_concept_36_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_37_0= 'type' ) ) otherlv_38= 'of' ( (lv_concept_39_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_40_0= 'observability' ) ) otherlv_41= 'of' ( (lv_concept_42_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_43_0= 'proportion' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_46= 'in' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_48_0= 'percentage' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_51= 'in' ) ( (lv_other_52_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_53_0= 'ratio' ) ) otherlv_54= 'of' ( (lv_concept_55_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_56= 'to' ) ( (lv_other_57_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_58_0= 'monetary' ) )? ( (lv_value_59_0= 'value' ) ) otherlv_60= 'of' ( (lv_concept_61_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_62= 'over' ) ( (lv_other_63_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_64_0= 'occurrence' ) ) otherlv_65= 'of' ( (lv_concept_66_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_authConcept_67_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_69_0= RULE_INT ) ) ) otherlv_70= 'by' ( ( (lv_authority_71_1= RULE_UPPERCASE_ID | lv_authority_71_2= RULE_UPPERCASE_PATH ) ) ) ) | (otherlv_72= '(' ( (lv_declaration_73_0= ruleExpression ) ) otherlv_74= ')' ) ) )
            // InternalKim.g:8865:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( ( ( (lv_change_24_0= 'change' ) ) otherlv_25= 'in' ) | ( (lv_change_26_0= 'next' ) ) ) ( (lv_concept_27_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_28_0= 'uncertainty' ) ) otherlv_29= 'of' ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_31_0= 'magnitude' ) ) otherlv_32= 'of' ( (lv_concept_33_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_34_0= 'level' ) ) otherlv_35= 'of' ( (lv_concept_36_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_37_0= 'type' ) ) otherlv_38= 'of' ( (lv_concept_39_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_40_0= 'observability' ) ) otherlv_41= 'of' ( (lv_concept_42_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_43_0= 'proportion' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_46= 'in' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_48_0= 'percentage' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_51= 'in' ) ( (lv_other_52_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_53_0= 'ratio' ) ) otherlv_54= 'of' ( (lv_concept_55_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_56= 'to' ) ( (lv_other_57_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_58_0= 'monetary' ) )? ( (lv_value_59_0= 'value' ) ) otherlv_60= 'of' ( (lv_concept_61_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_62= 'over' ) ( (lv_other_63_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_64_0= 'occurrence' ) ) otherlv_65= 'of' ( (lv_concept_66_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_authConcept_67_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_69_0= RULE_INT ) ) ) otherlv_70= 'by' ( ( (lv_authority_71_1= RULE_UPPERCASE_ID | lv_authority_71_2= RULE_UPPERCASE_PATH ) ) ) ) | (otherlv_72= '(' ( (lv_declaration_73_0= ruleExpression ) ) otherlv_74= ')' ) )
            {
            // InternalKim.g:8865:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( ( ( (lv_change_24_0= 'change' ) ) otherlv_25= 'in' ) | ( (lv_change_26_0= 'next' ) ) ) ( (lv_concept_27_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_28_0= 'uncertainty' ) ) otherlv_29= 'of' ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_31_0= 'magnitude' ) ) otherlv_32= 'of' ( (lv_concept_33_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_34_0= 'level' ) ) otherlv_35= 'of' ( (lv_concept_36_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_37_0= 'type' ) ) otherlv_38= 'of' ( (lv_concept_39_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_40_0= 'observability' ) ) otherlv_41= 'of' ( (lv_concept_42_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_43_0= 'proportion' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_46= 'in' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_48_0= 'percentage' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_51= 'in' ) ( (lv_other_52_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_53_0= 'ratio' ) ) otherlv_54= 'of' ( (lv_concept_55_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_56= 'to' ) ( (lv_other_57_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_58_0= 'monetary' ) )? ( (lv_value_59_0= 'value' ) ) otherlv_60= 'of' ( (lv_concept_61_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_62= 'over' ) ( (lv_other_63_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_64_0= 'occurrence' ) ) otherlv_65= 'of' ( (lv_concept_66_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_authConcept_67_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_69_0= RULE_INT ) ) ) otherlv_70= 'by' ( ( (lv_authority_71_1= RULE_UPPERCASE_ID | lv_authority_71_2= RULE_UPPERCASE_PATH ) ) ) ) | (otherlv_72= '(' ( (lv_declaration_73_0= ruleExpression ) ) otherlv_74= ')' ) )
            int alt209=19;
            switch ( input.LA(1) ) {
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_ID:
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case 130:
            case 131:
            case 139:
            case 140:
                {
                alt209=1;
                }
                break;
            case 142:
                {
                alt209=2;
                }
                break;
            case 143:
                {
                alt209=3;
                }
                break;
            case 144:
                {
                alt209=4;
                }
                break;
            case 145:
                {
                alt209=5;
                }
                break;
            case 146:
                {
                alt209=6;
                }
                break;
            case 147:
            case 148:
                {
                alt209=7;
                }
                break;
            case 149:
                {
                alt209=8;
                }
                break;
            case 150:
                {
                alt209=9;
                }
                break;
            case 151:
                {
                alt209=10;
                }
                break;
            case 152:
                {
                alt209=11;
                }
                break;
            case 153:
                {
                alt209=12;
                }
                break;
            case 154:
                {
                alt209=13;
                }
                break;
            case 155:
                {
                alt209=14;
                }
                break;
            case 156:
                {
                alt209=15;
                }
                break;
            case 157:
            case 158:
                {
                alt209=16;
                }
                break;
            case 159:
                {
                alt209=17;
                }
                break;
            case 160:
                {
                alt209=18;
                }
                break;
            case 38:
                {
                alt209=19;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;
            }

            switch (alt209) {
                case 1 :
                    // InternalKim.g:8866:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:8866:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:8867:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:8867:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )?
                    int alt195=2;
                    int LA195_0 = input.LA(1);

                    if ( ((LA195_0>=139 && LA195_0<=140)) ) {
                        alt195=1;
                    }
                    switch (alt195) {
                        case 1 :
                            // InternalKim.g:8868:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            {
                            // InternalKim.g:8868:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            // InternalKim.g:8869:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            {
                            // InternalKim.g:8869:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            int alt194=2;
                            int LA194_0 = input.LA(1);

                            if ( (LA194_0==139) ) {
                                alt194=1;
                            }
                            else if ( (LA194_0==140) ) {
                                alt194=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 194, 0, input);

                                throw nvae;
                            }
                            switch (alt194) {
                                case 1 :
                                    // InternalKim.g:8870:7: lv_negated_0_1= 'not'
                                    {
                                    lv_negated_0_1=(Token)match(input,139,FOLLOW_105); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_1, grammarAccess.getConceptAccess().getNegatedNotKeyword_0_0_0_0());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8881:7: lv_negated_0_2= 'no'
                                    {
                                    lv_negated_0_2=(Token)match(input,140,FOLLOW_105); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_2, grammarAccess.getConceptAccess().getNegatedNoKeyword_0_0_0_1());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:8894:4: ( (lv_name_1_0= ruleConceptReference ) )
                    // InternalKim.g:8895:5: (lv_name_1_0= ruleConceptReference )
                    {
                    // InternalKim.g:8895:5: (lv_name_1_0= ruleConceptReference )
                    // InternalKim.g:8896:6: lv_name_1_0= ruleConceptReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getNameConceptReferenceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_106);
                    lv_name_1_0=ruleConceptReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.ConceptReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:8913:4: ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt199=2;
                    int LA199_0 = input.LA(1);

                    if ( (LA199_0==141) ) {
                        alt199=1;
                    }
                    switch (alt199) {
                        case 1 :
                            // InternalKim.g:8914:5: ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            // InternalKim.g:8914:5: ( (lv_authConcept_2_0= 'identified' ) )
                            // InternalKim.g:8915:6: (lv_authConcept_2_0= 'identified' )
                            {
                            // InternalKim.g:8915:6: (lv_authConcept_2_0= 'identified' )
                            // InternalKim.g:8916:7: lv_authConcept_2_0= 'identified'
                            {
                            lv_authConcept_2_0=(Token)match(input,141,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authConcept_2_0, grammarAccess.getConceptAccess().getAuthConceptIdentifiedKeyword_0_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(current, "authConcept", true, "identified");
                              						
                            }

                            }


                            }

                            otherlv_3=(Token)match(input,25,FOLLOW_107); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getConceptAccess().getAsKeyword_0_2_1());
                              				
                            }
                            // InternalKim.g:8932:5: ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) )
                            int alt197=2;
                            int LA197_0 = input.LA(1);

                            if ( (LA197_0==RULE_UPPERCASE_ID||LA197_0==RULE_STRING||LA197_0==RULE_CAMELCASE_ID||LA197_0==RULE_ID) ) {
                                alt197=1;
                            }
                            else if ( (LA197_0==RULE_INT) ) {
                                alt197=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 197, 0, input);

                                throw nvae;
                            }
                            switch (alt197) {
                                case 1 :
                                    // InternalKim.g:8933:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) )
                                    {
                                    // InternalKim.g:8933:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) )
                                    // InternalKim.g:8934:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) )
                                    {
                                    // InternalKim.g:8934:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) )
                                    // InternalKim.g:8935:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID )
                                    {
                                    // InternalKim.g:8935:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID )
                                    int alt196=4;
                                    switch ( input.LA(1) ) {
                                    case RULE_ID:
                                        {
                                        alt196=1;
                                        }
                                        break;
                                    case RULE_STRING:
                                        {
                                        alt196=2;
                                        }
                                        break;
                                    case RULE_UPPERCASE_ID:
                                        {
                                        alt196=3;
                                        }
                                        break;
                                    case RULE_CAMELCASE_ID:
                                        {
                                        alt196=4;
                                        }
                                        break;
                                    default:
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 196, 0, input);

                                        throw nvae;
                                    }

                                    switch (alt196) {
                                        case 1 :
                                            // InternalKim.g:8936:9: lv_stringIdentifier_4_1= RULE_ID
                                            {
                                            lv_stringIdentifier_4_1=(Token)match(input,RULE_ID,FOLLOW_100); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_0_2_2_0_0_0());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_1,
                                              										"org.eclipse.xtext.common.Terminals.ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:8951:9: lv_stringIdentifier_4_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_4_2=(Token)match(input,RULE_STRING,FOLLOW_100); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_0_2_2_0_0_1());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_2,
                                              										"org.eclipse.xtext.common.Terminals.STRING");
                                              								
                                            }

                                            }
                                            break;
                                        case 3 :
                                            // InternalKim.g:8966:9: lv_stringIdentifier_4_3= RULE_UPPERCASE_ID
                                            {
                                            lv_stringIdentifier_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_100); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_3, grammarAccess.getConceptAccess().getStringIdentifierUPPERCASE_IDTerminalRuleCall_0_2_2_0_0_2());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_3,
                                              										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 4 :
                                            // InternalKim.g:8981:9: lv_stringIdentifier_4_4= RULE_CAMELCASE_ID
                                            {
                                            lv_stringIdentifier_4_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_100); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_4, grammarAccess.getConceptAccess().getStringIdentifierCAMELCASE_IDTerminalRuleCall_0_2_2_0_0_3());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_4,
                                              										"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                              								
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8999:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:8999:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    // InternalKim.g:9000:7: (lv_intIdentifier_5_0= RULE_INT )
                                    {
                                    // InternalKim.g:9000:7: (lv_intIdentifier_5_0= RULE_INT )
                                    // InternalKim.g:9001:8: lv_intIdentifier_5_0= RULE_INT
                                    {
                                    lv_intIdentifier_5_0=(Token)match(input,RULE_INT,FOLLOW_100); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_intIdentifier_5_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_0_2_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"intIdentifier",
                                      									lv_intIdentifier_5_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_6=(Token)match(input,88,FOLLOW_108); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getConceptAccess().getByKeyword_0_2_3());
                              				
                            }
                            // InternalKim.g:9022:5: ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:9023:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:9023:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:9024:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:9024:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            int alt198=2;
                            int LA198_0 = input.LA(1);

                            if ( (LA198_0==RULE_UPPERCASE_ID) ) {
                                alt198=1;
                            }
                            else if ( (LA198_0==RULE_UPPERCASE_PATH) ) {
                                alt198=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 198, 0, input);

                                throw nvae;
                            }
                            switch (alt198) {
                                case 1 :
                                    // InternalKim.g:9025:8: lv_authority_7_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_7_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_0_2_4_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_1,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9040:8: lv_authority_7_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_7_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_0_2_4_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:9060:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9060:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9061:4: ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9061:4: ( (lv_presence_8_0= 'presence' ) )
                    // InternalKim.g:9062:5: (lv_presence_8_0= 'presence' )
                    {
                    // InternalKim.g:9062:5: (lv_presence_8_0= 'presence' )
                    // InternalKim.g:9063:6: lv_presence_8_0= 'presence'
                    {
                    lv_presence_8_0=(Token)match(input,142,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_presence_8_0, grammarAccess.getConceptAccess().getPresencePresenceKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "presence", true, "presence");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getConceptAccess().getOfKeyword_1_1());
                      			
                    }
                    // InternalKim.g:9079:4: ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9080:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9080:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9081:6: lv_concept_10_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_10_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_10_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:9100:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9100:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9101:4: ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9101:4: ( (lv_count_11_0= 'count' ) )
                    // InternalKim.g:9102:5: (lv_count_11_0= 'count' )
                    {
                    // InternalKim.g:9102:5: (lv_count_11_0= 'count' )
                    // InternalKim.g:9103:6: lv_count_11_0= 'count'
                    {
                    lv_count_11_0=(Token)match(input,143,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_count_11_0, grammarAccess.getConceptAccess().getCountCountKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "count", true, "count");
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getConceptAccess().getOfKeyword_2_1());
                      			
                    }
                    // InternalKim.g:9119:4: ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9120:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9120:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9121:6: lv_concept_13_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_13_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:9140:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9140:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9141:4: ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9141:4: ( (lv_distance_14_0= 'distance' ) )
                    // InternalKim.g:9142:5: (lv_distance_14_0= 'distance' )
                    {
                    // InternalKim.g:9142:5: (lv_distance_14_0= 'distance' )
                    // InternalKim.g:9143:6: lv_distance_14_0= 'distance'
                    {
                    lv_distance_14_0=(Token)match(input,144,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_distance_14_0, grammarAccess.getConceptAccess().getDistanceDistanceKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "distance", true, "distance");
                      					
                    }

                    }


                    }

                    // InternalKim.g:9155:4: (otherlv_15= 'to' | otherlv_16= 'from' )
                    int alt200=2;
                    int LA200_0 = input.LA(1);

                    if ( (LA200_0==36) ) {
                        alt200=1;
                    }
                    else if ( (LA200_0==101) ) {
                        alt200=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 200, 0, input);

                        throw nvae;
                    }
                    switch (alt200) {
                        case 1 :
                            // InternalKim.g:9156:5: otherlv_15= 'to'
                            {
                            otherlv_15=(Token)match(input,36,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getConceptAccess().getToKeyword_3_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:9161:5: otherlv_16= 'from'
                            {
                            otherlv_16=(Token)match(input,101,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getConceptAccess().getFromKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:9166:4: ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9167:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9167:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9168:6: lv_concept_17_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_17_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_17_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:9187:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9187:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9188:4: ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9188:4: ( (lv_probability_18_0= 'probability' ) )
                    // InternalKim.g:9189:5: (lv_probability_18_0= 'probability' )
                    {
                    // InternalKim.g:9189:5: (lv_probability_18_0= 'probability' )
                    // InternalKim.g:9190:6: lv_probability_18_0= 'probability'
                    {
                    lv_probability_18_0=(Token)match(input,145,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_probability_18_0, grammarAccess.getConceptAccess().getProbabilityProbabilityKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "probability", true, "probability");
                      					
                    }

                    }


                    }

                    otherlv_19=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getConceptAccess().getOfKeyword_4_1());
                      			
                    }
                    // InternalKim.g:9206:4: ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9207:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9207:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9208:6: lv_concept_20_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_20_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_20_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:9227:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9227:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9228:4: ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9228:4: ( (lv_assessment_21_0= 'assessment' ) )
                    // InternalKim.g:9229:5: (lv_assessment_21_0= 'assessment' )
                    {
                    // InternalKim.g:9229:5: (lv_assessment_21_0= 'assessment' )
                    // InternalKim.g:9230:6: lv_assessment_21_0= 'assessment'
                    {
                    lv_assessment_21_0=(Token)match(input,146,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_assessment_21_0, grammarAccess.getConceptAccess().getAssessmentAssessmentKeyword_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "assessment", true, "assessment");
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getConceptAccess().getOfKeyword_5_1());
                      			
                    }
                    // InternalKim.g:9246:4: ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9247:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9247:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9248:6: lv_concept_23_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_23_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_23_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:9267:3: ( ( ( ( (lv_change_24_0= 'change' ) ) otherlv_25= 'in' ) | ( (lv_change_26_0= 'next' ) ) ) ( (lv_concept_27_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9267:3: ( ( ( ( (lv_change_24_0= 'change' ) ) otherlv_25= 'in' ) | ( (lv_change_26_0= 'next' ) ) ) ( (lv_concept_27_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9268:4: ( ( ( (lv_change_24_0= 'change' ) ) otherlv_25= 'in' ) | ( (lv_change_26_0= 'next' ) ) ) ( (lv_concept_27_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9268:4: ( ( ( (lv_change_24_0= 'change' ) ) otherlv_25= 'in' ) | ( (lv_change_26_0= 'next' ) ) )
                    int alt201=2;
                    int LA201_0 = input.LA(1);

                    if ( (LA201_0==147) ) {
                        alt201=1;
                    }
                    else if ( (LA201_0==148) ) {
                        alt201=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 201, 0, input);

                        throw nvae;
                    }
                    switch (alt201) {
                        case 1 :
                            // InternalKim.g:9269:5: ( ( (lv_change_24_0= 'change' ) ) otherlv_25= 'in' )
                            {
                            // InternalKim.g:9269:5: ( ( (lv_change_24_0= 'change' ) ) otherlv_25= 'in' )
                            // InternalKim.g:9270:6: ( (lv_change_24_0= 'change' ) ) otherlv_25= 'in'
                            {
                            // InternalKim.g:9270:6: ( (lv_change_24_0= 'change' ) )
                            // InternalKim.g:9271:7: (lv_change_24_0= 'change' )
                            {
                            // InternalKim.g:9271:7: (lv_change_24_0= 'change' )
                            // InternalKim.g:9272:8: lv_change_24_0= 'change'
                            {
                            lv_change_24_0=(Token)match(input,147,FOLLOW_101); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_change_24_0, grammarAccess.getConceptAccess().getChangeChangeKeyword_6_0_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptRule());
                              								}
                              								setWithLastConsumed(current, "change", true, "change");
                              							
                            }

                            }


                            }

                            otherlv_25=(Token)match(input,48,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_25, grammarAccess.getConceptAccess().getInKeyword_6_0_0_1());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:9290:5: ( (lv_change_26_0= 'next' ) )
                            {
                            // InternalKim.g:9290:5: ( (lv_change_26_0= 'next' ) )
                            // InternalKim.g:9291:6: (lv_change_26_0= 'next' )
                            {
                            // InternalKim.g:9291:6: (lv_change_26_0= 'next' )
                            // InternalKim.g:9292:7: lv_change_26_0= 'next'
                            {
                            lv_change_26_0=(Token)match(input,148,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_change_26_0, grammarAccess.getConceptAccess().getChangeNextKeyword_6_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(current, "change", true, "next");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:9305:4: ( (lv_concept_27_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9306:5: (lv_concept_27_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9306:5: (lv_concept_27_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9307:6: lv_concept_27_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_27_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_27_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:9326:3: ( ( (lv_uncertainty_28_0= 'uncertainty' ) ) otherlv_29= 'of' ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9326:3: ( ( (lv_uncertainty_28_0= 'uncertainty' ) ) otherlv_29= 'of' ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9327:4: ( (lv_uncertainty_28_0= 'uncertainty' ) ) otherlv_29= 'of' ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9327:4: ( (lv_uncertainty_28_0= 'uncertainty' ) )
                    // InternalKim.g:9328:5: (lv_uncertainty_28_0= 'uncertainty' )
                    {
                    // InternalKim.g:9328:5: (lv_uncertainty_28_0= 'uncertainty' )
                    // InternalKim.g:9329:6: lv_uncertainty_28_0= 'uncertainty'
                    {
                    lv_uncertainty_28_0=(Token)match(input,149,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uncertainty_28_0, grammarAccess.getConceptAccess().getUncertaintyUncertaintyKeyword_7_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "uncertainty", true, "uncertainty");
                      					
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getConceptAccess().getOfKeyword_7_1());
                      			
                    }
                    // InternalKim.g:9345:4: ( (lv_concept_30_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9346:5: (lv_concept_30_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9346:5: (lv_concept_30_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9347:6: lv_concept_30_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_30_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_30_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:9366:3: ( ( (lv_magnitude_31_0= 'magnitude' ) ) otherlv_32= 'of' ( (lv_concept_33_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9366:3: ( ( (lv_magnitude_31_0= 'magnitude' ) ) otherlv_32= 'of' ( (lv_concept_33_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9367:4: ( (lv_magnitude_31_0= 'magnitude' ) ) otherlv_32= 'of' ( (lv_concept_33_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9367:4: ( (lv_magnitude_31_0= 'magnitude' ) )
                    // InternalKim.g:9368:5: (lv_magnitude_31_0= 'magnitude' )
                    {
                    // InternalKim.g:9368:5: (lv_magnitude_31_0= 'magnitude' )
                    // InternalKim.g:9369:6: lv_magnitude_31_0= 'magnitude'
                    {
                    lv_magnitude_31_0=(Token)match(input,150,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_magnitude_31_0, grammarAccess.getConceptAccess().getMagnitudeMagnitudeKeyword_8_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "magnitude", true, "magnitude");
                      					
                    }

                    }


                    }

                    otherlv_32=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getConceptAccess().getOfKeyword_8_1());
                      			
                    }
                    // InternalKim.g:9385:4: ( (lv_concept_33_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9386:5: (lv_concept_33_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9386:5: (lv_concept_33_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9387:6: lv_concept_33_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_33_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_33_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:9406:3: ( ( (lv_level_34_0= 'level' ) ) otherlv_35= 'of' ( (lv_concept_36_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9406:3: ( ( (lv_level_34_0= 'level' ) ) otherlv_35= 'of' ( (lv_concept_36_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9407:4: ( (lv_level_34_0= 'level' ) ) otherlv_35= 'of' ( (lv_concept_36_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9407:4: ( (lv_level_34_0= 'level' ) )
                    // InternalKim.g:9408:5: (lv_level_34_0= 'level' )
                    {
                    // InternalKim.g:9408:5: (lv_level_34_0= 'level' )
                    // InternalKim.g:9409:6: lv_level_34_0= 'level'
                    {
                    lv_level_34_0=(Token)match(input,151,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_level_34_0, grammarAccess.getConceptAccess().getLevelLevelKeyword_9_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "level", true, "level");
                      					
                    }

                    }


                    }

                    otherlv_35=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getConceptAccess().getOfKeyword_9_1());
                      			
                    }
                    // InternalKim.g:9425:4: ( (lv_concept_36_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9426:5: (lv_concept_36_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9426:5: (lv_concept_36_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9427:6: lv_concept_36_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_9_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_36_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_36_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:9446:3: ( ( (lv_type_37_0= 'type' ) ) otherlv_38= 'of' ( (lv_concept_39_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9446:3: ( ( (lv_type_37_0= 'type' ) ) otherlv_38= 'of' ( (lv_concept_39_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9447:4: ( (lv_type_37_0= 'type' ) ) otherlv_38= 'of' ( (lv_concept_39_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9447:4: ( (lv_type_37_0= 'type' ) )
                    // InternalKim.g:9448:5: (lv_type_37_0= 'type' )
                    {
                    // InternalKim.g:9448:5: (lv_type_37_0= 'type' )
                    // InternalKim.g:9449:6: lv_type_37_0= 'type'
                    {
                    lv_type_37_0=(Token)match(input,152,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_37_0, grammarAccess.getConceptAccess().getTypeTypeKeyword_10_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "type", true, "type");
                      					
                    }

                    }


                    }

                    otherlv_38=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getConceptAccess().getOfKeyword_10_1());
                      			
                    }
                    // InternalKim.g:9465:4: ( (lv_concept_39_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9466:5: (lv_concept_39_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9466:5: (lv_concept_39_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9467:6: lv_concept_39_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_10_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_39_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_39_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:9486:3: ( ( (lv_observability_40_0= 'observability' ) ) otherlv_41= 'of' ( (lv_concept_42_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9486:3: ( ( (lv_observability_40_0= 'observability' ) ) otherlv_41= 'of' ( (lv_concept_42_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9487:4: ( (lv_observability_40_0= 'observability' ) ) otherlv_41= 'of' ( (lv_concept_42_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9487:4: ( (lv_observability_40_0= 'observability' ) )
                    // InternalKim.g:9488:5: (lv_observability_40_0= 'observability' )
                    {
                    // InternalKim.g:9488:5: (lv_observability_40_0= 'observability' )
                    // InternalKim.g:9489:6: lv_observability_40_0= 'observability'
                    {
                    lv_observability_40_0=(Token)match(input,153,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_observability_40_0, grammarAccess.getConceptAccess().getObservabilityObservabilityKeyword_11_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "observability", true, "observability");
                      					
                    }

                    }


                    }

                    otherlv_41=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getConceptAccess().getOfKeyword_11_1());
                      			
                    }
                    // InternalKim.g:9505:4: ( (lv_concept_42_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9506:5: (lv_concept_42_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9506:5: (lv_concept_42_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9507:6: lv_concept_42_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_11_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_42_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_42_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:9526:3: ( ( (lv_proportion_43_0= 'proportion' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_46= 'in' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:9526:3: ( ( (lv_proportion_43_0= 'proportion' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_46= 'in' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:9527:4: ( (lv_proportion_43_0= 'proportion' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_46= 'in' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:9527:4: ( (lv_proportion_43_0= 'proportion' ) )
                    // InternalKim.g:9528:5: (lv_proportion_43_0= 'proportion' )
                    {
                    // InternalKim.g:9528:5: (lv_proportion_43_0= 'proportion' )
                    // InternalKim.g:9529:6: lv_proportion_43_0= 'proportion'
                    {
                    lv_proportion_43_0=(Token)match(input,154,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_proportion_43_0, grammarAccess.getConceptAccess().getProportionProportionKeyword_12_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "proportion", true, "proportion");
                      					
                    }

                    }


                    }

                    otherlv_44=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getConceptAccess().getOfKeyword_12_1());
                      			
                    }
                    // InternalKim.g:9545:4: ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9546:5: (lv_concept_45_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9546:5: (lv_concept_45_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9547:6: lv_concept_45_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_12_2_0());
                      					
                    }
                    pushFollow(FOLLOW_56);
                    lv_concept_45_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_45_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:9564:4: ( ( ( 'in' )=>otherlv_46= 'in' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt202=2;
                    int LA202_0 = input.LA(1);

                    if ( (LA202_0==48) ) {
                        int LA202_1 = input.LA(2);

                        if ( (synpred369_InternalKim()) ) {
                            alt202=1;
                        }
                    }
                    switch (alt202) {
                        case 1 :
                            // InternalKim.g:9565:5: ( ( 'in' )=>otherlv_46= 'in' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:9565:5: ( ( 'in' )=>otherlv_46= 'in' )
                            // InternalKim.g:9566:6: ( 'in' )=>otherlv_46= 'in'
                            {
                            otherlv_46=(Token)match(input,48,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_46, grammarAccess.getConceptAccess().getInKeyword_12_3_0());
                              					
                            }

                            }

                            // InternalKim.g:9572:5: ( (lv_other_47_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:9573:6: (lv_other_47_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:9573:6: (lv_other_47_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:9574:7: lv_other_47_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_12_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_47_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_47_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalKim.g:9594:3: ( ( (lv_percentage_48_0= 'percentage' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_51= 'in' ) ( (lv_other_52_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:9594:3: ( ( (lv_percentage_48_0= 'percentage' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_51= 'in' ) ( (lv_other_52_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:9595:4: ( (lv_percentage_48_0= 'percentage' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_51= 'in' ) ( (lv_other_52_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:9595:4: ( (lv_percentage_48_0= 'percentage' ) )
                    // InternalKim.g:9596:5: (lv_percentage_48_0= 'percentage' )
                    {
                    // InternalKim.g:9596:5: (lv_percentage_48_0= 'percentage' )
                    // InternalKim.g:9597:6: lv_percentage_48_0= 'percentage'
                    {
                    lv_percentage_48_0=(Token)match(input,155,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_percentage_48_0, grammarAccess.getConceptAccess().getPercentagePercentageKeyword_13_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "percentage", true, "percentage");
                      					
                    }

                    }


                    }

                    otherlv_49=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getConceptAccess().getOfKeyword_13_1());
                      			
                    }
                    // InternalKim.g:9613:4: ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9614:5: (lv_concept_50_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9614:5: (lv_concept_50_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9615:6: lv_concept_50_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_13_2_0());
                      					
                    }
                    pushFollow(FOLLOW_56);
                    lv_concept_50_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_50_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:9632:4: ( ( ( 'in' )=>otherlv_51= 'in' ) ( (lv_other_52_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt203=2;
                    int LA203_0 = input.LA(1);

                    if ( (LA203_0==48) ) {
                        int LA203_1 = input.LA(2);

                        if ( (synpred372_InternalKim()) ) {
                            alt203=1;
                        }
                    }
                    switch (alt203) {
                        case 1 :
                            // InternalKim.g:9633:5: ( ( 'in' )=>otherlv_51= 'in' ) ( (lv_other_52_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:9633:5: ( ( 'in' )=>otherlv_51= 'in' )
                            // InternalKim.g:9634:6: ( 'in' )=>otherlv_51= 'in'
                            {
                            otherlv_51=(Token)match(input,48,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_51, grammarAccess.getConceptAccess().getInKeyword_13_3_0());
                              					
                            }

                            }

                            // InternalKim.g:9640:5: ( (lv_other_52_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:9641:6: (lv_other_52_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:9641:6: (lv_other_52_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:9642:7: lv_other_52_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_13_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_52_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_52_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalKim.g:9662:3: ( ( (lv_ratio_53_0= 'ratio' ) ) otherlv_54= 'of' ( (lv_concept_55_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_56= 'to' ) ( (lv_other_57_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9662:3: ( ( (lv_ratio_53_0= 'ratio' ) ) otherlv_54= 'of' ( (lv_concept_55_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_56= 'to' ) ( (lv_other_57_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9663:4: ( (lv_ratio_53_0= 'ratio' ) ) otherlv_54= 'of' ( (lv_concept_55_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_56= 'to' ) ( (lv_other_57_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9663:4: ( (lv_ratio_53_0= 'ratio' ) )
                    // InternalKim.g:9664:5: (lv_ratio_53_0= 'ratio' )
                    {
                    // InternalKim.g:9664:5: (lv_ratio_53_0= 'ratio' )
                    // InternalKim.g:9665:6: lv_ratio_53_0= 'ratio'
                    {
                    lv_ratio_53_0=(Token)match(input,156,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_ratio_53_0, grammarAccess.getConceptAccess().getRatioRatioKeyword_14_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "ratio", true, "ratio");
                      					
                    }

                    }


                    }

                    otherlv_54=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_54, grammarAccess.getConceptAccess().getOfKeyword_14_1());
                      			
                    }
                    // InternalKim.g:9681:4: ( (lv_concept_55_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9682:5: (lv_concept_55_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9682:5: (lv_concept_55_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9683:6: lv_concept_55_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_14_2_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    lv_concept_55_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_55_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:9700:4: ( ( 'to' )=>otherlv_56= 'to' )
                    // InternalKim.g:9701:5: ( 'to' )=>otherlv_56= 'to'
                    {
                    otherlv_56=(Token)match(input,36,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_56, grammarAccess.getConceptAccess().getToKeyword_14_3());
                      				
                    }

                    }

                    // InternalKim.g:9707:4: ( (lv_other_57_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9708:5: (lv_other_57_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9708:5: (lv_other_57_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9709:6: lv_other_57_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_14_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_other_57_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"other",
                      							lv_other_57_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 16 :
                    // InternalKim.g:9728:3: ( ( (lv_monetary_58_0= 'monetary' ) )? ( (lv_value_59_0= 'value' ) ) otherlv_60= 'of' ( (lv_concept_61_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_62= 'over' ) ( (lv_other_63_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:9728:3: ( ( (lv_monetary_58_0= 'monetary' ) )? ( (lv_value_59_0= 'value' ) ) otherlv_60= 'of' ( (lv_concept_61_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_62= 'over' ) ( (lv_other_63_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:9729:4: ( (lv_monetary_58_0= 'monetary' ) )? ( (lv_value_59_0= 'value' ) ) otherlv_60= 'of' ( (lv_concept_61_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_62= 'over' ) ( (lv_other_63_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:9729:4: ( (lv_monetary_58_0= 'monetary' ) )?
                    int alt204=2;
                    int LA204_0 = input.LA(1);

                    if ( (LA204_0==157) ) {
                        alt204=1;
                    }
                    switch (alt204) {
                        case 1 :
                            // InternalKim.g:9730:5: (lv_monetary_58_0= 'monetary' )
                            {
                            // InternalKim.g:9730:5: (lv_monetary_58_0= 'monetary' )
                            // InternalKim.g:9731:6: lv_monetary_58_0= 'monetary'
                            {
                            lv_monetary_58_0=(Token)match(input,157,FOLLOW_111); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_monetary_58_0, grammarAccess.getConceptAccess().getMonetaryMonetaryKeyword_15_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getConceptRule());
                              						}
                              						setWithLastConsumed(current, "monetary", true, "monetary");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:9743:4: ( (lv_value_59_0= 'value' ) )
                    // InternalKim.g:9744:5: (lv_value_59_0= 'value' )
                    {
                    // InternalKim.g:9744:5: (lv_value_59_0= 'value' )
                    // InternalKim.g:9745:6: lv_value_59_0= 'value'
                    {
                    lv_value_59_0=(Token)match(input,158,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_59_0, grammarAccess.getConceptAccess().getValueValueKeyword_15_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "value", true, "value");
                      					
                    }

                    }


                    }

                    otherlv_60=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getConceptAccess().getOfKeyword_15_2());
                      			
                    }
                    // InternalKim.g:9761:4: ( (lv_concept_61_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9762:5: (lv_concept_61_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9762:5: (lv_concept_61_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9763:6: lv_concept_61_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_15_3_0());
                      					
                    }
                    pushFollow(FOLLOW_112);
                    lv_concept_61_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_61_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:9780:4: ( ( ( 'over' )=>otherlv_62= 'over' ) ( (lv_other_63_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt205=2;
                    int LA205_0 = input.LA(1);

                    if ( (LA205_0==55) ) {
                        int LA205_1 = input.LA(2);

                        if ( (synpred378_InternalKim()) ) {
                            alt205=1;
                        }
                    }
                    switch (alt205) {
                        case 1 :
                            // InternalKim.g:9781:5: ( ( 'over' )=>otherlv_62= 'over' ) ( (lv_other_63_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:9781:5: ( ( 'over' )=>otherlv_62= 'over' )
                            // InternalKim.g:9782:6: ( 'over' )=>otherlv_62= 'over'
                            {
                            otherlv_62=(Token)match(input,55,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_62, grammarAccess.getConceptAccess().getOverKeyword_15_4_0());
                              					
                            }

                            }

                            // InternalKim.g:9788:5: ( (lv_other_63_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:9789:6: (lv_other_63_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:9789:6: (lv_other_63_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:9790:7: lv_other_63_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_15_4_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_63_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_63_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 17 :
                    // InternalKim.g:9810:3: ( ( (lv_occurrence_64_0= 'occurrence' ) ) otherlv_65= 'of' ( (lv_concept_66_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9810:3: ( ( (lv_occurrence_64_0= 'occurrence' ) ) otherlv_65= 'of' ( (lv_concept_66_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9811:4: ( (lv_occurrence_64_0= 'occurrence' ) ) otherlv_65= 'of' ( (lv_concept_66_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9811:4: ( (lv_occurrence_64_0= 'occurrence' ) )
                    // InternalKim.g:9812:5: (lv_occurrence_64_0= 'occurrence' )
                    {
                    // InternalKim.g:9812:5: (lv_occurrence_64_0= 'occurrence' )
                    // InternalKim.g:9813:6: lv_occurrence_64_0= 'occurrence'
                    {
                    lv_occurrence_64_0=(Token)match(input,159,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_occurrence_64_0, grammarAccess.getConceptAccess().getOccurrenceOccurrenceKeyword_16_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "occurrence", true, "occurrence");
                      					
                    }

                    }


                    }

                    otherlv_65=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_65, grammarAccess.getConceptAccess().getOfKeyword_16_1());
                      			
                    }
                    // InternalKim.g:9829:4: ( (lv_concept_66_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9830:5: (lv_concept_66_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9830:5: (lv_concept_66_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9831:6: lv_concept_66_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_16_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_66_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_66_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 18 :
                    // InternalKim.g:9850:3: ( ( (lv_authConcept_67_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_69_0= RULE_INT ) ) ) otherlv_70= 'by' ( ( (lv_authority_71_1= RULE_UPPERCASE_ID | lv_authority_71_2= RULE_UPPERCASE_PATH ) ) ) )
                    {
                    // InternalKim.g:9850:3: ( ( (lv_authConcept_67_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_69_0= RULE_INT ) ) ) otherlv_70= 'by' ( ( (lv_authority_71_1= RULE_UPPERCASE_ID | lv_authority_71_2= RULE_UPPERCASE_PATH ) ) ) )
                    // InternalKim.g:9851:4: ( (lv_authConcept_67_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_69_0= RULE_INT ) ) ) otherlv_70= 'by' ( ( (lv_authority_71_1= RULE_UPPERCASE_ID | lv_authority_71_2= RULE_UPPERCASE_PATH ) ) )
                    {
                    // InternalKim.g:9851:4: ( (lv_authConcept_67_0= 'identity' ) )
                    // InternalKim.g:9852:5: (lv_authConcept_67_0= 'identity' )
                    {
                    // InternalKim.g:9852:5: (lv_authConcept_67_0= 'identity' )
                    // InternalKim.g:9853:6: lv_authConcept_67_0= 'identity'
                    {
                    lv_authConcept_67_0=(Token)match(input,160,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_authConcept_67_0, grammarAccess.getConceptAccess().getAuthConceptIdentityKeyword_17_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "authConcept", true, "identity");
                      					
                    }

                    }


                    }

                    // InternalKim.g:9865:4: ( ( ( (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_69_0= RULE_INT ) ) )
                    int alt207=2;
                    int LA207_0 = input.LA(1);

                    if ( (LA207_0==RULE_UPPERCASE_ID||LA207_0==RULE_STRING||LA207_0==RULE_CAMELCASE_ID||LA207_0==RULE_ID) ) {
                        alt207=1;
                    }
                    else if ( (LA207_0==RULE_INT) ) {
                        alt207=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 207, 0, input);

                        throw nvae;
                    }
                    switch (alt207) {
                        case 1 :
                            // InternalKim.g:9866:5: ( ( (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID ) ) )
                            {
                            // InternalKim.g:9866:5: ( ( (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:9867:6: ( (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:9867:6: ( (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:9868:7: (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:9868:7: (lv_stringIdentifier_68_1= RULE_ID | lv_stringIdentifier_68_2= RULE_STRING | lv_stringIdentifier_68_3= RULE_UPPERCASE_ID | lv_stringIdentifier_68_4= RULE_CAMELCASE_ID )
                            int alt206=4;
                            switch ( input.LA(1) ) {
                            case RULE_ID:
                                {
                                alt206=1;
                                }
                                break;
                            case RULE_STRING:
                                {
                                alt206=2;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt206=3;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt206=4;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 206, 0, input);

                                throw nvae;
                            }

                            switch (alt206) {
                                case 1 :
                                    // InternalKim.g:9869:8: lv_stringIdentifier_68_1= RULE_ID
                                    {
                                    lv_stringIdentifier_68_1=(Token)match(input,RULE_ID,FOLLOW_100); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_stringIdentifier_68_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_17_1_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"stringIdentifier",
                                      									lv_stringIdentifier_68_1,
                                      									"org.eclipse.xtext.common.Terminals.ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9884:8: lv_stringIdentifier_68_2= RULE_STRING
                                    {
                                    lv_stringIdentifier_68_2=(Token)match(input,RULE_STRING,FOLLOW_100); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_stringIdentifier_68_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_17_1_0_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"stringIdentifier",
                                      									lv_stringIdentifier_68_2,
                                      									"org.eclipse.xtext.common.Terminals.STRING");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:9899:8: lv_stringIdentifier_68_3= RULE_UPPERCASE_ID
                                    {
                                    lv_stringIdentifier_68_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_100); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_stringIdentifier_68_3, grammarAccess.getConceptAccess().getStringIdentifierUPPERCASE_IDTerminalRuleCall_17_1_0_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"stringIdentifier",
                                      									lv_stringIdentifier_68_3,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 4 :
                                    // InternalKim.g:9914:8: lv_stringIdentifier_68_4= RULE_CAMELCASE_ID
                                    {
                                    lv_stringIdentifier_68_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_100); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_stringIdentifier_68_4, grammarAccess.getConceptAccess().getStringIdentifierCAMELCASE_IDTerminalRuleCall_17_1_0_0_3());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"stringIdentifier",
                                      									lv_stringIdentifier_68_4,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:9932:5: ( (lv_intIdentifier_69_0= RULE_INT ) )
                            {
                            // InternalKim.g:9932:5: ( (lv_intIdentifier_69_0= RULE_INT ) )
                            // InternalKim.g:9933:6: (lv_intIdentifier_69_0= RULE_INT )
                            {
                            // InternalKim.g:9933:6: (lv_intIdentifier_69_0= RULE_INT )
                            // InternalKim.g:9934:7: lv_intIdentifier_69_0= RULE_INT
                            {
                            lv_intIdentifier_69_0=(Token)match(input,RULE_INT,FOLLOW_100); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_intIdentifier_69_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_17_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"intIdentifier",
                              								lv_intIdentifier_69_0,
                              								"org.eclipse.xtext.common.Terminals.INT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_70=(Token)match(input,88,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_70, grammarAccess.getConceptAccess().getByKeyword_17_2());
                      			
                    }
                    // InternalKim.g:9955:4: ( ( (lv_authority_71_1= RULE_UPPERCASE_ID | lv_authority_71_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:9956:5: ( (lv_authority_71_1= RULE_UPPERCASE_ID | lv_authority_71_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:9956:5: ( (lv_authority_71_1= RULE_UPPERCASE_ID | lv_authority_71_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:9957:6: (lv_authority_71_1= RULE_UPPERCASE_ID | lv_authority_71_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:9957:6: (lv_authority_71_1= RULE_UPPERCASE_ID | lv_authority_71_2= RULE_UPPERCASE_PATH )
                    int alt208=2;
                    int LA208_0 = input.LA(1);

                    if ( (LA208_0==RULE_UPPERCASE_ID) ) {
                        alt208=1;
                    }
                    else if ( (LA208_0==RULE_UPPERCASE_PATH) ) {
                        alt208=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 208, 0, input);

                        throw nvae;
                    }
                    switch (alt208) {
                        case 1 :
                            // InternalKim.g:9958:7: lv_authority_71_1= RULE_UPPERCASE_ID
                            {
                            lv_authority_71_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_71_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_17_3_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_71_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:9973:7: lv_authority_71_2= RULE_UPPERCASE_PATH
                            {
                            lv_authority_71_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_71_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_17_3_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_71_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 19 :
                    // InternalKim.g:9992:3: (otherlv_72= '(' ( (lv_declaration_73_0= ruleExpression ) ) otherlv_74= ')' )
                    {
                    // InternalKim.g:9992:3: (otherlv_72= '(' ( (lv_declaration_73_0= ruleExpression ) ) otherlv_74= ')' )
                    // InternalKim.g:9993:4: otherlv_72= '(' ( (lv_declaration_73_0= ruleExpression ) ) otherlv_74= ')'
                    {
                    otherlv_72=(Token)match(input,38,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_72, grammarAccess.getConceptAccess().getLeftParenthesisKeyword_18_0());
                      			
                    }
                    // InternalKim.g:9997:4: ( (lv_declaration_73_0= ruleExpression ) )
                    // InternalKim.g:9998:5: (lv_declaration_73_0= ruleExpression )
                    {
                    // InternalKim.g:9998:5: (lv_declaration_73_0= ruleExpression )
                    // InternalKim.g:9999:6: lv_declaration_73_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getDeclarationExpressionParserRuleCall_18_1_0());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    lv_declaration_73_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_73_0,
                      							"org.integratedmodelling.kim.Kim.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_74=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_74, grammarAccess.getConceptAccess().getRightParenthesisKeyword_18_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcept"


    // $ANTLR start "entryRuleExpression"
    // InternalKim.g:10025:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalKim.g:10025:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalKim.g:10026:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalKim.g:10032:1: ruleExpression returns [EObject current=null] : this_Term_0= ruleTerm ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Term_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10038:2: (this_Term_0= ruleTerm )
            // InternalKim.g:10039:2: this_Term_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getTermParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Term_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Term_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleTerm"
    // InternalKim.g:10053:1: entryRuleTerm returns [EObject current=null] : iv_ruleTerm= ruleTerm EOF ;
    public final EObject entryRuleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerm = null;


        try {
            // InternalKim.g:10053:45: (iv_ruleTerm= ruleTerm EOF )
            // InternalKim.g:10054:2: iv_ruleTerm= ruleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerm=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerm"


    // $ANTLR start "ruleTerm"
    // InternalKim.g:10060:1: ruleTerm returns [EObject current=null] : (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) ;
    public final EObject ruleTerm() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_0=null;
        EObject this_Factor_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10066:2: ( (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) )
            // InternalKim.g:10067:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            {
            // InternalKim.g:10067:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            // InternalKim.g:10068:3: this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_113);
            this_Factor_0=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Factor_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:10079:3: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            loop210:
            do {
                int alt210=2;
                int LA210_0 = input.LA(1);

                if ( (LA210_0==161) ) {
                    int LA210_2 = input.LA(2);

                    if ( (synpred387_InternalKim()) ) {
                        alt210=1;
                    }


                }


                switch (alt210) {
            	case 1 :
            	    // InternalKim.g:10080:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
            	    {
            	    // InternalKim.g:10080:4: ( (lv_operators_1_0= 'or' ) )
            	    // InternalKim.g:10081:5: (lv_operators_1_0= 'or' )
            	    {
            	    // InternalKim.g:10081:5: (lv_operators_1_0= 'or' )
            	    // InternalKim.g:10082:6: lv_operators_1_0= 'or'
            	    {
            	    lv_operators_1_0=(Token)match(input,161,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operators_1_0, grammarAccess.getTermAccess().getOperatorsOrKeyword_1_0_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getTermRule());
            	      						}
            	      						addWithLastConsumed(current, "operators", lv_operators_1_0, "or");
            	      					
            	    }

            	    }


            	    }

            	    // InternalKim.g:10094:4: ( (lv_operands_2_0= ruleFactor ) )
            	    // InternalKim.g:10095:5: (lv_operands_2_0= ruleFactor )
            	    {
            	    // InternalKim.g:10095:5: (lv_operands_2_0= ruleFactor )
            	    // InternalKim.g:10096:6: lv_operands_2_0= ruleFactor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_operands_2_0=ruleFactor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Factor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop210;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerm"


    // $ANTLR start "entryRuleFactor"
    // InternalKim.g:10118:1: entryRuleFactor returns [EObject current=null] : iv_ruleFactor= ruleFactor EOF ;
    public final EObject entryRuleFactor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFactor = null;


        try {
            // InternalKim.g:10118:47: (iv_ruleFactor= ruleFactor EOF )
            // InternalKim.g:10119:2: iv_ruleFactor= ruleFactor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFactorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFactor=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFactor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFactor"


    // $ANTLR start "ruleFactor"
    // InternalKim.g:10125:1: ruleFactor returns [EObject current=null] : (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) ;
    public final EObject ruleFactor() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject this_ConceptDeclaration_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10131:2: ( (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) )
            // InternalKim.g:10132:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            {
            // InternalKim.g:10132:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            // InternalKim.g:10133:3: this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFactorAccess().getConceptDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_114);
            this_ConceptDeclaration_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConceptDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:10144:3: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            loop212:
            do {
                int alt212=2;
                int LA212_0 = input.LA(1);

                if ( (LA212_0==162) ) {
                    int LA212_2 = input.LA(2);

                    if ( (synpred389_InternalKim()) ) {
                        alt212=1;
                    }


                }
                else if ( (LA212_0==163) ) {
                    int LA212_3 = input.LA(2);

                    if ( (synpred389_InternalKim()) ) {
                        alt212=1;
                    }


                }


                switch (alt212) {
            	case 1 :
            	    // InternalKim.g:10145:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
            	    {
            	    // InternalKim.g:10145:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
            	    // InternalKim.g:10146:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    {
            	    // InternalKim.g:10146:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    // InternalKim.g:10147:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    {
            	    // InternalKim.g:10147:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    int alt211=2;
            	    int LA211_0 = input.LA(1);

            	    if ( (LA211_0==162) ) {
            	        alt211=1;
            	    }
            	    else if ( (LA211_0==163) ) {
            	        alt211=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 211, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt211) {
            	        case 1 :
            	            // InternalKim.g:10148:7: lv_operators_1_1= 'and'
            	            {
            	            lv_operators_1_1=(Token)match(input,162,FOLLOW_8); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_1, grammarAccess.getFactorAccess().getOperatorsAndKeyword_1_0_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:10159:7: lv_operators_1_2= 'follows'
            	            {
            	            lv_operators_1_2=(Token)match(input,163,FOLLOW_8); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_2, grammarAccess.getFactorAccess().getOperatorsFollowsKeyword_1_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:10172:4: ( (lv_operands_2_0= ruleTerm ) )
            	    // InternalKim.g:10173:5: (lv_operands_2_0= ruleTerm )
            	    {
            	    // InternalKim.g:10173:5: (lv_operands_2_0= ruleTerm )
            	    // InternalKim.g:10174:6: lv_operands_2_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_114);
            	    lv_operands_2_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFactorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop212;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFactor"


    // $ANTLR start "entryRuleSimpleConceptDeclaration"
    // InternalKim.g:10196:1: entryRuleSimpleConceptDeclaration returns [EObject current=null] : iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF ;
    public final EObject entryRuleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleConceptDeclaration = null;


        try {
            // InternalKim.g:10196:65: (iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF )
            // InternalKim.g:10197:2: iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleConceptDeclaration=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleConceptDeclaration"


    // $ANTLR start "ruleSimpleConceptDeclaration"
    // InternalKim.g:10203:1: ruleSimpleConceptDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) ;
    public final EObject ruleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_main_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10209:2: ( ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) )
            // InternalKim.g:10210:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            {
            // InternalKim.g:10210:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            // InternalKim.g:10211:3: ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+
            {
            // InternalKim.g:10211:3: ( (lv_name_0_0= RULE_STRING ) )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==RULE_STRING) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // InternalKim.g:10212:4: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:10212:4: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:10213:5: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getSimpleConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSimpleConceptDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:10229:3: ( (lv_main_1_0= ruleConcept ) )+
            int cnt214=0;
            loop214:
            do {
                int alt214=2;
                alt214 = dfa214.predict(input);
                switch (alt214) {
            	case 1 :
            	    // InternalKim.g:10230:4: (lv_main_1_0= ruleConcept )
            	    {
            	    // InternalKim.g:10230:4: (lv_main_1_0= ruleConcept )
            	    // InternalKim.g:10231:5: lv_main_1_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_main_1_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_1_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt214 >= 1 ) break loop214;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(214, input);
                        throw eee;
                }
                cnt214++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleConceptDeclaration"


    // $ANTLR start "entryRuleUpperOntologyDefinition"
    // InternalKim.g:10252:1: entryRuleUpperOntologyDefinition returns [EObject current=null] : iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF ;
    public final EObject entryRuleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpperOntologyDefinition = null;


        try {
            // InternalKim.g:10252:64: (iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF )
            // InternalKim.g:10253:2: iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpperOntologyDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpperOntologyDefinition=ruleUpperOntologyDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpperOntologyDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpperOntologyDefinition"


    // $ANTLR start "ruleUpperOntologyDefinition"
    // InternalKim.g:10259:1: ruleUpperOntologyDefinition returns [EObject current=null] : (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) ;
    public final EObject ruleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_agentSpecifier_1_1=null;
        Token lv_agentSpecifier_1_2=null;
        Token lv_agentSpecifier_1_3=null;
        Token lv_concept_2_0=null;
        Token lv_concept_5_0=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_1 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_2 = null;

        AntlrDatatypeRuleToken lv_operand_8_0 = null;

        AntlrDatatypeRuleToken lv_property_10_1 = null;

        AntlrDatatypeRuleToken lv_property_10_2 = null;



        	enterRule();

        try {
            // InternalKim.g:10265:2: ( (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) )
            // InternalKim.g:10266:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            {
            // InternalKim.g:10266:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            // InternalKim.g:10267:3: otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            {
            otherlv_0=(Token)match(input,70,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUpperOntologyDefinitionAccess().getModelKeyword_0());
              		
            }
            // InternalKim.g:10271:3: ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==31||(LA221_0>=164 && LA221_0<=166)||(LA221_0>=248 && LA221_0<=249)) ) {
                alt221=1;
            }
            else if ( (LA221_0==60||(LA221_0>=122 && LA221_0<=124)||(LA221_0>=132 && LA221_0<=137)) ) {
                alt221=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 221, 0, input);

                throw nvae;
            }
            switch (alt221) {
                case 1 :
                    // InternalKim.g:10272:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:10272:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    // InternalKim.g:10273:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:10273:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? )
                    int alt218=2;
                    int LA218_0 = input.LA(1);

                    if ( ((LA218_0>=164 && LA218_0<=166)) ) {
                        alt218=1;
                    }
                    else if ( (LA218_0==31||(LA218_0>=248 && LA218_0<=249)) ) {
                        alt218=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 218, 0, input);

                        throw nvae;
                    }
                    switch (alt218) {
                        case 1 :
                            // InternalKim.g:10274:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            {
                            // InternalKim.g:10274:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            // InternalKim.g:10275:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) )
                            {
                            // InternalKim.g:10275:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) )
                            // InternalKim.g:10276:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            {
                            // InternalKim.g:10276:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            // InternalKim.g:10277:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            {
                            // InternalKim.g:10277:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            int alt215=3;
                            switch ( input.LA(1) ) {
                            case 164:
                                {
                                alt215=1;
                                }
                                break;
                            case 165:
                                {
                                alt215=2;
                                }
                                break;
                            case 166:
                                {
                                alt215=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 215, 0, input);

                                throw nvae;
                            }

                            switch (alt215) {
                                case 1 :
                                    // InternalKim.g:10278:10: lv_agentSpecifier_1_1= 'deliberative'
                                    {
                                    lv_agentSpecifier_1_1=(Token)match(input,164,FOLLOW_117); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_1, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierDeliberativeKeyword_1_0_0_0_0_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_1, null);
                                      									
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:10289:10: lv_agentSpecifier_1_2= 'interactive'
                                    {
                                    lv_agentSpecifier_1_2=(Token)match(input,165,FOLLOW_117); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_2, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierInteractiveKeyword_1_0_0_0_0_0_1());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_2, null);
                                      									
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:10300:10: lv_agentSpecifier_1_3= 'reactive'
                                    {
                                    lv_agentSpecifier_1_3=(Token)match(input,166,FOLLOW_117); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_3, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierReactiveKeyword_1_0_0_0_0_0_2());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_3, null);
                                      									
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:10313:7: ( (lv_concept_2_0= 'agent' ) )
                            // InternalKim.g:10314:8: (lv_concept_2_0= 'agent' )
                            {
                            // InternalKim.g:10314:8: (lv_concept_2_0= 'agent' )
                            // InternalKim.g:10315:9: lv_concept_2_0= 'agent'
                            {
                            lv_concept_2_0=(Token)match(input,167,FOLLOW_118); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									newLeafNode(lv_concept_2_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptAgentKeyword_1_0_0_0_1_0());
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                              									}
                              									setWithLastConsumed(current, "concept", lv_concept_2_0, "agent");
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:10329:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            {
                            // InternalKim.g:10329:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            int alt217=2;
                            int LA217_0 = input.LA(1);

                            if ( ((LA217_0>=248 && LA217_0<=249)) ) {
                                alt217=1;
                            }
                            switch (alt217) {
                                case 1 :
                                    // InternalKim.g:10330:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) )
                                    {
                                    // InternalKim.g:10330:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) )
                                    // InternalKim.g:10331:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    {
                                    // InternalKim.g:10331:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    // InternalKim.g:10332:9: lv_propertySpecifiers_3_0= rulePROPERTY_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_119);
                                    lv_propertySpecifiers_3_0=rulePROPERTY_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									add(
                                      										current,
                                      										"propertySpecifiers",
                                      										lv_propertySpecifiers_3_0,
                                      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:10349:7: ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )*
                                    loop216:
                                    do {
                                        int alt216=2;
                                        int LA216_0 = input.LA(1);

                                        if ( ((LA216_0>=248 && LA216_0<=249)) ) {
                                            alt216=1;
                                        }


                                        switch (alt216) {
                                    	case 1 :
                                    	    // InternalKim.g:10350:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    {
                                    	    // InternalKim.g:10350:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    // InternalKim.g:10351:9: lv_propertySpecifiers_4_0= rulePROPERTY_TYPE
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_1_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_119);
                                    	    lv_propertySpecifiers_4_0=rulePROPERTY_TYPE();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"propertySpecifiers",
                                    	      										lv_propertySpecifiers_4_0,
                                    	      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop216;
                                        }
                                    } while (true);

                                    // InternalKim.g:10368:7: ( (lv_concept_5_0= 'relationship' ) )
                                    // InternalKim.g:10369:8: (lv_concept_5_0= 'relationship' )
                                    {
                                    // InternalKim.g:10369:8: (lv_concept_5_0= 'relationship' )
                                    // InternalKim.g:10370:9: lv_concept_5_0= 'relationship'
                                    {
                                    lv_concept_5_0=(Token)match(input,168,FOLLOW_118); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_concept_5_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptRelationshipKeyword_1_0_0_1_2_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									setWithLastConsumed(current, "concept", lv_concept_5_0, "relationship");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,31,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_0_1());
                      				
                    }
                    // InternalKim.g:10388:5: ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    // InternalKim.g:10389:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    {
                    // InternalKim.g:10389:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    // InternalKim.g:10390:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    {
                    // InternalKim.g:10390:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    int alt219=2;
                    alt219 = dfa219.predict(input);
                    switch (alt219) {
                        case 1 :
                            // InternalKim.g:10391:8: lv_coreconcept_7_1= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptNamespaceIdParserRuleCall_1_0_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_1=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_1,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10407:8: lv_coreconcept_7_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptPropertyIdParserRuleCall_1_0_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_2,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:10427:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    {
                    // InternalKim.g:10427:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    // InternalKim.g:10428:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:10428:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) )
                    // InternalKim.g:10429:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    {
                    // InternalKim.g:10429:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    // InternalKim.g:10430:7: lv_operand_8_0= ruleOPERATOR_TARGET
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getOperandOPERATOR_TARGETParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_118);
                    lv_operand_8_0=ruleOPERATOR_TARGET();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                      							}
                      							set(
                      								current,
                      								"operand",
                      								lv_operand_8_0,
                      								"org.integratedmodelling.kim.Kim.OPERATOR_TARGET");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,31,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_1_1());
                      				
                    }
                    // InternalKim.g:10451:5: ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    // InternalKim.g:10452:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:10452:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    // InternalKim.g:10453:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    {
                    // InternalKim.g:10453:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    int alt220=2;
                    alt220 = dfa220.predict(input);
                    switch (alt220) {
                        case 1 :
                            // InternalKim.g:10454:8: lv_property_10_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyPropertyIdParserRuleCall_1_1_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_1,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10470:8: lv_property_10_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyNamespaceIdParserRuleCall_1_1_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_2,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpperOntologyDefinition"


    // $ANTLR start "entryRuleConceptStatement"
    // InternalKim.g:10494:1: entryRuleConceptStatement returns [EObject current=null] : iv_ruleConceptStatement= ruleConceptStatement EOF ;
    public final EObject entryRuleConceptStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:10498:2: (iv_ruleConceptStatement= ruleConceptStatement EOF )
            // InternalKim.g:10499:2: iv_ruleConceptStatement= ruleConceptStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatement=ruleConceptStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatement"


    // $ANTLR start "ruleConceptStatement"
    // InternalKim.g:10508:1: ruleConceptStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? ) ;
    public final EObject ruleConceptStatement() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_2_0=null;
        Token lv_deniable_3_0=null;
        Token lv_subjective_4_0=null;
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token lv_attributeSpecifier_8_0=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;

        AntlrDatatypeRuleToken lv_concept_9_0 = null;

        EObject lv_body_10_0 = null;

        AntlrDatatypeRuleToken lv_name_12_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:10517:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? ) )
            // InternalKim.g:10518:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? )
            {
            // InternalKim.g:10518:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? )
            // InternalKim.g:10519:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )?
            {
            // InternalKim.g:10519:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop222:
            do {
                int alt222=2;
                int LA222_0 = input.LA(1);

                if ( (LA222_0==RULE_ANNOTATION_ID) ) {
                    alt222=1;
                }


                switch (alt222) {
            	case 1 :
            	    // InternalKim.g:10520:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:10520:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:10521:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop222;
                }
            } while (true);

            // InternalKim.g:10538:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:10539:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:10539:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) )
            // InternalKim.g:10540:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
            // InternalKim.g:10543:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* )
            // InternalKim.g:10544:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*
            {
            // InternalKim.g:10544:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*
            loop226:
            do {
                int alt226=5;
                alt226 = dfa226.predict(input);
                switch (alt226) {
            	case 1 :
            	    // InternalKim.g:10545:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    {
            	    // InternalKim.g:10545:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    // InternalKim.g:10546:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:10546:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    // InternalKim.g:10547:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:10550:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    // InternalKim.g:10550:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:10550:19: ( (lv_abstract_2_0= 'abstract' ) )
            	    // InternalKim.g:10550:20: (lv_abstract_2_0= 'abstract' )
            	    {
            	    // InternalKim.g:10550:20: (lv_abstract_2_0= 'abstract' )
            	    // InternalKim.g:10551:10: lv_abstract_2_0= 'abstract'
            	    {
            	    lv_abstract_2_0=(Token)match(input,169,FOLLOW_120); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_abstract_2_0, grammarAccess.getConceptStatementAccess().getAbstractAbstractKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "abstract", true, "abstract");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:10568:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    {
            	    // InternalKim.g:10568:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    // InternalKim.g:10569:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:10569:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    // InternalKim.g:10570:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:10573:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    // InternalKim.g:10573:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:10573:19: ( (lv_deniable_3_0= 'deniable' ) )
            	    // InternalKim.g:10573:20: (lv_deniable_3_0= 'deniable' )
            	    {
            	    // InternalKim.g:10573:20: (lv_deniable_3_0= 'deniable' )
            	    // InternalKim.g:10574:10: lv_deniable_3_0= 'deniable'
            	    {
            	    lv_deniable_3_0=(Token)match(input,170,FOLLOW_120); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_deniable_3_0, grammarAccess.getConceptStatementAccess().getDeniableDeniableKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "deniable", true, "deniable");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:10591:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    {
            	    // InternalKim.g:10591:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    // InternalKim.g:10592:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:10592:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    // InternalKim.g:10593:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:10596:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    // InternalKim.g:10596:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:10596:19: ( (lv_subjective_4_0= 'subjective' ) )
            	    // InternalKim.g:10596:20: (lv_subjective_4_0= 'subjective' )
            	    {
            	    // InternalKim.g:10596:20: (lv_subjective_4_0= 'subjective' )
            	    // InternalKim.g:10597:10: lv_subjective_4_0= 'subjective'
            	    {
            	    lv_subjective_4_0=(Token)match(input,171,FOLLOW_120); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_subjective_4_0, grammarAccess.getConceptStatementAccess().getSubjectiveSubjectiveKeyword_1_2_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "subjective", true, "subjective");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:10614:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10614:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
            	    // InternalKim.g:10615:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:10615:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
            	    // InternalKim.g:10616:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:10619:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
            	    // InternalKim.g:10619:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:10619:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
            	    int alt225=3;
            	    switch ( input.LA(1) ) {
            	    case 164:
            	    case 165:
            	    case 166:
            	        {
            	        alt225=1;
            	        }
            	        break;
            	    case 248:
            	    case 249:
            	        {
            	        alt225=2;
            	        }
            	        break;
            	    case 172:
            	        {
            	        alt225=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 225, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt225) {
            	        case 1 :
            	            // InternalKim.g:10619:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            {
            	            // InternalKim.g:10619:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            // InternalKim.g:10620:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            {
            	            // InternalKim.g:10620:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            // InternalKim.g:10621:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            {
            	            // InternalKim.g:10621:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            int alt223=3;
            	            switch ( input.LA(1) ) {
            	            case 164:
            	                {
            	                alt223=1;
            	                }
            	                break;
            	            case 165:
            	                {
            	                alt223=2;
            	                }
            	                break;
            	            case 166:
            	                {
            	                alt223=3;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 223, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt223) {
            	                case 1 :
            	                    // InternalKim.g:10622:12: lv_agentSpecifier_5_1= 'deliberative'
            	                    {
            	                    lv_agentSpecifier_5_1=(Token)match(input,164,FOLLOW_120); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_1, grammarAccess.getConceptStatementAccess().getAgentSpecifierDeliberativeKeyword_1_3_0_0_0());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_1, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:10633:12: lv_agentSpecifier_5_2= 'interactive'
            	                    {
            	                    lv_agentSpecifier_5_2=(Token)match(input,165,FOLLOW_120); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_2, grammarAccess.getConceptStatementAccess().getAgentSpecifierInteractiveKeyword_1_3_0_0_1());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_2, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 3 :
            	                    // InternalKim.g:10644:12: lv_agentSpecifier_5_3= 'reactive'
            	                    {
            	                    lv_agentSpecifier_5_3=(Token)match(input,166,FOLLOW_120); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_3, grammarAccess.getConceptStatementAccess().getAgentSpecifierReactiveKeyword_1_3_0_0_2());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_3, null);
            	                      											
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:10658:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            {
            	            // InternalKim.g:10658:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            // InternalKim.g:10659:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            {
            	            // InternalKim.g:10659:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
            	            // InternalKim.g:10660:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            {
            	            // InternalKim.g:10660:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            // InternalKim.g:10661:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_120);
            	            lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	              												}
            	              												add(
            	              													current,
            	              													"propertySpecifiers",
            	              													lv_propertySpecifiers_6_0,
            	              													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:10678:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            loop224:
            	            do {
            	                int alt224=2;
            	                int LA224_0 = input.LA(1);

            	                if ( (LA224_0==248) ) {
            	                    int LA224_2 = input.LA(2);

            	                    if ( (synpred407_InternalKim()) ) {
            	                        alt224=1;
            	                    }


            	                }
            	                else if ( (LA224_0==249) ) {
            	                    int LA224_3 = input.LA(2);

            	                    if ( (synpred407_InternalKim()) ) {
            	                        alt224=1;
            	                    }


            	                }


            	                switch (alt224) {
            	            	case 1 :
            	            	    // InternalKim.g:10679:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    {
            	            	    // InternalKim.g:10679:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    // InternalKim.g:10680:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_120);
            	            	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"propertySpecifiers",
            	            	      													lv_propertySpecifiers_7_0,
            	            	      													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop224;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:10699:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
            	            {
            	            // InternalKim.g:10699:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
            	            // InternalKim.g:10700:10: (lv_attributeSpecifier_8_0= 'rescaling' )
            	            {
            	            // InternalKim.g:10700:10: (lv_attributeSpecifier_8_0= 'rescaling' )
            	            // InternalKim.g:10701:11: lv_attributeSpecifier_8_0= 'rescaling'
            	            {
            	            lv_attributeSpecifier_8_0=(Token)match(input,172,FOLLOW_120); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_attributeSpecifier_8_0, grammarAccess.getConceptStatementAccess().getAttributeSpecifierRescalingKeyword_1_3_2_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementRule());
            	              											}
            	              											setWithLastConsumed(current, "attributeSpecifier", lv_attributeSpecifier_8_0, "rescaling");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop226;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:10726:3: ( (lv_concept_9_0= ruleCONCEPT_TYPE ) )
            // InternalKim.g:10727:4: (lv_concept_9_0= ruleCONCEPT_TYPE )
            {
            // InternalKim.g:10727:4: (lv_concept_9_0= ruleCONCEPT_TYPE )
            // InternalKim.g:10728:5: lv_concept_9_0= ruleCONCEPT_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getConceptCONCEPT_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_121);
            lv_concept_9_0=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"concept",
              						lv_concept_9_0,
              						"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:10745:3: ( (lv_body_10_0= ruleConceptStatementBody ) )
            // InternalKim.g:10746:4: (lv_body_10_0= ruleConceptStatementBody )
            {
            // InternalKim.g:10746:4: (lv_body_10_0= ruleConceptStatementBody )
            // InternalKim.g:10747:5: lv_body_10_0= ruleConceptStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getBodyConceptStatementBodyParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_122);
            lv_body_10_0=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_10_0,
              						"org.integratedmodelling.kim.Kim.ConceptStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:10764:3: (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==116) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // InternalKim.g:10765:4: otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) )
                    {
                    otherlv_11=(Token)match(input,116,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getConceptStatementAccess().getNamedKeyword_4_0());
                      			
                    }
                    // InternalKim.g:10769:4: ( (lv_name_12_0= ruleNamespaceId ) )
                    // InternalKim.g:10770:5: (lv_name_12_0= ruleNamespaceId )
                    {
                    // InternalKim.g:10770:5: (lv_name_12_0= ruleNamespaceId )
                    // InternalKim.g:10771:6: lv_name_12_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptStatementAccess().getNameNamespaceIdParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_12_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptStatementRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_12_0,
                      							"org.integratedmodelling.kim.Kim.NamespaceId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatement"


    // $ANTLR start "entryRuleConceptStatementBody"
    // InternalKim.g:10796:1: entryRuleConceptStatementBody returns [EObject current=null] : iv_ruleConceptStatementBody= ruleConceptStatementBody EOF ;
    public final EObject entryRuleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:10800:2: (iv_ruleConceptStatementBody= ruleConceptStatementBody EOF )
            // InternalKim.g:10801:2: iv_ruleConceptStatementBody= ruleConceptStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatementBody=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatementBody"


    // $ANTLR start "ruleConceptStatementBody"
    // InternalKim.g:10810:1: ruleConceptStatementBody returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) ) ;
    public final EObject ruleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_1_0=null;
        Token lv_root_2_0=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_stringIdentifier_6_1=null;
        Token lv_stringIdentifier_6_2=null;
        Token lv_intIdentifier_7_0=null;
        Token otherlv_8=null;
        Token lv_authority_9_1=null;
        Token lv_authority_9_2=null;
        Token lv_docstring_11_0=null;
        Token otherlv_12=null;
        Token lv_alias_13_0=null;
        Token lv_coreConcept_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_0=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        Token otherlv_79=null;
        Token otherlv_81=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token otherlv_99=null;
        Token otherlv_101=null;
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        Token otherlv_109=null;
        Token otherlv_111=null;
        Token otherlv_113=null;
        Token otherlv_114=null;
        Token lv_authorities_115_1=null;
        Token lv_authorities_115_2=null;
        Token otherlv_116=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;

        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;

        EObject lv_upperConcept_30_0 = null;

        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;

        EObject lv_describedQuality_36_0 = null;

        EObject lv_describedProportionality_39_0 = null;

        EObject lv_describedInverseProportionalityQuality_42_0 = null;

        EObject lv_describedNonzeroQuality_44_0 = null;

        EObject lv_classifiesQuality_46_0 = null;

        EObject lv_discretizesQuality_48_0 = null;

        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;

        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;

        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;

        EObject lv_whole_78_0 = null;

        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;

        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;

        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;

        EObject lv_inverse_98_0 = null;

        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;

        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;

        EObject lv_implications_110_0 = null;

        EObject lv_implications_112_0 = null;

        EObject lv_metadata_117_0 = null;

        EObject lv_properties_118_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:10819:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) ) )
            // InternalKim.g:10820:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) )
            {
            // InternalKim.g:10820:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) )
            // InternalKim.g:10821:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) ) )
            {
            // InternalKim.g:10821:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop228:
            do {
                int alt228=2;
                int LA228_0 = input.LA(1);

                if ( (LA228_0==RULE_ANNOTATION_ID) ) {
                    alt228=1;
                }


                switch (alt228) {
            	case 1 :
            	    // InternalKim.g:10822:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:10822:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:10823:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop228;
                }
            } while (true);

            // InternalKim.g:10840:3: ( (lv_abstract_1_0= 'abstract' ) )?
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==169) ) {
                alt229=1;
            }
            switch (alt229) {
                case 1 :
                    // InternalKim.g:10841:4: (lv_abstract_1_0= 'abstract' )
                    {
                    // InternalKim.g:10841:4: (lv_abstract_1_0= 'abstract' )
                    // InternalKim.g:10842:5: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,169,FOLLOW_123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_abstract_1_0, grammarAccess.getConceptStatementBodyAccess().getAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      					}
                      					setWithLastConsumed(current, "abstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:10854:3: ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) )
            int alt234=2;
            int LA234_0 = input.LA(1);

            if ( (LA234_0==96) ) {
                alt234=1;
            }
            else if ( (LA234_0==RULE_CAMELCASE_ID) ) {
                alt234=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 234, 0, input);

                throw nvae;
            }
            switch (alt234) {
                case 1 :
                    // InternalKim.g:10855:4: ( (lv_root_2_0= 'root' ) )
                    {
                    // InternalKim.g:10855:4: ( (lv_root_2_0= 'root' ) )
                    // InternalKim.g:10856:5: (lv_root_2_0= 'root' )
                    {
                    // InternalKim.g:10856:5: (lv_root_2_0= 'root' )
                    // InternalKim.g:10857:6: lv_root_2_0= 'root'
                    {
                    lv_root_2_0=(Token)match(input,96,FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_root_2_0, grammarAccess.getConceptStatementBodyAccess().getRootRootKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      						}
                      						setWithLastConsumed(current, "root", true, "root");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:10870:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:10870:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:10871:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:10871:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:10872:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:10872:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:10873:7: lv_name_3_0= RULE_CAMELCASE_ID
                    {
                    lv_name_3_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_125); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_name_3_0, grammarAccess.getConceptStatementBodyAccess().getNameCAMELCASE_IDTerminalRuleCall_2_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"name",
                      								lv_name_3_0,
                      								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      						
                    }

                    }


                    }

                    // InternalKim.g:10889:5: (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt233=2;
                    int LA233_0 = input.LA(1);

                    if ( (LA233_0==141) ) {
                        alt233=1;
                    }
                    switch (alt233) {
                        case 1 :
                            // InternalKim.g:10890:6: otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            otherlv_4=(Token)match(input,141,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getConceptStatementBodyAccess().getIdentifiedKeyword_2_1_1_0());
                              					
                            }
                            otherlv_5=(Token)match(input,25,FOLLOW_126); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getConceptStatementBodyAccess().getAsKeyword_2_1_1_1());
                              					
                            }
                            // InternalKim.g:10898:6: ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) )
                            int alt231=2;
                            int LA231_0 = input.LA(1);

                            if ( (LA231_0==RULE_STRING||LA231_0==RULE_ID) ) {
                                alt231=1;
                            }
                            else if ( (LA231_0==RULE_INT) ) {
                                alt231=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 231, 0, input);

                                throw nvae;
                            }
                            switch (alt231) {
                                case 1 :
                                    // InternalKim.g:10899:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    {
                                    // InternalKim.g:10899:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    // InternalKim.g:10900:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    {
                                    // InternalKim.g:10900:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    // InternalKim.g:10901:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    {
                                    // InternalKim.g:10901:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    int alt230=2;
                                    int LA230_0 = input.LA(1);

                                    if ( (LA230_0==RULE_ID) ) {
                                        alt230=1;
                                    }
                                    else if ( (LA230_0==RULE_STRING) ) {
                                        alt230=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 230, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt230) {
                                        case 1 :
                                            // InternalKim.g:10902:10: lv_stringIdentifier_6_1= RULE_ID
                                            {
                                            lv_stringIdentifier_6_1=(Token)match(input,RULE_ID,FOLLOW_100); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_1, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierIDTerminalRuleCall_2_1_1_2_0_0_0());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_1,
                                              											"org.eclipse.xtext.common.Terminals.ID");
                                              									
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:10917:10: lv_stringIdentifier_6_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_6_2=(Token)match(input,RULE_STRING,FOLLOW_100); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_2, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierSTRINGTerminalRuleCall_2_1_1_2_0_0_1());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_2,
                                              											"org.eclipse.xtext.common.Terminals.STRING");
                                              									
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:10935:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:10935:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    // InternalKim.g:10936:8: (lv_intIdentifier_7_0= RULE_INT )
                                    {
                                    // InternalKim.g:10936:8: (lv_intIdentifier_7_0= RULE_INT )
                                    // InternalKim.g:10937:9: lv_intIdentifier_7_0= RULE_INT
                                    {
                                    lv_intIdentifier_7_0=(Token)match(input,RULE_INT,FOLLOW_100); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_intIdentifier_7_0, grammarAccess.getConceptStatementBodyAccess().getIntIdentifierINTTerminalRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"intIdentifier",
                                      										lv_intIdentifier_7_0,
                                      										"org.eclipse.xtext.common.Terminals.INT");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_8=(Token)match(input,88,FOLLOW_108); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getConceptStatementBodyAccess().getByKeyword_2_1_1_3());
                              					
                            }
                            // InternalKim.g:10958:6: ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:10959:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:10959:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:10960:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:10960:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            int alt232=2;
                            int LA232_0 = input.LA(1);

                            if ( (LA232_0==RULE_UPPERCASE_ID) ) {
                                alt232=1;
                            }
                            else if ( (LA232_0==RULE_UPPERCASE_PATH) ) {
                                alt232=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 232, 0, input);

                                throw nvae;
                            }
                            switch (alt232) {
                                case 1 :
                                    // InternalKim.g:10961:9: lv_authority_9_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_9_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_124); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_1, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_2_1_1_4_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_1,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:10976:9: lv_authority_9_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_9_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_124); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_2, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_2_1_1_4_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:10996:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) ) )
            // InternalKim.g:10997:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) )
            {
            // InternalKim.g:10997:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) )
            // InternalKim.g:10998:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
            // InternalKim.g:11001:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* )
            // InternalKim.g:11002:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )*
            {
            // InternalKim.g:11002:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )*
            loop263:
            do {
                int alt263=26;
                alt263 = dfa263.predict(input);
                switch (alt263) {
            	case 1 :
            	    // InternalKim.g:11003:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    // InternalKim.g:11003:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:11004:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:11004:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    // InternalKim.g:11005:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:11008:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    // InternalKim.g:11008:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11008:19: ( (lv_docstring_11_0= RULE_STRING ) )
            	    // InternalKim.g:11008:20: (lv_docstring_11_0= RULE_STRING )
            	    {
            	    // InternalKim.g:11008:20: (lv_docstring_11_0= RULE_STRING )
            	    // InternalKim.g:11009:10: lv_docstring_11_0= RULE_STRING
            	    {
            	    lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_124); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_docstring_11_0, grammarAccess.getConceptStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_3_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      										}
            	      										setWithLastConsumed(
            	      											current,
            	      											"docstring",
            	      											lv_docstring_11_0,
            	      											"org.eclipse.xtext.common.Terminals.STRING");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:11030:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11030:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    // InternalKim.g:11031:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:11031:117: ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:11032:6: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:11035:9: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:11035:10: {...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11035:19: ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:11035:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    // InternalKim.g:11035:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? )
            	    // InternalKim.g:11036:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )?
            	    {
            	    // InternalKim.g:11036:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) )
            	    int alt235=2;
            	    int LA235_0 = input.LA(1);

            	    if ( (LA235_0==173) ) {
            	        alt235=1;
            	    }
            	    else if ( (LA235_0==174) ) {
            	        alt235=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 235, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt235) {
            	        case 1 :
            	            // InternalKim.g:11037:11: otherlv_12= 'is'
            	            {
            	            otherlv_12=(Token)match(input,173,FOLLOW_127); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getConceptStatementBodyAccess().getIsKeyword_3_1_0_0_0());
            	              										
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11042:11: ( (lv_alias_13_0= 'equals' ) )
            	            {
            	            // InternalKim.g:11042:11: ( (lv_alias_13_0= 'equals' ) )
            	            // InternalKim.g:11043:12: (lv_alias_13_0= 'equals' )
            	            {
            	            // InternalKim.g:11043:12: (lv_alias_13_0= 'equals' )
            	            // InternalKim.g:11044:13: lv_alias_13_0= 'equals'
            	            {
            	            lv_alias_13_0=(Token)match(input,174,FOLLOW_127); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_alias_13_0, grammarAccess.getConceptStatementBodyAccess().getAliasEqualsKeyword_3_1_0_0_1_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													setWithLastConsumed(current, "alias", true, "equals");
            	              												
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:11057:10: ( (lv_coreConcept_14_0= 'core' ) )?
            	    int alt236=2;
            	    int LA236_0 = input.LA(1);

            	    if ( (LA236_0==175) ) {
            	        alt236=1;
            	    }
            	    switch (alt236) {
            	        case 1 :
            	            // InternalKim.g:11058:11: (lv_coreConcept_14_0= 'core' )
            	            {
            	            // InternalKim.g:11058:11: (lv_coreConcept_14_0= 'core' )
            	            // InternalKim.g:11059:12: lv_coreConcept_14_0= 'core'
            	            {
            	            lv_coreConcept_14_0=(Token)match(input,175,FOLLOW_128); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_coreConcept_14_0, grammarAccess.getConceptStatementBodyAccess().getCoreConceptCoreKeyword_3_1_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "coreConcept", true, "core");
            	              											
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }

            	    // InternalKim.g:11072:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt239=2;
            	    int LA239_0 = input.LA(1);

            	    if ( (LA239_0==176) ) {
            	        alt239=1;
            	    }
            	    else if ( ((LA239_0>=RULE_UPPERCASE_ID && LA239_0<=RULE_LOWERCASE_ID)||LA239_0==RULE_CAMELCASE_ID||LA239_0==RULE_LOWERCASE_DASHID||LA239_0==38||(LA239_0>=130 && LA239_0<=131)||(LA239_0>=139 && LA239_0<=140)||(LA239_0>=142 && LA239_0<=160)) ) {
            	        alt239=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 239, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt239) {
            	        case 1 :
            	            // InternalKim.g:11073:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            {
            	            // InternalKim.g:11073:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            // InternalKim.g:11074:11: (lv_nothing_15_0= 'nothing' )
            	            {
            	            // InternalKim.g:11074:11: (lv_nothing_15_0= 'nothing' )
            	            // InternalKim.g:11075:12: lv_nothing_15_0= 'nothing'
            	            {
            	            lv_nothing_15_0=(Token)match(input,176,FOLLOW_124); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_nothing_15_0, grammarAccess.getConceptStatementBodyAccess().getNothingNothingKeyword_3_1_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "nothing", true, "nothing");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11088:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:11088:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:11089:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:11089:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:11090:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:11090:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            // InternalKim.g:11091:13: lv_parents_16_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
            	              												
            	            }
            	            pushFollow(FOLLOW_129);
            	            lv_parents_16_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													add(
            	              														current,
            	              														"parents",
            	              														lv_parents_16_0,
            	              														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              													afterParserOrEnumRuleCall();
            	              												
            	            }

            	            }


            	            }

            	            // InternalKim.g:11108:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            loop238:
            	            do {
            	                int alt238=2;
            	                int LA238_0 = input.LA(1);

            	                if ( (LA238_0==27||(LA238_0>=161 && LA238_0<=162)) ) {
            	                    alt238=1;
            	                }


            	                switch (alt238) {
            	            	case 1 :
            	            	    // InternalKim.g:11109:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    // InternalKim.g:11109:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
            	            	    // InternalKim.g:11110:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    {
            	            	    // InternalKim.g:11110:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    // InternalKim.g:11111:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    {
            	            	    // InternalKim.g:11111:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    int alt237=3;
            	            	    switch ( input.LA(1) ) {
            	            	    case 27:
            	            	        {
            	            	        alt237=1;
            	            	        }
            	            	        break;
            	            	    case 161:
            	            	        {
            	            	        alt237=2;
            	            	        }
            	            	        break;
            	            	    case 162:
            	            	        {
            	            	        alt237=3;
            	            	        }
            	            	        break;
            	            	    default:
            	            	        if (state.backtracking>0) {state.failed=true; return current;}
            	            	        NoViableAltException nvae =
            	            	            new NoViableAltException("", 237, 0, input);

            	            	        throw nvae;
            	            	    }

            	            	    switch (alt237) {
            	            	        case 1 :
            	            	            // InternalKim.g:11112:15: lv_connectors_17_1= ','
            	            	            {
            	            	            lv_connectors_17_1=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_1, grammarAccess.getConceptStatementBodyAccess().getConnectorsCommaKeyword_3_1_1_1_1_0_0_0());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_1, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 2 :
            	            	            // InternalKim.g:11123:15: lv_connectors_17_2= 'or'
            	            	            {
            	            	            lv_connectors_17_2=(Token)match(input,161,FOLLOW_8); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_2, grammarAccess.getConceptStatementBodyAccess().getConnectorsOrKeyword_3_1_1_1_1_0_0_1());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_2, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 3 :
            	            	            // InternalKim.g:11134:15: lv_connectors_17_3= 'and'
            	            	            {
            	            	            lv_connectors_17_3=(Token)match(input,162,FOLLOW_8); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_3, grammarAccess.getConceptStatementBodyAccess().getConnectorsAndKeyword_3_1_1_1_1_0_0_2());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_3, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;

            	            	    }


            	            	    }


            	            	    }

            	            	    // InternalKim.g:11147:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:11148:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:11148:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:11149:14: lv_parents_18_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
            	            	      													
            	            	    }
            	            	    pushFollow(FOLLOW_129);
            	            	    lv_parents_18_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      														if (current==null) {
            	            	      															current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      														}
            	            	      														add(
            	            	      															current,
            	            	      															"parents",
            	            	      															lv_parents_18_0,
            	            	      															"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      														afterParserOrEnumRuleCall();
            	            	      													
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop238;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:11175:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:11175:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:11176:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:11176:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:11177:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:11180:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:11180:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11180:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt242=2;
            	    int LA242_0 = input.LA(1);

            	    if ( (LA242_0==177) ) {
            	        alt242=1;
            	    }
            	    else if ( (LA242_0==178) ) {
            	        alt242=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 242, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt242) {
            	        case 1 :
            	            // InternalKim.g:11180:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            {
            	            // InternalKim.g:11180:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            // InternalKim.g:11181:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            {
            	            otherlv_19=(Token)match(input,177,FOLLOW_8); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_19, grammarAccess.getConceptStatementBodyAccess().getExposesKeyword_3_2_0_0());
            	              									
            	            }
            	            // InternalKim.g:11185:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
            	            // InternalKim.g:11186:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            {
            	            // InternalKim.g:11186:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            // InternalKim.g:11187:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_130);
            	            lv_contextualizedTraits_20_0=ruleObservableSemantics();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizedTraits",
            	              													lv_contextualizedTraits_20_0,
            	              													"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11204:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            loop240:
            	            do {
            	                int alt240=2;
            	                int LA240_0 = input.LA(1);

            	                if ( (LA240_0==27) ) {
            	                    alt240=1;
            	                }


            	                switch (alt240) {
            	            	case 1 :
            	            	    // InternalKim.g:11205:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    {
            	            	    otherlv_21=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_21, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_0_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:11209:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    // InternalKim.g:11210:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    {
            	            	    // InternalKim.g:11210:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    // InternalKim.g:11211:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_130);
            	            	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizedTraits",
            	            	      														lv_contextualizedTraits_22_0,
            	            	      														"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop240;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11231:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:11231:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:11232:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:11232:10: ( (lv_specific_23_0= 'exposing' ) )
            	            // InternalKim.g:11233:11: (lv_specific_23_0= 'exposing' )
            	            {
            	            // InternalKim.g:11233:11: (lv_specific_23_0= 'exposing' )
            	            // InternalKim.g:11234:12: lv_specific_23_0= 'exposing'
            	            {
            	            lv_specific_23_0=(Token)match(input,178,FOLLOW_8); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_specific_23_0, grammarAccess.getConceptStatementBodyAccess().getSpecificExposingKeyword_3_2_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "specific", true, "exposing");
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11246:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:11247:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:11247:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            // InternalKim.g:11248:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_130);
            	            lv_contextualizesTraits_24_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizesTraits",
            	              													lv_contextualizesTraits_24_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11265:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            loop241:
            	            do {
            	                int alt241=2;
            	                int LA241_0 = input.LA(1);

            	                if ( (LA241_0==27) ) {
            	                    alt241=1;
            	                }


            	                switch (alt241) {
            	            	case 1 :
            	            	    // InternalKim.g:11266:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_25=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_25, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_1_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:11270:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:11271:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:11271:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:11272:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_130);
            	            	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizesTraits",
            	            	      														lv_contextualizesTraits_26_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop241;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:11297:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11297:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:11298:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:11298:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:11299:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:11302:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:11302:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11302:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    // InternalKim.g:11302:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    {
            	    otherlv_27=(Token)match(input,179,FOLLOW_131); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getConceptStatementBodyAccess().getDefinesKeyword_3_3_0());
            	      								
            	    }
            	    // InternalKim.g:11306:9: ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    int alt243=2;
            	    int LA243_0 = input.LA(1);

            	    if ( (LA243_0==180) ) {
            	        alt243=1;
            	    }
            	    else if ( ((LA243_0>=RULE_UPPERCASE_ID && LA243_0<=RULE_LOWERCASE_ID)||LA243_0==RULE_CAMELCASE_ID||LA243_0==RULE_LOWERCASE_DASHID||LA243_0==38||(LA243_0>=130 && LA243_0<=131)||(LA243_0>=139 && LA243_0<=140)||(LA243_0>=142 && LA243_0<=160)) ) {
            	        alt243=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 243, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt243) {
            	        case 1 :
            	            // InternalKim.g:11307:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
            	            {
            	            // InternalKim.g:11307:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
            	            // InternalKim.g:11308:11: otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
            	            {
            	            otherlv_28=(Token)match(input,180,FOLLOW_132); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_28, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_3_1_0_0());
            	              										
            	            }
            	            // InternalKim.g:11312:11: ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
            	            // InternalKim.g:11313:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
            	            {
            	            // InternalKim.g:11313:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
            	            // InternalKim.g:11314:13: lv_definedAuthority_29_0= RULE_UPPERCASE_PATH
            	            {
            	            lv_definedAuthority_29_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_124); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_definedAuthority_29_0, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_PATHTerminalRuleCall_3_3_1_0_1_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													setWithLastConsumed(
            	              														current,
            	              														"definedAuthority",
            	              														lv_definedAuthority_29_0,
            	              														"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	              												
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11332:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:11332:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            // InternalKim.g:11333:11: (lv_upperConcept_30_0= ruleConcept )
            	            {
            	            // InternalKim.g:11333:11: (lv_upperConcept_30_0= ruleConcept )
            	            // InternalKim.g:11334:12: lv_upperConcept_30_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_124);
            	            lv_upperConcept_30_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												set(
            	              													current,
            	              													"upperConcept",
            	              													lv_upperConcept_30_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:11358:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:11358:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    // InternalKim.g:11359:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:11359:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    // InternalKim.g:11360:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:11363:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    // InternalKim.g:11363:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11363:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    // InternalKim.g:11363:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    {
            	    otherlv_31=(Token)match(input,181,FOLLOW_133); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getConceptStatementBodyAccess().getRequiresKeyword_3_4_0());
            	      								
            	    }
            	    // InternalKim.g:11367:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
            	    // InternalKim.g:11368:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    {
            	    // InternalKim.g:11368:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    // InternalKim.g:11369:11: lv_requirements_32_0= ruleIdentityRequirement
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_requirements_32_0=ruleIdentityRequirement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"requirements",
            	      												lv_requirements_32_0,
            	      												"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:11386:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    loop244:
            	    do {
            	        int alt244=2;
            	        int LA244_0 = input.LA(1);

            	        if ( (LA244_0==27) ) {
            	            alt244=1;
            	        }


            	        switch (alt244) {
            	    	case 1 :
            	    	    // InternalKim.g:11387:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    {
            	    	    otherlv_33=(Token)match(input,27,FOLLOW_133); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_33, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_4_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:11391:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    // InternalKim.g:11392:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    {
            	    	    // InternalKim.g:11392:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    // InternalKim.g:11393:12: lv_requirements_34_0= ruleIdentityRequirement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_130);
            	    	    lv_requirements_34_0=ruleIdentityRequirement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"requirements",
            	    	      													lv_requirements_34_0,
            	    	      													"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop244;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:11417:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11417:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11418:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:11418:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11419:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:11422:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11422:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11422:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11422:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_35=(Token)match(input,182,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_35, grammarAccess.getConceptStatementBodyAccess().getDescribesKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:11426:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11427:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11427:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    // InternalKim.g:11428:11: lv_describedQuality_36_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_describedQuality_36_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedQuality",
            	      												lv_describedQuality_36_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:11451:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11451:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11452:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:11452:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11453:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:11456:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11456:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11456:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11456:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_37=(Token)match(input,183,FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_37, grammarAccess.getConceptStatementBodyAccess().getIncreasesKeyword_3_6_0());
            	      								
            	    }
            	    otherlv_38=(Token)match(input,98,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_6_1());
            	      								
            	    }
            	    // InternalKim.g:11464:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11465:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11465:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    // InternalKim.g:11466:11: lv_describedProportionality_39_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_describedProportionality_39_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedProportionality",
            	      												lv_describedProportionality_39_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:11489:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11489:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11490:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalKim.g:11490:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11491:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
            	    // InternalKim.g:11494:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11494:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11494:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11494:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_40=(Token)match(input,184,FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_40, grammarAccess.getConceptStatementBodyAccess().getDecreasesKeyword_3_7_0());
            	      								
            	    }
            	    otherlv_41=(Token)match(input,98,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_41, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_7_1());
            	      								
            	    }
            	    // InternalKim.g:11502:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11503:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11503:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    // InternalKim.g:11504:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedInverseProportionalityQuality",
            	      												lv_describedInverseProportionalityQuality_42_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalKim.g:11527:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11527:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11528:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalKim.g:11528:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11529:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
            	    // InternalKim.g:11532:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11532:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11532:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11532:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_43=(Token)match(input,185,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getConceptStatementBodyAccess().getMarksKeyword_3_8_0());
            	      								
            	    }
            	    // InternalKim.g:11536:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11537:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11537:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    // InternalKim.g:11538:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedNonzeroQuality",
            	      												lv_describedNonzeroQuality_44_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalKim.g:11561:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11561:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11562:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalKim.g:11562:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11563:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
            	    // InternalKim.g:11566:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11566:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11566:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11566:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_45=(Token)match(input,186,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_45, grammarAccess.getConceptStatementBodyAccess().getClassifiesKeyword_3_9_0());
            	      								
            	    }
            	    // InternalKim.g:11570:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11571:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11571:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    // InternalKim.g:11572:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_classifiesQuality_46_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"classifiesQuality",
            	      												lv_classifiesQuality_46_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalKim.g:11595:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11595:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11596:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalKim.g:11596:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11597:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
            	    // InternalKim.g:11600:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11600:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11600:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11600:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_47=(Token)match(input,187,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_47, grammarAccess.getConceptStatementBodyAccess().getDiscretizesKeyword_3_10_0());
            	      								
            	    }
            	    // InternalKim.g:11604:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11605:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11605:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    // InternalKim.g:11606:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_discretizesQuality_48_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"discretizesQuality",
            	      												lv_discretizesQuality_48_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalKim.g:11629:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:11629:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:11630:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalKim.g:11630:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:11631:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
            	    // InternalKim.g:11634:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:11634:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11634:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:11634:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_49=(Token)match(input,188,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_49, grammarAccess.getConceptStatementBodyAccess().getInheritsKeyword_3_11_0());
            	      								
            	    }
            	    // InternalKim.g:11638:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11639:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11639:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    // InternalKim.g:11640:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"actuallyInheritedTraits",
            	      												lv_actuallyInheritedTraits_50_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:11657:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    loop245:
            	    do {
            	        int alt245=2;
            	        int LA245_0 = input.LA(1);

            	        if ( (LA245_0==27) ) {
            	            alt245=1;
            	        }


            	        switch (alt245) {
            	    	case 1 :
            	    	    // InternalKim.g:11658:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_51=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_51, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:11662:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:11663:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:11663:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:11664:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_130);
            	    	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"actuallyInheritedTraits",
            	    	      													lv_actuallyInheritedTraits_52_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop245;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalKim.g:11688:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:11688:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:11689:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
            	    }
            	    // InternalKim.g:11689:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:11690:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
            	    // InternalKim.g:11693:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:11693:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11693:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:11693:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    otherlv_53=(Token)match(input,189,FOLLOW_134); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_53, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_12_0());
            	      								
            	    }
            	    otherlv_54=(Token)match(input,190,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_54, grammarAccess.getConceptStatementBodyAccess().getRoleKeyword_3_12_1());
            	      								
            	    }
            	    // InternalKim.g:11701:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11702:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11702:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    // InternalKim.g:11703:11: lv_roles_55_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_roles_55_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"roles",
            	      												lv_roles_55_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:11720:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
            	    loop246:
            	    do {
            	        int alt246=2;
            	        int LA246_0 = input.LA(1);

            	        if ( (LA246_0==27) ) {
            	            alt246=1;
            	        }


            	        switch (alt246) {
            	    	case 1 :
            	    	    // InternalKim.g:11721:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_56=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_56, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:11725:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:11726:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:11726:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:11727:12: lv_roles_57_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_135);
            	    	    lv_roles_57_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"roles",
            	    	      													lv_roles_57_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop246;
            	        }
            	    } while (true);

            	    // InternalKim.g:11745:9: (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
            	    int alt248=2;
            	    int LA248_0 = input.LA(1);

            	    if ( (LA248_0==191) ) {
            	        alt248=1;
            	    }
            	    switch (alt248) {
            	        case 1 :
            	            // InternalKim.g:11746:10: otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_58=(Token)match(input,191,FOLLOW_8); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_58, grammarAccess.getConceptStatementBodyAccess().getTargetingKeyword_3_12_4_0());
            	              									
            	            }
            	            // InternalKim.g:11750:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:11751:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:11751:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            // InternalKim.g:11752:12: lv_targetObservables_59_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_136);
            	            lv_targetObservables_59_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"targetObservables",
            	              													lv_targetObservables_59_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11769:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            loop247:
            	            do {
            	                int alt247=2;
            	                int LA247_0 = input.LA(1);

            	                if ( (LA247_0==27) ) {
            	                    alt247=1;
            	                }


            	                switch (alt247) {
            	            	case 1 :
            	            	    // InternalKim.g:11770:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_60=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_60, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_4_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:11774:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:11775:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:11775:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:11776:13: lv_targetObservables_61_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_136);
            	            	    lv_targetObservables_61_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"targetObservables",
            	            	      														lv_targetObservables_61_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop247;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:11795:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:11796:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_62=(Token)match(input,48,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_62, grammarAccess.getConceptStatementBodyAccess().getInKeyword_3_12_5_0());
            	      									
            	    }
            	    // InternalKim.g:11800:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11801:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11801:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    // InternalKim.g:11802:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_restrictedObservables_63_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      												}
            	      												add(
            	      													current,
            	      													"restrictedObservables",
            	      													lv_restrictedObservables_63_0,
            	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }

            	    // InternalKim.g:11819:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    loop249:
            	    do {
            	        int alt249=2;
            	        int LA249_0 = input.LA(1);

            	        if ( (LA249_0==27) ) {
            	            alt249=1;
            	        }


            	        switch (alt249) {
            	    	case 1 :
            	    	    // InternalKim.g:11820:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_64=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_64, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_5_2_0());
            	    	      										
            	    	    }
            	    	    // InternalKim.g:11824:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:11825:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:11825:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:11826:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
            	    	      												
            	    	    }
            	    	    pushFollow(FOLLOW_130);
            	    	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      													if (current==null) {
            	    	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      													}
            	    	      													add(
            	    	      														current,
            	    	      														"restrictedObservables",
            	    	      														lv_restrictedObservables_65_0,
            	    	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      													afterParserOrEnumRuleCall();
            	    	      												
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop249;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalKim.g:11851:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    {
            	    // InternalKim.g:11851:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    // InternalKim.g:11852:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
            	    }
            	    // InternalKim.g:11852:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    // InternalKim.g:11853:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
            	    // InternalKim.g:11856:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    // InternalKim.g:11856:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11856:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    // InternalKim.g:11856:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    {
            	    otherlv_66=(Token)match(input,192,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_66, grammarAccess.getConceptStatementBodyAccess().getConfersKeyword_3_13_0());
            	      								
            	    }
            	    // InternalKim.g:11860:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11861:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11861:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    // InternalKim.g:11862:11: lv_conferredTraits_67_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_conferredTraits_67_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"conferredTraits",
            	      												lv_conferredTraits_67_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:11879:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
            	    loop250:
            	    do {
            	        int alt250=2;
            	        int LA250_0 = input.LA(1);

            	        if ( (LA250_0==27) ) {
            	            alt250=1;
            	        }


            	        switch (alt250) {
            	    	case 1 :
            	    	    // InternalKim.g:11880:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_68=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_68, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:11884:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:11885:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:11885:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:11886:12: lv_conferredTraits_69_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_137);
            	    	    lv_conferredTraits_69_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"conferredTraits",
            	    	      													lv_conferredTraits_69_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop250;
            	        }
            	    } while (true);

            	    // InternalKim.g:11904:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    int alt252=2;
            	    int LA252_0 = input.LA(1);

            	    if ( (LA252_0==36) ) {
            	        alt252=1;
            	    }
            	    switch (alt252) {
            	        case 1 :
            	            // InternalKim.g:11905:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_70=(Token)match(input,36,FOLLOW_8); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_70, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_13_3_0());
            	              									
            	            }
            	            // InternalKim.g:11909:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:11910:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:11910:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            // InternalKim.g:11911:12: lv_conferredTargets_71_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_130);
            	            lv_conferredTargets_71_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"conferredTargets",
            	              													lv_conferredTargets_71_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11928:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            loop251:
            	            do {
            	                int alt251=2;
            	                int LA251_0 = input.LA(1);

            	                if ( (LA251_0==27) ) {
            	                    alt251=1;
            	                }


            	                switch (alt251) {
            	            	case 1 :
            	            	    // InternalKim.g:11929:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_72=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_72, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_3_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:11933:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:11934:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:11934:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:11935:13: lv_conferredTargets_73_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_130);
            	            	    lv_conferredTargets_73_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"conferredTargets",
            	            	      														lv_conferredTargets_73_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop251;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalKim.g:11960:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11960:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11961:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
            	    }
            	    // InternalKim.g:11961:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11962:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
            	    // InternalKim.g:11965:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11965:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11965:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11965:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    {
            	    // InternalKim.g:11965:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
            	    int alt253=3;
            	    switch ( input.LA(1) ) {
            	    case 193:
            	        {
            	        alt253=1;
            	        }
            	        break;
            	    case 194:
            	        {
            	        alt253=2;
            	        }
            	        break;
            	    case 195:
            	        {
            	        alt253=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 253, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt253) {
            	        case 1 :
            	            // InternalKim.g:11966:10: otherlv_74= 'part'
            	            {
            	            otherlv_74=(Token)match(input,193,FOLLOW_109); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_74, grammarAccess.getConceptStatementBodyAccess().getPartKeyword_3_14_0_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11971:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            {
            	            // InternalKim.g:11971:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            // InternalKim.g:11972:11: (lv_constituent_75_0= 'constituent' )
            	            {
            	            // InternalKim.g:11972:11: (lv_constituent_75_0= 'constituent' )
            	            // InternalKim.g:11973:12: lv_constituent_75_0= 'constituent'
            	            {
            	            lv_constituent_75_0=(Token)match(input,194,FOLLOW_109); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constituent_75_0, grammarAccess.getConceptStatementBodyAccess().getConstituentConstituentKeyword_3_14_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constituent", true, "constituent");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:11986:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            {
            	            // InternalKim.g:11986:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            // InternalKim.g:11987:11: (lv_constitutes_76_0= 'consists' )
            	            {
            	            // InternalKim.g:11987:11: (lv_constitutes_76_0= 'consists' )
            	            // InternalKim.g:11988:12: lv_constitutes_76_0= 'consists'
            	            {
            	            lv_constitutes_76_0=(Token)match(input,195,FOLLOW_109); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constitutes_76_0, grammarAccess.getConceptStatementBodyAccess().getConstitutesConsistsKeyword_3_14_0_2_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constitutes", true, "consists");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:12001:9: ( (lv_partOf_77_0= 'of' ) )
            	    // InternalKim.g:12002:10: (lv_partOf_77_0= 'of' )
            	    {
            	    // InternalKim.g:12002:10: (lv_partOf_77_0= 'of' )
            	    // InternalKim.g:12003:11: lv_partOf_77_0= 'of'
            	    {
            	    lv_partOf_77_0=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_partOf_77_0, grammarAccess.getConceptStatementBodyAccess().getPartOfOfKeyword_3_14_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											setWithLastConsumed(current, "partOf", true, "of");
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12015:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12016:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12016:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    // InternalKim.g:12017:11: lv_whole_78_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_whole_78_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"whole",
            	      												lv_whole_78_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalKim.g:12040:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12040:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12041:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
            	    }
            	    // InternalKim.g:12041:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12042:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
            	    // InternalKim.g:12045:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12045:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12045:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12045:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_79=(Token)match(input,196,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_79, grammarAccess.getConceptStatementBodyAccess().getCreatesKeyword_3_15_0());
            	      								
            	    }
            	    // InternalKim.g:12049:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12050:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12050:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    // InternalKim.g:12051:11: lv_creates_80_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_creates_80_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"creates",
            	      												lv_creates_80_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12068:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    loop254:
            	    do {
            	        int alt254=2;
            	        int LA254_0 = input.LA(1);

            	        if ( (LA254_0==27) ) {
            	            alt254=1;
            	        }


            	        switch (alt254) {
            	    	case 1 :
            	    	    // InternalKim.g:12069:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_81=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_81, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_15_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12073:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12074:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12074:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12075:12: lv_creates_82_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_130);
            	    	    lv_creates_82_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"creates",
            	    	      													lv_creates_82_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop254;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalKim.g:12099:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12099:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    // InternalKim.g:12100:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
            	    }
            	    // InternalKim.g:12100:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    // InternalKim.g:12101:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
            	    // InternalKim.g:12104:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    // InternalKim.g:12104:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12104:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    // InternalKim.g:12104:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    {
            	    otherlv_83=(Token)match(input,197,FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_83, grammarAccess.getConceptStatementBodyAccess().getAppliesKeyword_3_16_0());
            	      								
            	    }
            	    otherlv_84=(Token)match(input,36,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_84, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_16_1());
            	      								
            	    }
            	    // InternalKim.g:12112:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
            	    // InternalKim.g:12113:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    {
            	    // InternalKim.g:12113:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    // InternalKim.g:12114:11: lv_traitTargets_85_0= ruleApplicableTarget
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_traitTargets_85_0=ruleApplicableTarget();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"traitTargets",
            	      												lv_traitTargets_85_0,
            	      												"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12131:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    loop255:
            	    do {
            	        int alt255=2;
            	        int LA255_0 = input.LA(1);

            	        if ( (LA255_0==27) ) {
            	            alt255=1;
            	        }


            	        switch (alt255) {
            	    	case 1 :
            	    	    // InternalKim.g:12132:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    {
            	    	    otherlv_86=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_86, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_16_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12136:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    // InternalKim.g:12137:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    {
            	    	    // InternalKim.g:12137:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    // InternalKim.g:12138:12: lv_traitTargets_87_0= ruleApplicableTarget
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_130);
            	    	    lv_traitTargets_87_0=ruleApplicableTarget();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"traitTargets",
            	    	      													lv_traitTargets_87_0,
            	    	      													"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop255;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalKim.g:12162:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12162:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12163:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
            	    }
            	    // InternalKim.g:12163:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12164:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
            	    // InternalKim.g:12167:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12167:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12167:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12167:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    {
            	    otherlv_88=(Token)match(input,198,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_88, grammarAccess.getConceptStatementBodyAccess().getLinksKeyword_3_17_0());
            	      								
            	    }
            	    // InternalKim.g:12171:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:12172:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:12172:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:12173:11: lv_domains_89_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_domains_89_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"domains",
            	      												lv_domains_89_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12190:9: ( ( 'to' )=>otherlv_90= 'to' )
            	    // InternalKim.g:12191:10: ( 'to' )=>otherlv_90= 'to'
            	    {
            	    otherlv_90=(Token)match(input,36,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_90, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_2());
            	      									
            	    }

            	    }

            	    // InternalKim.g:12197:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:12198:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:12198:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:12199:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_ranges_91_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"ranges",
            	      												lv_ranges_91_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12216:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    loop256:
            	    do {
            	        int alt256=2;
            	        int LA256_0 = input.LA(1);

            	        if ( (LA256_0==27) ) {
            	            alt256=1;
            	        }


            	        switch (alt256) {
            	    	case 1 :
            	    	    // InternalKim.g:12217:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_92=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_92, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_17_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12221:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:12222:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12222:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:12223:12: lv_domains_93_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_24);
            	    	    lv_domains_93_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"domains",
            	    	      													lv_domains_93_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:12240:10: ( ( 'to' )=>otherlv_94= 'to' )
            	    	    // InternalKim.g:12241:11: ( 'to' )=>otherlv_94= 'to'
            	    	    {
            	    	    otherlv_94=(Token)match(input,36,FOLLOW_8); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_94, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_4_2());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:12247:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:12248:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12248:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:12249:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_130);
            	    	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"ranges",
            	    	      													lv_ranges_95_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop256;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalKim.g:12273:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12273:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12274:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
            	    }
            	    // InternalKim.g:12274:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12275:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
            	    // InternalKim.g:12278:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12278:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12278:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12278:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_96=(Token)match(input,199,FOLLOW_109); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_96, grammarAccess.getConceptStatementBodyAccess().getInverseKeyword_3_18_0());
            	      								
            	    }
            	    otherlv_97=(Token)match(input,121,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getConceptStatementBodyAccess().getOfKeyword_3_18_1());
            	      								
            	    }
            	    // InternalKim.g:12286:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12287:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12287:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    // InternalKim.g:12288:11: lv_inverse_98_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_inverse_98_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"inverse",
            	      												lv_inverse_98_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalKim.g:12311:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12311:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12312:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
            	    }
            	    // InternalKim.g:12312:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12313:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
            	    // InternalKim.g:12316:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12316:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12316:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12316:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_99=(Token)match(input,200,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_99, grammarAccess.getConceptStatementBodyAccess().getAffectsKeyword_3_19_0());
            	      								
            	    }
            	    // InternalKim.g:12320:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12321:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12321:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    // InternalKim.g:12322:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_qualitiesAffected_100_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"qualitiesAffected",
            	      												lv_qualitiesAffected_100_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12339:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    loop257:
            	    do {
            	        int alt257=2;
            	        int LA257_0 = input.LA(1);

            	        if ( (LA257_0==27) ) {
            	            alt257=1;
            	        }


            	        switch (alt257) {
            	    	case 1 :
            	    	    // InternalKim.g:12340:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_101=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_101, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_19_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12344:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12345:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12345:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12346:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_130);
            	    	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"qualitiesAffected",
            	    	      													lv_qualitiesAffected_102_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop257;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalKim.g:12370:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12370:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    // InternalKim.g:12371:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
            	    }
            	    // InternalKim.g:12371:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    // InternalKim.g:12372:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
            	    // InternalKim.g:12375:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    // InternalKim.g:12375:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12375:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    // InternalKim.g:12375:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    {
            	    otherlv_103=(Token)match(input,189,FOLLOW_138); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_103, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_20_0());
            	      								
            	    }
            	    // InternalKim.g:12379:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
            	    int alt258=2;
            	    int LA258_0 = input.LA(1);

            	    if ( (LA258_0==97) ) {
            	        alt258=1;
            	    }
            	    switch (alt258) {
            	        case 1 :
            	            // InternalKim.g:12380:10: (lv_disjoint_104_0= 'disjoint' )
            	            {
            	            // InternalKim.g:12380:10: (lv_disjoint_104_0= 'disjoint' )
            	            // InternalKim.g:12381:11: lv_disjoint_104_0= 'disjoint'
            	            {
            	            lv_disjoint_104_0=(Token)match(input,97,FOLLOW_139); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_disjoint_104_0, grammarAccess.getConceptStatementBodyAccess().getDisjointDisjointKeyword_3_20_1_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              											}
            	              											setWithLastConsumed(current, "disjoint", true, "disjoint");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_105=(Token)match(input,111,FOLLOW_140); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_105, grammarAccess.getConceptStatementBodyAccess().getChildrenKeyword_3_20_2());
            	      								
            	    }
            	    // InternalKim.g:12397:9: ( (lv_children_106_0= ruleChildConcept ) )
            	    // InternalKim.g:12398:10: (lv_children_106_0= ruleChildConcept )
            	    {
            	    // InternalKim.g:12398:10: (lv_children_106_0= ruleChildConcept )
            	    // InternalKim.g:12399:11: lv_children_106_0= ruleChildConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_children_106_0=ruleChildConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"children",
            	      												lv_children_106_0,
            	      												"org.integratedmodelling.kim.Kim.ChildConcept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12416:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    loop259:
            	    do {
            	        int alt259=2;
            	        int LA259_0 = input.LA(1);

            	        if ( (LA259_0==27) ) {
            	            alt259=1;
            	        }


            	        switch (alt259) {
            	    	case 1 :
            	    	    // InternalKim.g:12417:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
            	    	    {
            	    	    otherlv_107=(Token)match(input,27,FOLLOW_140); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_107, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_20_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12421:10: ( (lv_children_108_0= ruleChildConcept ) )
            	    	    // InternalKim.g:12422:11: (lv_children_108_0= ruleChildConcept )
            	    	    {
            	    	    // InternalKim.g:12422:11: (lv_children_108_0= ruleChildConcept )
            	    	    // InternalKim.g:12423:12: lv_children_108_0= ruleChildConcept
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_130);
            	    	    lv_children_108_0=ruleChildConcept();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"children",
            	    	      													lv_children_108_0,
            	    	      													"org.integratedmodelling.kim.Kim.ChildConcept");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop259;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalKim.g:12447:4: ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12447:4: ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) )
            	    // InternalKim.g:12448:5: {...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
            	    }
            	    // InternalKim.g:12448:118: ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) )
            	    // InternalKim.g:12449:6: ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
            	    // InternalKim.g:12452:9: ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) )
            	    // InternalKim.g:12452:10: {...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12452:19: (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* )
            	    // InternalKim.g:12452:20: otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )*
            	    {
            	    otherlv_109=(Token)match(input,201,FOLLOW_141); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_109, grammarAccess.getConceptStatementBodyAccess().getImpliesKeyword_3_21_0());
            	      								
            	    }
            	    // InternalKim.g:12456:9: ( (lv_implications_110_0= ruleImplication ) )
            	    // InternalKim.g:12457:10: (lv_implications_110_0= ruleImplication )
            	    {
            	    // InternalKim.g:12457:10: (lv_implications_110_0= ruleImplication )
            	    // InternalKim.g:12458:11: lv_implications_110_0= ruleImplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_21_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_implications_110_0=ruleImplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"implications",
            	      												lv_implications_110_0,
            	      												"org.integratedmodelling.kim.Kim.Implication");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12475:9: (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )*
            	    loop260:
            	    do {
            	        int alt260=2;
            	        int LA260_0 = input.LA(1);

            	        if ( (LA260_0==27) ) {
            	            alt260=1;
            	        }


            	        switch (alt260) {
            	    	case 1 :
            	    	    // InternalKim.g:12476:10: otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) )
            	    	    {
            	    	    otherlv_111=(Token)match(input,27,FOLLOW_141); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_111, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_21_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12480:10: ( (lv_implications_112_0= ruleImplication ) )
            	    	    // InternalKim.g:12481:11: (lv_implications_112_0= ruleImplication )
            	    	    {
            	    	    // InternalKim.g:12481:11: (lv_implications_112_0= ruleImplication )
            	    	    // InternalKim.g:12482:12: lv_implications_112_0= ruleImplication
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_21_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_130);
            	    	    lv_implications_112_0=ruleImplication();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"implications",
            	    	      													lv_implications_112_0,
            	    	      													"org.integratedmodelling.kim.Kim.Implication");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop260;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 23 :
            	    // InternalKim.g:12506:4: ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12506:4: ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
            	    // InternalKim.g:12507:5: {...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
            	    }
            	    // InternalKim.g:12507:118: ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            	    // InternalKim.g:12508:6: ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
            	    // InternalKim.g:12511:9: ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) )
            	    // InternalKim.g:12511:10: {...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12511:19: (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) )
            	    // InternalKim.g:12511:20: otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) )
            	    {
            	    otherlv_113=(Token)match(input,202,FOLLOW_142); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_113, grammarAccess.getConceptStatementBodyAccess().getUsesKeyword_3_22_0());
            	      								
            	    }
            	    otherlv_114=(Token)match(input,180,FOLLOW_108); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_114, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_22_1());
            	      								
            	    }
            	    // InternalKim.g:12519:9: ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) )
            	    // InternalKim.g:12520:10: ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) )
            	    {
            	    // InternalKim.g:12520:10: ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) )
            	    // InternalKim.g:12521:11: (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH )
            	    {
            	    // InternalKim.g:12521:11: (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH )
            	    int alt261=2;
            	    int LA261_0 = input.LA(1);

            	    if ( (LA261_0==RULE_UPPERCASE_ID) ) {
            	        alt261=1;
            	    }
            	    else if ( (LA261_0==RULE_UPPERCASE_PATH) ) {
            	        alt261=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 261, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt261) {
            	        case 1 :
            	            // InternalKim.g:12522:12: lv_authorities_115_1= RULE_UPPERCASE_ID
            	            {
            	            lv_authorities_115_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_124); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_authorities_115_1, grammarAccess.getConceptStatementBodyAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_3_22_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												addWithLastConsumed(
            	              													current,
            	              													"authorities",
            	              													lv_authorities_115_1,
            	              													"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:12537:12: lv_authorities_115_2= RULE_UPPERCASE_PATH
            	            {
            	            lv_authorities_115_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_124); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_authorities_115_2, grammarAccess.getConceptStatementBodyAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_3_22_2_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												addWithLastConsumed(
            	              													current,
            	              													"authorities",
            	              													lv_authorities_115_2,
            	              													"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 24 :
            	    // InternalKim.g:12560:4: ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12560:4: ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) )
            	    // InternalKim.g:12561:5: {...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23)");
            	    }
            	    // InternalKim.g:12561:118: ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) )
            	    // InternalKim.g:12562:6: ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23);
            	    // InternalKim.g:12565:9: ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) )
            	    // InternalKim.g:12565:10: {...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12565:19: (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) )
            	    // InternalKim.g:12565:20: otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) )
            	    {
            	    otherlv_116=(Token)match(input,42,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_116, grammarAccess.getConceptStatementBodyAccess().getMetadataKeyword_3_23_0());
            	      								
            	    }
            	    // InternalKim.g:12569:9: ( (lv_metadata_117_0= ruleMetadata ) )
            	    // InternalKim.g:12570:10: (lv_metadata_117_0= ruleMetadata )
            	    {
            	    // InternalKim.g:12570:10: (lv_metadata_117_0= ruleMetadata )
            	    // InternalKim.g:12571:11: lv_metadata_117_0= ruleMetadata
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMetadataParserRuleCall_3_23_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_metadata_117_0=ruleMetadata();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"metadata",
            	      												lv_metadata_117_0,
            	      												"org.integratedmodelling.kim.Kim.Metadata");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 25 :
            	    // InternalKim.g:12594:4: ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) )
            	    {
            	    // InternalKim.g:12594:4: ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) )
            	    // InternalKim.g:12595:5: {...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24)");
            	    }
            	    // InternalKim.g:12595:118: ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ )
            	    // InternalKim.g:12596:6: ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24);
            	    // InternalKim.g:12599:9: ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+
            	    int cnt262=0;
            	    loop262:
            	    do {
            	        int alt262=2;
            	        alt262 = dfa262.predict(input);
            	        switch (alt262) {
            	    	case 1 :
            	    	    // InternalKim.g:12599:10: {...}? => ( (lv_properties_118_0= rulePropertyStatement ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:12599:19: ( (lv_properties_118_0= rulePropertyStatement ) )
            	    	    // InternalKim.g:12599:20: (lv_properties_118_0= rulePropertyStatement )
            	    	    {
            	    	    // InternalKim.g:12599:20: (lv_properties_118_0= rulePropertyStatement )
            	    	    // InternalKim.g:12600:10: lv_properties_118_0= rulePropertyStatement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_24_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_124);
            	    	    lv_properties_118_0=rulePropertyStatement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"properties",
            	    	      											lv_properties_118_0,
            	    	      											"org.integratedmodelling.kim.Kim.PropertyStatement");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt262 >= 1 ) break loop262;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(262, input);
            	                throw eee;
            	        }
            	        cnt262++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop263;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatementBody"


    // $ANTLR start "entryRuleImplication"
    // InternalKim.g:12636:1: entryRuleImplication returns [EObject current=null] : iv_ruleImplication= ruleImplication EOF ;
    public final EObject entryRuleImplication() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplication = null;


        try {
            // InternalKim.g:12636:52: (iv_ruleImplication= ruleImplication EOF )
            // InternalKim.g:12637:2: iv_ruleImplication= ruleImplication EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImplication=ruleImplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplication; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplication"


    // $ANTLR start "ruleImplication"
    // InternalKim.g:12643:1: ruleImplication returns [EObject current=null] : ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleImplication() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_quantifier_0_0 = null;

        EObject lv_concept_1_0 = null;

        EObject lv_target_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12649:2: ( ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:12650:2: ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:12650:2: ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:12651:3: ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:12651:3: ( (lv_quantifier_0_0= ruleQuantification ) )?
            int alt264=2;
            alt264 = dfa264.predict(input);
            switch (alt264) {
                case 1 :
                    // InternalKim.g:12652:4: (lv_quantifier_0_0= ruleQuantification )
                    {
                    // InternalKim.g:12652:4: (lv_quantifier_0_0= ruleQuantification )
                    // InternalKim.g:12653:5: lv_quantifier_0_0= ruleQuantification
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getImplicationAccess().getQuantifierQuantificationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_8);
                    lv_quantifier_0_0=ruleQuantification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getImplicationRule());
                      					}
                      					set(
                      						current,
                      						"quantifier",
                      						lv_quantifier_0_0,
                      						"org.integratedmodelling.kim.Kim.Quantification");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:12670:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
            // InternalKim.g:12671:4: (lv_concept_1_0= ruleConceptDeclaration )
            {
            // InternalKim.g:12671:4: (lv_concept_1_0= ruleConceptDeclaration )
            // InternalKim.g:12672:5: lv_concept_1_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImplicationAccess().getConceptConceptDeclarationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_143);
            lv_concept_1_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImplicationRule());
              					}
              					set(
              						current,
              						"concept",
              						lv_concept_1_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:12689:3: (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )?
            int alt265=2;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==25) ) {
                alt265=1;
            }
            switch (alt265) {
                case 1 :
                    // InternalKim.g:12690:4: otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) )
                    {
                    otherlv_2=(Token)match(input,25,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImplicationAccess().getAsKeyword_2_0());
                      			
                    }
                    // InternalKim.g:12694:4: ( (lv_target_3_0= ruleConceptDeclaration ) )
                    // InternalKim.g:12695:5: (lv_target_3_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:12695:5: (lv_target_3_0= ruleConceptDeclaration )
                    // InternalKim.g:12696:6: lv_target_3_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImplicationAccess().getTargetConceptDeclarationParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_target_3_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImplicationRule());
                      						}
                      						set(
                      							current,
                      							"target",
                      							lv_target_3_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplication"


    // $ANTLR start "entryRuleQuantification"
    // InternalKim.g:12718:1: entryRuleQuantification returns [EObject current=null] : iv_ruleQuantification= ruleQuantification EOF ;
    public final EObject entryRuleQuantification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuantification = null;


        try {
            // InternalKim.g:12718:55: (iv_ruleQuantification= ruleQuantification EOF )
            // InternalKim.g:12719:2: iv_ruleQuantification= ruleQuantification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuantificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQuantification=ruleQuantification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuantification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuantification"


    // $ANTLR start "ruleQuantification"
    // InternalKim.g:12725:1: ruleQuantification returns [EObject current=null] : ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? ) ;
    public final EObject ruleQuantification() throws RecognitionException {
        EObject current = null;

        Token lv_only_1_0=null;
        Token lv_exactly_2_0=null;
        Token otherlv_3=null;
        Token lv_atLeast_4_0=null;
        Token lv_atMost_5_0=null;
        Token lv_cardinality_6_0=null;
        Token otherlv_7=null;
        Token lv_orMore_8_0=null;


        	enterRule();

        try {
            // InternalKim.g:12731:2: ( ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? ) )
            // InternalKim.g:12732:2: ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? )
            {
            // InternalKim.g:12732:2: ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? )
            // InternalKim.g:12733:3: () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )?
            {
            // InternalKim.g:12733:3: ()
            // InternalKim.g:12734:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getQuantificationAccess().getQuantificationAction_0(),
              					current);
              			
            }

            }

            // InternalKim.g:12743:3: ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )?
            int alt269=3;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==203) ) {
                alt269=1;
            }
            else if ( (LA269_0==RULE_INT||(LA269_0>=204 && LA269_0<=205)) ) {
                alt269=2;
            }
            switch (alt269) {
                case 1 :
                    // InternalKim.g:12744:4: ( (lv_only_1_0= 'only' ) )
                    {
                    // InternalKim.g:12744:4: ( (lv_only_1_0= 'only' ) )
                    // InternalKim.g:12745:5: (lv_only_1_0= 'only' )
                    {
                    // InternalKim.g:12745:5: (lv_only_1_0= 'only' )
                    // InternalKim.g:12746:6: lv_only_1_0= 'only'
                    {
                    lv_only_1_0=(Token)match(input,203,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_only_1_0, grammarAccess.getQuantificationAccess().getOnlyOnlyKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getQuantificationRule());
                      						}
                      						setWithLastConsumed(current, "only", true, "only");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12759:4: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? )
                    {
                    // InternalKim.g:12759:4: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? )
                    // InternalKim.g:12760:5: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )?
                    {
                    // InternalKim.g:12760:5: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )?
                    int alt267=3;
                    int LA267_0 = input.LA(1);

                    if ( (LA267_0==204) ) {
                        alt267=1;
                    }
                    else if ( (LA267_0==205) ) {
                        alt267=2;
                    }
                    switch (alt267) {
                        case 1 :
                            // InternalKim.g:12761:6: ( (lv_exactly_2_0= 'exactly' ) )
                            {
                            // InternalKim.g:12761:6: ( (lv_exactly_2_0= 'exactly' ) )
                            // InternalKim.g:12762:7: (lv_exactly_2_0= 'exactly' )
                            {
                            // InternalKim.g:12762:7: (lv_exactly_2_0= 'exactly' )
                            // InternalKim.g:12763:8: lv_exactly_2_0= 'exactly'
                            {
                            lv_exactly_2_0=(Token)match(input,204,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exactly_2_0, grammarAccess.getQuantificationAccess().getExactlyExactlyKeyword_1_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getQuantificationRule());
                              								}
                              								setWithLastConsumed(current, "exactly", true, "exactly");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:12776:6: (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) )
                            {
                            // InternalKim.g:12776:6: (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) )
                            // InternalKim.g:12777:7: otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) )
                            {
                            otherlv_3=(Token)match(input,205,FOLLOW_144); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getQuantificationAccess().getAtKeyword_1_1_0_1_0());
                              						
                            }
                            // InternalKim.g:12781:7: ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) )
                            int alt266=2;
                            int LA266_0 = input.LA(1);

                            if ( (LA266_0==206) ) {
                                alt266=1;
                            }
                            else if ( (LA266_0==207) ) {
                                alt266=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 266, 0, input);

                                throw nvae;
                            }
                            switch (alt266) {
                                case 1 :
                                    // InternalKim.g:12782:8: ( (lv_atLeast_4_0= 'least' ) )
                                    {
                                    // InternalKim.g:12782:8: ( (lv_atLeast_4_0= 'least' ) )
                                    // InternalKim.g:12783:9: (lv_atLeast_4_0= 'least' )
                                    {
                                    // InternalKim.g:12783:9: (lv_atLeast_4_0= 'least' )
                                    // InternalKim.g:12784:10: lv_atLeast_4_0= 'least'
                                    {
                                    lv_atLeast_4_0=(Token)match(input,206,FOLLOW_75); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atLeast_4_0, grammarAccess.getQuantificationAccess().getAtLeastLeastKeyword_1_1_0_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getQuantificationRule());
                                      										}
                                      										setWithLastConsumed(current, "atLeast", true, "least");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:12797:8: ( (lv_atMost_5_0= 'most' ) )
                                    {
                                    // InternalKim.g:12797:8: ( (lv_atMost_5_0= 'most' ) )
                                    // InternalKim.g:12798:9: (lv_atMost_5_0= 'most' )
                                    {
                                    // InternalKim.g:12798:9: (lv_atMost_5_0= 'most' )
                                    // InternalKim.g:12799:10: lv_atMost_5_0= 'most'
                                    {
                                    lv_atMost_5_0=(Token)match(input,207,FOLLOW_75); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atMost_5_0, grammarAccess.getQuantificationAccess().getAtMostMostKeyword_1_1_0_1_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getQuantificationRule());
                                      										}
                                      										setWithLastConsumed(current, "atMost", true, "most");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:12814:5: ( (lv_cardinality_6_0= RULE_INT ) )
                    // InternalKim.g:12815:6: (lv_cardinality_6_0= RULE_INT )
                    {
                    // InternalKim.g:12815:6: (lv_cardinality_6_0= RULE_INT )
                    // InternalKim.g:12816:7: lv_cardinality_6_0= RULE_INT
                    {
                    lv_cardinality_6_0=(Token)match(input,RULE_INT,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_cardinality_6_0, grammarAccess.getQuantificationAccess().getCardinalityINTTerminalRuleCall_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getQuantificationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"cardinality",
                      								lv_cardinality_6_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }

                    // InternalKim.g:12832:5: (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )?
                    int alt268=2;
                    int LA268_0 = input.LA(1);

                    if ( (LA268_0==161) ) {
                        alt268=1;
                    }
                    switch (alt268) {
                        case 1 :
                            // InternalKim.g:12833:6: otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) )
                            {
                            otherlv_7=(Token)match(input,161,FOLLOW_145); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getQuantificationAccess().getOrKeyword_1_1_2_0());
                              					
                            }
                            // InternalKim.g:12837:6: ( (lv_orMore_8_0= 'more' ) )
                            // InternalKim.g:12838:7: (lv_orMore_8_0= 'more' )
                            {
                            // InternalKim.g:12838:7: (lv_orMore_8_0= 'more' )
                            // InternalKim.g:12839:8: lv_orMore_8_0= 'more'
                            {
                            lv_orMore_8_0=(Token)match(input,208,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orMore_8_0, grammarAccess.getQuantificationAccess().getOrMoreMoreKeyword_1_1_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getQuantificationRule());
                              								}
                              								setWithLastConsumed(current, "orMore", true, "more");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuantification"


    // $ANTLR start "entryRulePropertyStatement"
    // InternalKim.g:12858:1: entryRulePropertyStatement returns [EObject current=null] : iv_rulePropertyStatement= rulePropertyStatement EOF ;
    public final EObject entryRulePropertyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyStatement = null;


        try {
            // InternalKim.g:12858:58: (iv_rulePropertyStatement= rulePropertyStatement EOF )
            // InternalKim.g:12859:2: iv_rulePropertyStatement= rulePropertyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyStatement=rulePropertyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyStatement"


    // $ANTLR start "rulePropertyStatement"
    // InternalKim.g:12865:1: rulePropertyStatement returns [EObject current=null] : ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) ) ;
    public final EObject rulePropertyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_property_0_2=null;
        Token lv_has_1_0=null;
        Token lv_contains_2_0=null;
        Token lv_uses_3_0=null;
        Token lv_only_4_0=null;
        Token lv_exactly_5_0=null;
        Token otherlv_6=null;
        Token lv_atLeast_7_0=null;
        Token lv_atMost_8_0=null;
        Token lv_cardinality_9_0=null;
        Token otherlv_10=null;
        Token lv_orMore_11_0=null;
        AntlrDatatypeRuleToken lv_property_0_1 = null;

        EObject lv_propertyTarget_12_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12871:2: ( ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) ) )
            // InternalKim.g:12872:2: ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) )
            {
            // InternalKim.g:12872:2: ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) )
            // InternalKim.g:12873:3: ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) )
            {
            // InternalKim.g:12873:3: ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) )
            int alt271=4;
            switch ( input.LA(1) ) {
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case RULE_BACKCASE_ID:
                {
                alt271=1;
                }
                break;
            case 189:
                {
                alt271=2;
                }
                break;
            case 209:
                {
                alt271=3;
                }
                break;
            case 202:
                {
                alt271=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 271, 0, input);

                throw nvae;
            }

            switch (alt271) {
                case 1 :
                    // InternalKim.g:12874:4: ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) )
                    {
                    // InternalKim.g:12874:4: ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) )
                    // InternalKim.g:12875:5: ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) )
                    {
                    // InternalKim.g:12875:5: ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) )
                    // InternalKim.g:12876:6: (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID )
                    {
                    // InternalKim.g:12876:6: (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID )
                    int alt270=2;
                    int LA270_0 = input.LA(1);

                    if ( ((LA270_0>=RULE_UPPERCASE_ID && LA270_0<=RULE_LOWERCASE_ID)||LA270_0==RULE_LOWERCASE_DASHID) ) {
                        alt270=1;
                    }
                    else if ( (LA270_0==RULE_BACKCASE_ID) ) {
                        alt270=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 270, 0, input);

                        throw nvae;
                    }
                    switch (alt270) {
                        case 1 :
                            // InternalKim.g:12877:7: lv_property_0_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPropertyStatementAccess().getPropertyPropertyIdParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_141);
                            lv_property_0_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPropertyStatementRule());
                              							}
                              							set(
                              								current,
                              								"property",
                              								lv_property_0_1,
                              								"org.integratedmodelling.kim.Kim.PropertyId");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:12893:7: lv_property_0_2= RULE_BACKCASE_ID
                            {
                            lv_property_0_2=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_141); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_property_0_2, grammarAccess.getPropertyStatementAccess().getPropertyBACKCASE_IDTerminalRuleCall_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getPropertyStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"property",
                              								lv_property_0_2,
                              								"org.integratedmodelling.kim.Kim.BACKCASE_ID");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12911:4: ( (lv_has_1_0= 'has' ) )
                    {
                    // InternalKim.g:12911:4: ( (lv_has_1_0= 'has' ) )
                    // InternalKim.g:12912:5: (lv_has_1_0= 'has' )
                    {
                    // InternalKim.g:12912:5: (lv_has_1_0= 'has' )
                    // InternalKim.g:12913:6: lv_has_1_0= 'has'
                    {
                    lv_has_1_0=(Token)match(input,189,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_has_1_0, grammarAccess.getPropertyStatementAccess().getHasHasKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "has", true, "has");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:12926:4: ( (lv_contains_2_0= 'contains' ) )
                    {
                    // InternalKim.g:12926:4: ( (lv_contains_2_0= 'contains' ) )
                    // InternalKim.g:12927:5: (lv_contains_2_0= 'contains' )
                    {
                    // InternalKim.g:12927:5: (lv_contains_2_0= 'contains' )
                    // InternalKim.g:12928:6: lv_contains_2_0= 'contains'
                    {
                    lv_contains_2_0=(Token)match(input,209,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contains_2_0, grammarAccess.getPropertyStatementAccess().getContainsContainsKeyword_0_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "contains", true, "contains");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:12941:4: ( (lv_uses_3_0= 'uses' ) )
                    {
                    // InternalKim.g:12941:4: ( (lv_uses_3_0= 'uses' ) )
                    // InternalKim.g:12942:5: (lv_uses_3_0= 'uses' )
                    {
                    // InternalKim.g:12942:5: (lv_uses_3_0= 'uses' )
                    // InternalKim.g:12943:6: lv_uses_3_0= 'uses'
                    {
                    lv_uses_3_0=(Token)match(input,202,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uses_3_0, grammarAccess.getPropertyStatementAccess().getUsesUsesKeyword_0_3_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "uses", true, "uses");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:12956:3: ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )?
            int alt275=3;
            int LA275_0 = input.LA(1);

            if ( (LA275_0==203) ) {
                alt275=1;
            }
            else if ( (LA275_0==RULE_INT||(LA275_0>=204 && LA275_0<=205)) ) {
                alt275=2;
            }
            switch (alt275) {
                case 1 :
                    // InternalKim.g:12957:4: ( (lv_only_4_0= 'only' ) )
                    {
                    // InternalKim.g:12957:4: ( (lv_only_4_0= 'only' ) )
                    // InternalKim.g:12958:5: (lv_only_4_0= 'only' )
                    {
                    // InternalKim.g:12958:5: (lv_only_4_0= 'only' )
                    // InternalKim.g:12959:6: lv_only_4_0= 'only'
                    {
                    lv_only_4_0=(Token)match(input,203,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_only_4_0, grammarAccess.getPropertyStatementAccess().getOnlyOnlyKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "only", true, "only");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12972:4: ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? )
                    {
                    // InternalKim.g:12972:4: ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? )
                    // InternalKim.g:12973:5: ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )?
                    {
                    // InternalKim.g:12973:5: ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )?
                    int alt273=3;
                    int LA273_0 = input.LA(1);

                    if ( (LA273_0==204) ) {
                        alt273=1;
                    }
                    else if ( (LA273_0==205) ) {
                        alt273=2;
                    }
                    switch (alt273) {
                        case 1 :
                            // InternalKim.g:12974:6: ( (lv_exactly_5_0= 'exactly' ) )
                            {
                            // InternalKim.g:12974:6: ( (lv_exactly_5_0= 'exactly' ) )
                            // InternalKim.g:12975:7: (lv_exactly_5_0= 'exactly' )
                            {
                            // InternalKim.g:12975:7: (lv_exactly_5_0= 'exactly' )
                            // InternalKim.g:12976:8: lv_exactly_5_0= 'exactly'
                            {
                            lv_exactly_5_0=(Token)match(input,204,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exactly_5_0, grammarAccess.getPropertyStatementAccess().getExactlyExactlyKeyword_1_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getPropertyStatementRule());
                              								}
                              								setWithLastConsumed(current, "exactly", true, "exactly");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:12989:6: (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) )
                            {
                            // InternalKim.g:12989:6: (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) )
                            // InternalKim.g:12990:7: otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) )
                            {
                            otherlv_6=(Token)match(input,205,FOLLOW_144); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_6, grammarAccess.getPropertyStatementAccess().getAtKeyword_1_1_0_1_0());
                              						
                            }
                            // InternalKim.g:12994:7: ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) )
                            int alt272=2;
                            int LA272_0 = input.LA(1);

                            if ( (LA272_0==206) ) {
                                alt272=1;
                            }
                            else if ( (LA272_0==207) ) {
                                alt272=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 272, 0, input);

                                throw nvae;
                            }
                            switch (alt272) {
                                case 1 :
                                    // InternalKim.g:12995:8: ( (lv_atLeast_7_0= 'least' ) )
                                    {
                                    // InternalKim.g:12995:8: ( (lv_atLeast_7_0= 'least' ) )
                                    // InternalKim.g:12996:9: (lv_atLeast_7_0= 'least' )
                                    {
                                    // InternalKim.g:12996:9: (lv_atLeast_7_0= 'least' )
                                    // InternalKim.g:12997:10: lv_atLeast_7_0= 'least'
                                    {
                                    lv_atLeast_7_0=(Token)match(input,206,FOLLOW_75); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atLeast_7_0, grammarAccess.getPropertyStatementAccess().getAtLeastLeastKeyword_1_1_0_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getPropertyStatementRule());
                                      										}
                                      										setWithLastConsumed(current, "atLeast", true, "least");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:13010:8: ( (lv_atMost_8_0= 'most' ) )
                                    {
                                    // InternalKim.g:13010:8: ( (lv_atMost_8_0= 'most' ) )
                                    // InternalKim.g:13011:9: (lv_atMost_8_0= 'most' )
                                    {
                                    // InternalKim.g:13011:9: (lv_atMost_8_0= 'most' )
                                    // InternalKim.g:13012:10: lv_atMost_8_0= 'most'
                                    {
                                    lv_atMost_8_0=(Token)match(input,207,FOLLOW_75); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atMost_8_0, grammarAccess.getPropertyStatementAccess().getAtMostMostKeyword_1_1_0_1_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getPropertyStatementRule());
                                      										}
                                      										setWithLastConsumed(current, "atMost", true, "most");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:13027:5: ( (lv_cardinality_9_0= RULE_INT ) )
                    // InternalKim.g:13028:6: (lv_cardinality_9_0= RULE_INT )
                    {
                    // InternalKim.g:13028:6: (lv_cardinality_9_0= RULE_INT )
                    // InternalKim.g:13029:7: lv_cardinality_9_0= RULE_INT
                    {
                    lv_cardinality_9_0=(Token)match(input,RULE_INT,FOLLOW_146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_cardinality_9_0, grammarAccess.getPropertyStatementAccess().getCardinalityINTTerminalRuleCall_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getPropertyStatementRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"cardinality",
                      								lv_cardinality_9_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }

                    // InternalKim.g:13045:5: (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )?
                    int alt274=2;
                    int LA274_0 = input.LA(1);

                    if ( (LA274_0==161) ) {
                        alt274=1;
                    }
                    switch (alt274) {
                        case 1 :
                            // InternalKim.g:13046:6: otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) )
                            {
                            otherlv_10=(Token)match(input,161,FOLLOW_145); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getPropertyStatementAccess().getOrKeyword_1_1_2_0());
                              					
                            }
                            // InternalKim.g:13050:6: ( (lv_orMore_11_0= 'more' ) )
                            // InternalKim.g:13051:7: (lv_orMore_11_0= 'more' )
                            {
                            // InternalKim.g:13051:7: (lv_orMore_11_0= 'more' )
                            // InternalKim.g:13052:8: lv_orMore_11_0= 'more'
                            {
                            lv_orMore_11_0=(Token)match(input,208,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orMore_11_0, grammarAccess.getPropertyStatementAccess().getOrMoreMoreKeyword_1_1_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getPropertyStatementRule());
                              								}
                              								setWithLastConsumed(current, "orMore", true, "more");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:13067:3: ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) )
            // InternalKim.g:13068:4: (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration )
            {
            // InternalKim.g:13068:4: (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration )
            // InternalKim.g:13069:5: lv_propertyTarget_12_0= ruleSimpleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPropertyStatementAccess().getPropertyTargetSimpleConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_propertyTarget_12_0=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPropertyStatementRule());
              					}
              					set(
              						current,
              						"propertyTarget",
              						lv_propertyTarget_12_0,
              						"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyStatement"


    // $ANTLR start "entryRuleApplicableTarget"
    // InternalKim.g:13090:1: entryRuleApplicableTarget returns [EObject current=null] : iv_ruleApplicableTarget= ruleApplicableTarget EOF ;
    public final EObject entryRuleApplicableTarget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleApplicableTarget = null;


        try {
            // InternalKim.g:13090:57: (iv_ruleApplicableTarget= ruleApplicableTarget EOF )
            // InternalKim.g:13091:2: iv_ruleApplicableTarget= ruleApplicableTarget EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getApplicableTargetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleApplicableTarget=ruleApplicableTarget();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleApplicableTarget; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleApplicableTarget"


    // $ANTLR start "ruleApplicableTarget"
    // InternalKim.g:13097:1: ruleApplicableTarget returns [EObject current=null] : ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleApplicableTarget() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_target_0_0 = null;

        EObject lv_linkFrom_2_0 = null;

        EObject lv_linkTo_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13103:2: ( ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:13104:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:13104:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:13105:3: ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:13105:3: ( (lv_target_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:13106:4: (lv_target_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:13106:4: (lv_target_0_0= ruleConceptDeclaration )
            // InternalKim.g:13107:5: lv_target_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getApplicableTargetAccess().getTargetConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_147);
            lv_target_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:13124:3: (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            int alt276=2;
            int LA276_0 = input.LA(1);

            if ( (LA276_0==210) ) {
                alt276=1;
            }
            switch (alt276) {
                case 1 :
                    // InternalKim.g:13125:4: otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    {
                    otherlv_1=(Token)match(input,210,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getApplicableTargetAccess().getBetweenKeyword_1_0());
                      			
                    }
                    // InternalKim.g:13129:4: ( (lv_linkFrom_2_0= ruleConceptDeclaration ) )
                    // InternalKim.g:13130:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:13130:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    // InternalKim.g:13131:6: lv_linkFrom_2_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkFromConceptDeclarationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_148);
                    lv_linkFrom_2_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkFrom",
                      							lv_linkFrom_2_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,162,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getApplicableTargetAccess().getAndKeyword_1_2());
                      			
                    }
                    // InternalKim.g:13152:4: ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:13153:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:13153:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    // InternalKim.g:13154:6: lv_linkTo_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkToConceptDeclarationParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_linkTo_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkTo",
                      							lv_linkTo_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleApplicableTarget"


    // $ANTLR start "entryRuleChildConcept"
    // InternalKim.g:13176:1: entryRuleChildConcept returns [EObject current=null] : iv_ruleChildConcept= ruleChildConcept EOF ;
    public final EObject entryRuleChildConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChildConcept = null;


        try {
            // InternalKim.g:13176:53: (iv_ruleChildConcept= ruleChildConcept EOF )
            // InternalKim.g:13177:2: iv_ruleChildConcept= ruleChildConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChildConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChildConcept=ruleChildConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChildConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChildConcept"


    // $ANTLR start "ruleChildConcept"
    // InternalKim.g:13183:1: ruleChildConcept returns [EObject current=null] : ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) ;
    public final EObject ruleChildConcept() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_0_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_ConceptStatementBody_3 = null;



        	enterRule();

        try {
            // InternalKim.g:13189:2: ( ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) )
            // InternalKim.g:13190:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            {
            // InternalKim.g:13190:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==RULE_CAMELCASE_ID||LA278_0==169) ) {
                alt278=1;
            }
            else if ( (LA278_0==38) ) {
                alt278=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 278, 0, input);

                throw nvae;
            }
            switch (alt278) {
                case 1 :
                    // InternalKim.g:13191:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:13191:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:13192:4: ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:13192:4: ( (lv_abstract_0_0= 'abstract' ) )?
                    int alt277=2;
                    int LA277_0 = input.LA(1);

                    if ( (LA277_0==169) ) {
                        alt277=1;
                    }
                    switch (alt277) {
                        case 1 :
                            // InternalKim.g:13193:5: (lv_abstract_0_0= 'abstract' )
                            {
                            // InternalKim.g:13193:5: (lv_abstract_0_0= 'abstract' )
                            // InternalKim.g:13194:6: lv_abstract_0_0= 'abstract'
                            {
                            lv_abstract_0_0=(Token)match(input,169,FOLLOW_149); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_abstract_0_0, grammarAccess.getChildConceptAccess().getAbstractAbstractKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getChildConceptRule());
                              						}
                              						setWithLastConsumed(current, "abstract", true, "abstract");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:13206:4: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:13207:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:13207:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:13208:6: lv_name_1_0= RULE_CAMELCASE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_0, grammarAccess.getChildConceptAccess().getNameCAMELCASE_IDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChildConceptRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13226:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    {
                    // InternalKim.g:13226:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    // InternalKim.g:13227:4: otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,38,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChildConceptAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getChildConceptAccess().getConceptStatementBodyParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_91);
                    this_ConceptStatementBody_3=ruleConceptStatementBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ConceptStatementBody_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChildConceptAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChildConcept"


    // $ANTLR start "entryRuleIdentityRequirement"
    // InternalKim.g:13251:1: entryRuleIdentityRequirement returns [EObject current=null] : iv_ruleIdentityRequirement= ruleIdentityRequirement EOF ;
    public final EObject entryRuleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentityRequirement = null;


        try {
            // InternalKim.g:13251:60: (iv_ruleIdentityRequirement= ruleIdentityRequirement EOF )
            // InternalKim.g:13252:2: iv_ruleIdentityRequirement= ruleIdentityRequirement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentityRequirementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentityRequirement=ruleIdentityRequirement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentityRequirement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentityRequirement"


    // $ANTLR start "ruleIdentityRequirement"
    // InternalKim.g:13258:1: ruleIdentityRequirement returns [EObject current=null] : ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) ) ;
    public final EObject ruleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_authority_8_1=null;
        Token lv_authority_8_2=null;
        EObject lv_identities_4_0 = null;

        EObject lv_identities_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13264:2: ( ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            // InternalKim.g:13265:2: ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) )
            {
            // InternalKim.g:13265:2: ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) )
            int alt282=2;
            int LA282_0 = input.LA(1);

            if ( (LA282_0==160||(LA282_0>=211 && LA282_0<=213)) ) {
                alt282=1;
            }
            else if ( (LA282_0==180) ) {
                alt282=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 282, 0, input);

                throw nvae;
            }
            switch (alt282) {
                case 1 :
                    // InternalKim.g:13266:3: ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* )
                    {
                    // InternalKim.g:13266:3: ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* )
                    // InternalKim.g:13267:4: (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )*
                    {
                    // InternalKim.g:13267:4: (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' )
                    int alt279=4;
                    switch ( input.LA(1) ) {
                    case 160:
                        {
                        alt279=1;
                        }
                        break;
                    case 211:
                        {
                        alt279=2;
                        }
                        break;
                    case 212:
                        {
                        alt279=3;
                        }
                        break;
                    case 213:
                        {
                        alt279=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 279, 0, input);

                        throw nvae;
                    }

                    switch (alt279) {
                        case 1 :
                            // InternalKim.g:13268:5: otherlv_0= 'identity'
                            {
                            otherlv_0=(Token)match(input,160,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_0, grammarAccess.getIdentityRequirementAccess().getIdentityKeyword_0_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13273:5: otherlv_1= 'attribute'
                            {
                            otherlv_1=(Token)match(input,211,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getIdentityRequirementAccess().getAttributeKeyword_0_0_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:13278:5: otherlv_2= 'realm'
                            {
                            otherlv_2=(Token)match(input,212,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getIdentityRequirementAccess().getRealmKeyword_0_0_2());
                              				
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:13283:5: otherlv_3= 'extent'
                            {
                            otherlv_3=(Token)match(input,213,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getIdentityRequirementAccess().getExtentKeyword_0_0_3());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:13288:4: ( (lv_identities_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:13289:5: (lv_identities_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:13289:5: (lv_identities_4_0= ruleConceptDeclaration )
                    // InternalKim.g:13290:6: lv_identities_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_identities_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                      						}
                      						add(
                      							current,
                      							"identities",
                      							lv_identities_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:13307:4: (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )*
                    loop280:
                    do {
                        int alt280=2;
                        int LA280_0 = input.LA(1);

                        if ( (LA280_0==27) ) {
                            int LA280_1 = input.LA(2);

                            if ( ((LA280_1>=RULE_UPPERCASE_ID && LA280_1<=RULE_LOWERCASE_ID)||LA280_1==RULE_CAMELCASE_ID||LA280_1==RULE_LOWERCASE_DASHID||LA280_1==38||(LA280_1>=130 && LA280_1<=131)||(LA280_1>=139 && LA280_1<=140)||(LA280_1>=142 && LA280_1<=159)) ) {
                                alt280=1;
                            }
                            else if ( (LA280_1==160) ) {
                                switch ( input.LA(3) ) {
                                case RULE_STRING:
                                case RULE_INT:
                                case RULE_ID:
                                    {
                                    alt280=1;
                                    }
                                    break;
                                case RULE_UPPERCASE_ID:
                                    {
                                    int LA280_5 = input.LA(4);

                                    if ( (LA280_5==88) ) {
                                        alt280=1;
                                    }


                                    }
                                    break;
                                case RULE_CAMELCASE_ID:
                                    {
                                    int LA280_6 = input.LA(4);

                                    if ( (LA280_6==88) ) {
                                        alt280=1;
                                    }


                                    }
                                    break;

                                }

                            }


                        }


                        switch (alt280) {
                    	case 1 :
                    	    // InternalKim.g:13308:5: otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) )
                    	    {
                    	    otherlv_5=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getIdentityRequirementAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:13312:5: ( (lv_identities_6_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:13313:6: (lv_identities_6_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:13313:6: (lv_identities_6_0= ruleConceptDeclaration )
                    	    // InternalKim.g:13314:7: lv_identities_6_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_33);
                    	    lv_identities_6_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"identities",
                    	      								lv_identities_6_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop280;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13334:3: (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) )
                    {
                    // InternalKim.g:13334:3: (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) )
                    // InternalKim.g:13335:4: otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) )
                    {
                    otherlv_7=(Token)match(input,180,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getIdentityRequirementAccess().getAuthorityKeyword_1_0());
                      			
                    }
                    // InternalKim.g:13339:4: ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:13340:5: ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:13340:5: ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:13341:6: (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:13341:6: (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH )
                    int alt281=2;
                    int LA281_0 = input.LA(1);

                    if ( (LA281_0==RULE_UPPERCASE_ID) ) {
                        alt281=1;
                    }
                    else if ( (LA281_0==RULE_UPPERCASE_PATH) ) {
                        alt281=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 281, 0, input);

                        throw nvae;
                    }
                    switch (alt281) {
                        case 1 :
                            // InternalKim.g:13342:7: lv_authority_8_1= RULE_UPPERCASE_ID
                            {
                            lv_authority_8_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_8_1, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_8_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13357:7: lv_authority_8_2= RULE_UPPERCASE_PATH
                            {
                            lv_authority_8_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_8_2, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_8_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentityRequirement"


    // $ANTLR start "entryRuleAnnotation"
    // InternalKim.g:13379:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalKim.g:13379:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalKim.g:13380:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalKim.g:13386:1: ruleAnnotation returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13392:2: ( ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) )
            // InternalKim.g:13393:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            {
            // InternalKim.g:13393:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            // InternalKim.g:13394:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            {
            // InternalKim.g:13394:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) )
            // InternalKim.g:13395:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            {
            // InternalKim.g:13395:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            // InternalKim.g:13396:5: lv_name_0_0= RULE_ANNOTATION_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ANNOTATION_ID,FOLLOW_150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnnotationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.ANNOTATION_ID");
              				
            }

            }


            }

            // InternalKim.g:13412:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            int alt284=2;
            alt284 = dfa284.predict(input);
            switch (alt284) {
                case 1 :
                    // InternalKim.g:13413:4: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,38,FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKim.g:13417:4: ( (lv_parameters_2_0= ruleParameterList ) )?
                    int alt283=2;
                    int LA283_0 = input.LA(1);

                    if ( ((LA283_0>=RULE_UPPERCASE_ID && LA283_0<=RULE_STRING)||(LA283_0>=RULE_EXPR && LA283_0<=RULE_LOWERCASE_DASHID)||(LA283_0>=28 && LA283_0<=29)||LA283_0==38||(LA283_0>=49 && LA283_0<=50)||(LA283_0>=130 && LA283_0<=131)||(LA283_0>=139 && LA283_0<=140)||(LA283_0>=142 && LA283_0<=160)||LA283_0==214||(LA283_0>=251 && LA283_0<=252)) ) {
                        alt283=1;
                    }
                    switch (alt283) {
                        case 1 :
                            // InternalKim.g:13418:5: (lv_parameters_2_0= ruleParameterList )
                            {
                            // InternalKim.g:13418:5: (lv_parameters_2_0= ruleParameterList )
                            // InternalKim.g:13419:6: lv_parameters_2_0= ruleParameterList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_91);
                            lv_parameters_2_0=ruleParameterList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnnotationRule());
                              						}
                              						set(
                              							current,
                              							"parameters",
                              							lv_parameters_2_0,
                              							"org.integratedmodelling.kim.Kim.ParameterList");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleList"
    // InternalKim.g:13445:1: entryRuleList returns [EObject current=null] : iv_ruleList= ruleList EOF ;
    public final EObject entryRuleList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleList = null;


        try {
            // InternalKim.g:13445:45: (iv_ruleList= ruleList EOF )
            // InternalKim.g:13446:2: iv_ruleList= ruleList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleList=ruleList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleList"


    // $ANTLR start "ruleList"
    // InternalKim.g:13452:1: ruleList returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' ) ;
    public final EObject ruleList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_contents_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13458:2: ( ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' ) )
            // InternalKim.g:13459:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' )
            {
            // InternalKim.g:13459:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' )
            // InternalKim.g:13460:3: () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')'
            {
            // InternalKim.g:13460:3: ()
            // InternalKim.g:13461:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getListAccess().getListAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,38,FOLLOW_152); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:13474:3: ( (lv_contents_2_0= ruleValue ) )*
            loop285:
            do {
                int alt285=2;
                int LA285_0 = input.LA(1);

                if ( ((LA285_0>=RULE_UPPERCASE_ID && LA285_0<=RULE_STRING)||(LA285_0>=RULE_EXPR && LA285_0<=RULE_ID)||(LA285_0>=27 && LA285_0<=29)||LA285_0==38||(LA285_0>=49 && LA285_0<=50)||LA285_0==214||(LA285_0>=251 && LA285_0<=252)) ) {
                    alt285=1;
                }


                switch (alt285) {
            	case 1 :
            	    // InternalKim.g:13475:4: (lv_contents_2_0= ruleValue )
            	    {
            	    // InternalKim.g:13475:4: (lv_contents_2_0= ruleValue )
            	    // InternalKim.g:13476:5: lv_contents_2_0= ruleValue
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getListAccess().getContentsValueParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_152);
            	    lv_contents_2_0=ruleValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getListRule());
            	      					}
            	      					add(
            	      						current,
            	      						"contents",
            	      						lv_contents_2_0,
            	      						"org.integratedmodelling.kim.Kim.Value");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop285;
                }
            } while (true);

            otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getListAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleList"


    // $ANTLR start "entryRuleLiteral"
    // InternalKim.g:13501:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalKim.g:13501:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalKim.g:13502:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalKim.g:13508:1: ruleLiteral returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13514:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) )
            // InternalKim.g:13515:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            {
            // InternalKim.g:13515:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            int alt287=4;
            alt287 = dfa287.predict(input);
            switch (alt287) {
                case 1 :
                    // InternalKim.g:13516:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:13516:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:13517:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:13517:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:13518:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:13518:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:13519:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:13536:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:13537:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,36,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:13543:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:13544:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:13548:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:13549:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13568:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:13568:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:13569:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:13569:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:13570:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13588:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:13588:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:13589:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:13589:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:13590:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:13607:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:13607:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:13608:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:13608:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:13609:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:13609:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt286=2;
                    int LA286_0 = input.LA(1);

                    if ( (LA286_0==28) ) {
                        alt286=1;
                    }
                    else if ( (LA286_0==29) ) {
                        alt286=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 286, 0, input);

                        throw nvae;
                    }
                    switch (alt286) {
                        case 1 :
                            // InternalKim.g:13610:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13621:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLiteralOrID"
    // InternalKim.g:13638:1: entryRuleLiteralOrID returns [EObject current=null] : iv_ruleLiteralOrID= ruleLiteralOrID EOF ;
    public final EObject entryRuleLiteralOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrID = null;


        try {
            // InternalKim.g:13638:52: (iv_ruleLiteralOrID= ruleLiteralOrID EOF )
            // InternalKim.g:13639:2: iv_ruleLiteralOrID= ruleLiteralOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrID=ruleLiteralOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrID"


    // $ANTLR start "ruleLiteralOrID"
    // InternalKim.g:13645:1: ruleLiteralOrID returns [EObject current=null] : ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) ) ;
    public final EObject ruleLiteralOrID() throws RecognitionException {
        EObject current = null;

        Token lv_string_1_0=null;
        Token lv_boolean_2_1=null;
        Token lv_boolean_2_2=null;
        Token lv_id_3_0=null;
        EObject lv_number_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13651:2: ( ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) ) )
            // InternalKim.g:13652:2: ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) )
            {
            // InternalKim.g:13652:2: ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) )
            int alt289=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case 251:
            case 252:
                {
                alt289=1;
                }
                break;
            case RULE_STRING:
                {
                alt289=2;
                }
                break;
            case 28:
            case 29:
                {
                alt289=3;
                }
                break;
            case RULE_ID:
                {
                alt289=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 289, 0, input);

                throw nvae;
            }

            switch (alt289) {
                case 1 :
                    // InternalKim.g:13653:3: ( (lv_number_0_0= ruleNumber ) )
                    {
                    // InternalKim.g:13653:3: ( (lv_number_0_0= ruleNumber ) )
                    // InternalKim.g:13654:4: (lv_number_0_0= ruleNumber )
                    {
                    // InternalKim.g:13654:4: (lv_number_0_0= ruleNumber )
                    // InternalKim.g:13655:5: lv_number_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIDAccess().getNumberNumberParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIDRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_0_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13673:3: ( (lv_string_1_0= RULE_STRING ) )
                    {
                    // InternalKim.g:13673:3: ( (lv_string_1_0= RULE_STRING ) )
                    // InternalKim.g:13674:4: (lv_string_1_0= RULE_STRING )
                    {
                    // InternalKim.g:13674:4: (lv_string_1_0= RULE_STRING )
                    // InternalKim.g:13675:5: lv_string_1_0= RULE_STRING
                    {
                    lv_string_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_1_0, grammarAccess.getLiteralOrIDAccess().getStringSTRINGTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIDRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_1_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13692:3: ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) )
                    {
                    // InternalKim.g:13692:3: ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) )
                    // InternalKim.g:13693:4: ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) )
                    {
                    // InternalKim.g:13693:4: ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) )
                    // InternalKim.g:13694:5: (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' )
                    {
                    // InternalKim.g:13694:5: (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' )
                    int alt288=2;
                    int LA288_0 = input.LA(1);

                    if ( (LA288_0==28) ) {
                        alt288=1;
                    }
                    else if ( (LA288_0==29) ) {
                        alt288=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 288, 0, input);

                        throw nvae;
                    }
                    switch (alt288) {
                        case 1 :
                            // InternalKim.g:13695:6: lv_boolean_2_1= 'true'
                            {
                            lv_boolean_2_1=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_2_1, grammarAccess.getLiteralOrIDAccess().getBooleanTrueKeyword_2_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIDRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_2_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13706:6: lv_boolean_2_2= 'false'
                            {
                            lv_boolean_2_2=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_2_2, grammarAccess.getLiteralOrIDAccess().getBooleanFalseKeyword_2_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIDRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_2_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:13720:3: ( (lv_id_3_0= RULE_ID ) )
                    {
                    // InternalKim.g:13720:3: ( (lv_id_3_0= RULE_ID ) )
                    // InternalKim.g:13721:4: (lv_id_3_0= RULE_ID )
                    {
                    // InternalKim.g:13721:4: (lv_id_3_0= RULE_ID )
                    // InternalKim.g:13722:5: lv_id_3_0= RULE_ID
                    {
                    lv_id_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_3_0, grammarAccess.getLiteralOrIDAccess().getIdIDTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIDRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_3_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrID"


    // $ANTLR start "entryRuleLiteralOrIdOrComma"
    // InternalKim.g:13742:1: entryRuleLiteralOrIdOrComma returns [EObject current=null] : iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF ;
    public final EObject entryRuleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrIdOrComma = null;


        try {
            // InternalKim.g:13742:59: (iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF )
            // InternalKim.g:13743:2: iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIdOrCommaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrIdOrComma=ruleLiteralOrIdOrComma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrIdOrComma; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrIdOrComma"


    // $ANTLR start "ruleLiteralOrIdOrComma"
    // InternalKim.g:13749:1: ruleLiteralOrIdOrComma returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) ;
    public final EObject ruleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        Token lv_id_6_0=null;
        Token lv_comma_7_0=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13755:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) )
            // InternalKim.g:13756:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            {
            // InternalKim.g:13756:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            int alt291=6;
            alt291 = dfa291.predict(input);
            switch (alt291) {
                case 1 :
                    // InternalKim.g:13757:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:13757:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:13758:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:13758:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:13759:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:13759:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:13760:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:13777:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:13778:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,36,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralOrIdOrCommaAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:13784:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:13785:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:13789:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:13790:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13809:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:13809:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:13810:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:13810:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:13811:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13829:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:13829:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:13830:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:13830:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:13831:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralOrIdOrCommaAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:13848:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:13848:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:13849:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:13849:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:13850:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:13850:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt290=2;
                    int LA290_0 = input.LA(1);

                    if ( (LA290_0==28) ) {
                        alt290=1;
                    }
                    else if ( (LA290_0==29) ) {
                        alt290=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 290, 0, input);

                        throw nvae;
                    }
                    switch (alt290) {
                        case 1 :
                            // InternalKim.g:13851:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13862:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:13876:3: ( (lv_id_6_0= RULE_ID ) )
                    {
                    // InternalKim.g:13876:3: ( (lv_id_6_0= RULE_ID ) )
                    // InternalKim.g:13877:4: (lv_id_6_0= RULE_ID )
                    {
                    // InternalKim.g:13877:4: (lv_id_6_0= RULE_ID )
                    // InternalKim.g:13878:5: lv_id_6_0= RULE_ID
                    {
                    lv_id_6_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_6_0, grammarAccess.getLiteralOrIdOrCommaAccess().getIdIDTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_6_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:13895:3: ( (lv_comma_7_0= ',' ) )
                    {
                    // InternalKim.g:13895:3: ( (lv_comma_7_0= ',' ) )
                    // InternalKim.g:13896:4: (lv_comma_7_0= ',' )
                    {
                    // InternalKim.g:13896:4: (lv_comma_7_0= ',' )
                    // InternalKim.g:13897:5: lv_comma_7_0= ','
                    {
                    lv_comma_7_0=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_comma_7_0, grammarAccess.getLiteralOrIdOrCommaAccess().getCommaCommaKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(current, "comma", true, ",");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrIdOrComma"


    // $ANTLR start "entryRuleMetadata"
    // InternalKim.g:13913:1: entryRuleMetadata returns [EObject current=null] : iv_ruleMetadata= ruleMetadata EOF ;
    public final EObject entryRuleMetadata() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadata = null;


        try {
            // InternalKim.g:13913:49: (iv_ruleMetadata= ruleMetadata EOF )
            // InternalKim.g:13914:2: iv_ruleMetadata= ruleMetadata EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadata=ruleMetadata();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadata; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadata"


    // $ANTLR start "ruleMetadata"
    // InternalKim.g:13920:1: ruleMetadata returns [EObject current=null] : ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleMetadata() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_ids_2_2=null;
        Token lv_ids_2_4=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_ids_2_1 = null;

        AntlrDatatypeRuleToken lv_ids_2_3 = null;

        EObject lv_values_3_1 = null;

        EObject lv_values_3_2 = null;

        EObject lv_values_3_3 = null;



        	enterRule();

        try {
            // InternalKim.g:13926:2: ( ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' ) )
            // InternalKim.g:13927:2: ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' )
            {
            // InternalKim.g:13927:2: ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' )
            // InternalKim.g:13928:3: () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}'
            {
            // InternalKim.g:13928:3: ()
            // InternalKim.g:13929:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMetadataAccess().getMetadataAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,214,FOLLOW_153); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMetadataAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:13942:3: ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )*
            loop294:
            do {
                int alt294=2;
                int LA294_0 = input.LA(1);

                if ( ((LA294_0>=RULE_UPPERCASE_ID && LA294_0<=RULE_STRING)||LA294_0==RULE_LOWERCASE_DASHID) ) {
                    alt294=1;
                }


                switch (alt294) {
            	case 1 :
            	    // InternalKim.g:13943:4: ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) )
            	    {
            	    // InternalKim.g:13943:4: ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) )
            	    // InternalKim.g:13944:5: ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) )
            	    {
            	    // InternalKim.g:13944:5: ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) )
            	    // InternalKim.g:13945:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )
            	    {
            	    // InternalKim.g:13945:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )
            	    int alt292=4;
            	    alt292 = dfa292.predict(input);
            	    switch (alt292) {
            	        case 1 :
            	            // InternalKim.g:13946:7: lv_ids_2_1= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPathNameParserRuleCall_2_0_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_154);
            	            lv_ids_2_1=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_1,
            	              								"org.integratedmodelling.kim.Kim.PathName");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:13962:7: lv_ids_2_2= RULE_LOWERCASE_ID
            	            {
            	            lv_ids_2_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_154); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_ids_2_2, grammarAccess.getMetadataAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getMetadataRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_2,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:13977:7: lv_ids_2_3= rulePropertyId
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPropertyIdParserRuleCall_2_0_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_154);
            	            lv_ids_2_3=rulePropertyId();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_3,
            	              								"org.integratedmodelling.kim.Kim.PropertyId");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // InternalKim.g:13993:7: lv_ids_2_4= RULE_STRING
            	            {
            	            lv_ids_2_4=(Token)match(input,RULE_STRING,FOLLOW_154); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_ids_2_4, grammarAccess.getMetadataAccess().getIdsSTRINGTerminalRuleCall_2_0_0_3());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getMetadataRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_4,
            	              								"org.eclipse.xtext.common.Terminals.STRING");
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:14010:4: ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) )
            	    // InternalKim.g:14011:5: ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) )
            	    {
            	    // InternalKim.g:14011:5: ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) )
            	    // InternalKim.g:14012:6: (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList )
            	    {
            	    // InternalKim.g:14012:6: (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList )
            	    int alt293=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_STRING:
            	    case RULE_INT:
            	    case RULE_ID:
            	    case 28:
            	    case 29:
            	    case 251:
            	    case 252:
            	        {
            	        alt293=1;
            	        }
            	        break;
            	    case 214:
            	        {
            	        alt293=2;
            	        }
            	        break;
            	    case 38:
            	        {
            	        alt293=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 293, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt293) {
            	        case 1 :
            	            // InternalKim.g:14013:7: lv_values_3_1= ruleLiteralOrID
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesLiteralOrIDParserRuleCall_2_1_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_153);
            	            lv_values_3_1=ruleLiteralOrID();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_1,
            	              								"org.integratedmodelling.kim.Kim.LiteralOrID");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:14029:7: lv_values_3_2= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesMetadataParserRuleCall_2_1_0_1());
            	              						
            	            }
            	            pushFollow(FOLLOW_153);
            	            lv_values_3_2=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_2,
            	              								"org.integratedmodelling.kim.Kim.Metadata");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:14045:7: lv_values_3_3= ruleList
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesListParserRuleCall_2_1_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_153);
            	            lv_values_3_3=ruleList();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_3,
            	              								"org.integratedmodelling.kim.Kim.List");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop294;
                }
            } while (true);

            otherlv_4=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getMetadataAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadata"


    // $ANTLR start "entryRuleMap"
    // InternalKim.g:14072:1: entryRuleMap returns [EObject current=null] : iv_ruleMap= ruleMap EOF ;
    public final EObject entryRuleMap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMap = null;


        try {
            // InternalKim.g:14072:44: (iv_ruleMap= ruleMap EOF )
            // InternalKim.g:14073:2: iv_ruleMap= ruleMap EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMap=ruleMap();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMap; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMap"


    // $ANTLR start "ruleMap"
    // InternalKim.g:14079:1: ruleMap returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMap() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_entries_2_0 = null;

        EObject lv_entries_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14085:2: ( ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) )
            // InternalKim.g:14086:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            {
            // InternalKim.g:14086:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            // InternalKim.g:14087:3: () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}'
            {
            // InternalKim.g:14087:3: ()
            // InternalKim.g:14088:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMapAccess().getMapAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,214,FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:14101:3: ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )?
            int alt296=2;
            int LA296_0 = input.LA(1);

            if ( ((LA296_0>=RULE_UPPERCASE_ID && LA296_0<=RULE_STRING)||(LA296_0>=RULE_CAMELCASE_ID && LA296_0<=RULE_LOWERCASE_DASHID)||(LA296_0>=28 && LA296_0<=29)||LA296_0==38||LA296_0==40||(LA296_0>=48 && LA296_0<=49)||(LA296_0>=76 && LA296_0<=79)||LA296_0==82||LA296_0==84||(LA296_0>=130 && LA296_0<=131)||(LA296_0>=139 && LA296_0<=140)||(LA296_0>=142 && LA296_0<=160)||(LA296_0>=251 && LA296_0<=252)) ) {
                alt296=1;
            }
            switch (alt296) {
                case 1 :
                    // InternalKim.g:14102:4: ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    {
                    // InternalKim.g:14102:4: ( (lv_entries_2_0= ruleMapEntry ) )
                    // InternalKim.g:14103:5: (lv_entries_2_0= ruleMapEntry )
                    {
                    // InternalKim.g:14103:5: (lv_entries_2_0= ruleMapEntry )
                    // InternalKim.g:14104:6: lv_entries_2_0= ruleMapEntry
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_156);
                    lv_entries_2_0=ruleMapEntry();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapRule());
                      						}
                      						add(
                      							current,
                      							"entries",
                      							lv_entries_2_0,
                      							"org.integratedmodelling.kim.Kim.MapEntry");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14121:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    loop295:
                    do {
                        int alt295=2;
                        int LA295_0 = input.LA(1);

                        if ( (LA295_0==27) ) {
                            alt295=1;
                        }


                        switch (alt295) {
                    	case 1 :
                    	    // InternalKim.g:14122:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) )
                    	    {
                    	    // InternalKim.g:14122:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:14123:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,27,FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getMapAccess().getCommaKeyword_2_1_0_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:14130:5: ( (lv_entries_4_0= ruleMapEntry ) )
                    	    // InternalKim.g:14131:6: (lv_entries_4_0= ruleMapEntry )
                    	    {
                    	    // InternalKim.g:14131:6: (lv_entries_4_0= ruleMapEntry )
                    	    // InternalKim.g:14132:7: lv_entries_4_0= ruleMapEntry
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_156);
                    	    lv_entries_4_0=ruleMapEntry();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMapRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"entries",
                    	      								lv_entries_4_0,
                    	      								"org.integratedmodelling.kim.Kim.MapEntry");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop295;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMap"


    // $ANTLR start "entryRuleMapEntry"
    // InternalKim.g:14159:1: entryRuleMapEntry returns [EObject current=null] : iv_ruleMapEntry= ruleMapEntry EOF ;
    public final EObject entryRuleMapEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapEntry = null;


        try {
            // InternalKim.g:14159:49: (iv_ruleMapEntry= ruleMapEntry EOF )
            // InternalKim.g:14160:2: iv_ruleMapEntry= ruleMapEntry EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapEntry=ruleMapEntry();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapEntry; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapEntry"


    // $ANTLR start "ruleMapEntry"
    // InternalKim.g:14166:1: ruleMapEntry returns [EObject current=null] : ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleMapEntry() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifier_0_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14172:2: ( ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:14173:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:14173:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:14174:3: ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:14174:3: ( (lv_classifier_0_0= ruleClassifierRHSWithId ) )
            // InternalKim.g:14175:4: (lv_classifier_0_0= ruleClassifierRHSWithId )
            {
            // InternalKim.g:14175:4: (lv_classifier_0_0= ruleClassifierRHSWithId )
            // InternalKim.g:14176:5: lv_classifier_0_0= ruleClassifierRHSWithId
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getClassifierClassifierRHSWithIdParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_79);
            lv_classifier_0_0=ruleClassifierRHSWithId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"classifier",
              						lv_classifier_0_0,
              						"org.integratedmodelling.kim.Kim.ClassifierRHSWithId");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,105,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapEntryAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:14197:3: ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:14198:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:14198:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            // InternalKim.g:14199:5: lv_value_2_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapEntry"


    // $ANTLR start "entryRuleDocSelector"
    // InternalKim.g:14220:1: entryRuleDocSelector returns [EObject current=null] : iv_ruleDocSelector= ruleDocSelector EOF ;
    public final EObject entryRuleDocSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocSelector = null;


        try {
            // InternalKim.g:14220:52: (iv_ruleDocSelector= ruleDocSelector EOF )
            // InternalKim.g:14221:2: iv_ruleDocSelector= ruleDocSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocSelector=ruleDocSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocSelector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocSelector"


    // $ANTLR start "ruleDocSelector"
    // InternalKim.g:14227:1: ruleDocSelector returns [EObject current=null] : ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) ) ;
    public final EObject ruleDocSelector() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_definition_2_0=null;
        Token lv_initialization_3_0=null;
        Token lv_termination_4_0=null;
        Token lv_transition_5_0=null;
        AntlrDatatypeRuleToken lv_id_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14233:2: ( ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) ) )
            // InternalKim.g:14234:2: ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) )
            {
            // InternalKim.g:14234:2: ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) )
            int alt298=2;
            int LA298_0 = input.LA(1);

            if ( ((LA298_0>=RULE_UPPERCASE_ID && LA298_0<=RULE_LOWERCASE_ID)||LA298_0==RULE_LOWERCASE_DASHID) ) {
                alt298=1;
            }
            else if ( (LA298_0==56) ) {
                alt298=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 298, 0, input);

                throw nvae;
            }
            switch (alt298) {
                case 1 :
                    // InternalKim.g:14235:3: ( (lv_id_0_0= rulePropertyId ) )
                    {
                    // InternalKim.g:14235:3: ( (lv_id_0_0= rulePropertyId ) )
                    // InternalKim.g:14236:4: (lv_id_0_0= rulePropertyId )
                    {
                    // InternalKim.g:14236:4: (lv_id_0_0= rulePropertyId )
                    // InternalKim.g:14237:5: lv_id_0_0= rulePropertyId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDocSelectorAccess().getIdPropertyIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_id_0_0=rulePropertyId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDocSelectorRule());
                      					}
                      					set(
                      						current,
                      						"id",
                      						lv_id_0_0,
                      						"org.integratedmodelling.kim.Kim.PropertyId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14255:3: (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) )
                    {
                    // InternalKim.g:14255:3: (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) )
                    // InternalKim.g:14256:4: otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) )
                    {
                    otherlv_1=(Token)match(input,56,FOLLOW_157); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDocSelectorAccess().getOnKeyword_1_0());
                      			
                    }
                    // InternalKim.g:14260:4: ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) )
                    int alt297=4;
                    switch ( input.LA(1) ) {
                    case 57:
                        {
                        alt297=1;
                        }
                        break;
                    case 215:
                        {
                        alt297=2;
                        }
                        break;
                    case 59:
                        {
                        alt297=3;
                        }
                        break;
                    case 216:
                        {
                        alt297=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 297, 0, input);

                        throw nvae;
                    }

                    switch (alt297) {
                        case 1 :
                            // InternalKim.g:14261:5: ( (lv_definition_2_0= 'definition' ) )
                            {
                            // InternalKim.g:14261:5: ( (lv_definition_2_0= 'definition' ) )
                            // InternalKim.g:14262:6: (lv_definition_2_0= 'definition' )
                            {
                            // InternalKim.g:14262:6: (lv_definition_2_0= 'definition' )
                            // InternalKim.g:14263:7: lv_definition_2_0= 'definition'
                            {
                            lv_definition_2_0=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_definition_2_0, grammarAccess.getDocSelectorAccess().getDefinitionDefinitionKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "definition", true, "definition");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:14276:5: ( (lv_initialization_3_0= 'initialization' ) )
                            {
                            // InternalKim.g:14276:5: ( (lv_initialization_3_0= 'initialization' ) )
                            // InternalKim.g:14277:6: (lv_initialization_3_0= 'initialization' )
                            {
                            // InternalKim.g:14277:6: (lv_initialization_3_0= 'initialization' )
                            // InternalKim.g:14278:7: lv_initialization_3_0= 'initialization'
                            {
                            lv_initialization_3_0=(Token)match(input,215,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_initialization_3_0, grammarAccess.getDocSelectorAccess().getInitializationInitializationKeyword_1_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "initialization", true, "initialization");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:14291:5: ( (lv_termination_4_0= 'termination' ) )
                            {
                            // InternalKim.g:14291:5: ( (lv_termination_4_0= 'termination' ) )
                            // InternalKim.g:14292:6: (lv_termination_4_0= 'termination' )
                            {
                            // InternalKim.g:14292:6: (lv_termination_4_0= 'termination' )
                            // InternalKim.g:14293:7: lv_termination_4_0= 'termination'
                            {
                            lv_termination_4_0=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_termination_4_0, grammarAccess.getDocSelectorAccess().getTerminationTerminationKeyword_1_1_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "termination", true, "termination");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:14306:5: ( (lv_transition_5_0= 'transition' ) )
                            {
                            // InternalKim.g:14306:5: ( (lv_transition_5_0= 'transition' ) )
                            // InternalKim.g:14307:6: (lv_transition_5_0= 'transition' )
                            {
                            // InternalKim.g:14307:6: (lv_transition_5_0= 'transition' )
                            // InternalKim.g:14308:7: lv_transition_5_0= 'transition'
                            {
                            lv_transition_5_0=(Token)match(input,216,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_transition_5_0, grammarAccess.getDocSelectorAccess().getTransitionTransitionKeyword_1_1_3_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "transition", true, "transition");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocSelector"


    // $ANTLR start "entryRuleKeyValuePair"
    // InternalKim.g:14326:1: entryRuleKeyValuePair returns [EObject current=null] : iv_ruleKeyValuePair= ruleKeyValuePair EOF ;
    public final EObject entryRuleKeyValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyValuePair = null;


        try {
            // InternalKim.g:14326:53: (iv_ruleKeyValuePair= ruleKeyValuePair EOF )
            // InternalKim.g:14327:2: iv_ruleKeyValuePair= ruleKeyValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyValuePair=ruleKeyValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyValuePair"


    // $ANTLR start "ruleKeyValuePair"
    // InternalKim.g:14333:1: ruleKeyValuePair returns [EObject current=null] : ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleKeyValuePair() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        Token lv_name_0_3=null;
        Token lv_interactive_1_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14339:2: ( ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:14340:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:14340:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:14341:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:14341:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) )
            // InternalKim.g:14342:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) )
            {
            // InternalKim.g:14342:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) )
            // InternalKim.g:14343:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' )
            {
            // InternalKim.g:14343:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' )
            int alt299=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                int LA299_1 = input.LA(2);

                if ( (synpred536_InternalKim()) ) {
                    alt299=1;
                }
                else if ( (synpred537_InternalKim()) ) {
                    alt299=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 299, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_DASHID:
                {
                alt299=1;
                }
                break;
            case 158:
                {
                alt299=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 299, 0, input);

                throw nvae;
            }

            switch (alt299) {
                case 1 :
                    // InternalKim.g:14344:6: lv_name_0_1= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_158);
                    lv_name_0_1=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_1,
                      							"org.integratedmodelling.kim.Kim.PathName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14360:6: lv_name_0_2= RULE_LOWERCASE_ID
                    {
                    lv_name_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_158); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_2, grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:14375:6: lv_name_0_3= 'value'
                    {
                    lv_name_0_3=(Token)match(input,158,FOLLOW_158); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_3, grammarAccess.getKeyValuePairAccess().getNameValueKeyword_0_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "name", lv_name_0_3, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:14388:3: ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' )
            int alt300=2;
            int LA300_0 = input.LA(1);

            if ( (LA300_0==217) ) {
                alt300=1;
            }
            else if ( (LA300_0==82) ) {
                alt300=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 300, 0, input);

                throw nvae;
            }
            switch (alt300) {
                case 1 :
                    // InternalKim.g:14389:4: ( (lv_interactive_1_0= '?=' ) )
                    {
                    // InternalKim.g:14389:4: ( (lv_interactive_1_0= '?=' ) )
                    // InternalKim.g:14390:5: (lv_interactive_1_0= '?=' )
                    {
                    // InternalKim.g:14390:5: (lv_interactive_1_0= '?=' )
                    // InternalKim.g:14391:6: lv_interactive_1_0= '?='
                    {
                    lv_interactive_1_0=(Token)match(input,217,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_interactive_1_0, grammarAccess.getKeyValuePairAccess().getInteractiveQuestionMarkEqualsSignKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "interactive", true, "?=");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14404:4: otherlv_2= '='
                    {
                    otherlv_2=(Token)match(input,82,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:14409:3: ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:14410:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:14410:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            // InternalKim.g:14411:5: lv_value_3_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyValuePair"


    // $ANTLR start "entryRuleParameterList"
    // InternalKim.g:14432:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalKim.g:14432:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalKim.g:14433:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalKim.g:14439:1: ruleParameterList returns [EObject current=null] : ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* ) ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_pairs_0_0 = null;

        EObject lv_pairs_2_0 = null;

        EObject lv_singleValue_3_0 = null;

        EObject lv_singleValue_5_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14445:2: ( ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* ) ) )
            // InternalKim.g:14446:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* ) )
            {
            // InternalKim.g:14446:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* ) )
            int alt303=2;
            alt303 = dfa303.predict(input);
            switch (alt303) {
                case 1 :
                    // InternalKim.g:14447:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    {
                    // InternalKim.g:14447:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    // InternalKim.g:14448:4: ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    {
                    // InternalKim.g:14448:4: ( (lv_pairs_0_0= ruleKeyValuePair ) )
                    // InternalKim.g:14449:5: (lv_pairs_0_0= ruleKeyValuePair )
                    {
                    // InternalKim.g:14449:5: (lv_pairs_0_0= ruleKeyValuePair )
                    // InternalKim.g:14450:6: lv_pairs_0_0= ruleKeyValuePair
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_pairs_0_0=ruleKeyValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"pairs",
                      							lv_pairs_0_0,
                      							"org.integratedmodelling.kim.Kim.KeyValuePair");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14467:4: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    loop301:
                    do {
                        int alt301=2;
                        int LA301_0 = input.LA(1);

                        if ( (LA301_0==27) ) {
                            alt301=1;
                        }


                        switch (alt301) {
                    	case 1 :
                    	    // InternalKim.g:14468:5: ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    {
                    	    // InternalKim.g:14468:5: ( ( ',' )=>otherlv_1= ',' )
                    	    // InternalKim.g:14469:6: ( ',' )=>otherlv_1= ','
                    	    {
                    	    otherlv_1=(Token)match(input,27,FOLLOW_159); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_0_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:14475:5: ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    // InternalKim.g:14476:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    {
                    	    // InternalKim.g:14476:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    // InternalKim.g:14477:7: lv_pairs_2_0= ruleKeyValuePair
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_33);
                    	    lv_pairs_2_0=ruleKeyValuePair();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"pairs",
                    	      								lv_pairs_2_0,
                    	      								"org.integratedmodelling.kim.Kim.KeyValuePair");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop301;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14497:3: ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* )
                    {
                    // InternalKim.g:14497:3: ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* )
                    // InternalKim.g:14498:4: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )*
                    {
                    // InternalKim.g:14498:4: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) )
                    // InternalKim.g:14499:5: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    {
                    // InternalKim.g:14499:5: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    // InternalKim.g:14500:6: lv_singleValue_3_0= ruleValueWithIdAndConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_singleValue_3_0=ruleValueWithIdAndConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"singleValue",
                      							lv_singleValue_3_0,
                      							"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14517:4: ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )*
                    loop302:
                    do {
                        int alt302=2;
                        int LA302_0 = input.LA(1);

                        if ( (LA302_0==27) ) {
                            alt302=1;
                        }


                        switch (alt302) {
                    	case 1 :
                    	    // InternalKim.g:14518:5: ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) )
                    	    {
                    	    // InternalKim.g:14518:5: ( ( ',' )=>otherlv_4= ',' )
                    	    // InternalKim.g:14519:6: ( ',' )=>otherlv_4= ','
                    	    {
                    	    otherlv_4=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:14525:5: ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) )
                    	    // InternalKim.g:14526:6: (lv_singleValue_5_0= ruleValueWithIdAndConcept )
                    	    {
                    	    // InternalKim.g:14526:6: (lv_singleValue_5_0= ruleValueWithIdAndConcept )
                    	    // InternalKim.g:14527:7: lv_singleValue_5_0= ruleValueWithIdAndConcept
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_33);
                    	    lv_singleValue_5_0=ruleValueWithIdAndConcept();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"singleValue",
                    	      								lv_singleValue_5_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop302;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleValueWithIdAndConcept"
    // InternalKim.g:14550:1: entryRuleValueWithIdAndConcept returns [EObject current=null] : iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF ;
    public final EObject entryRuleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueWithIdAndConcept = null;


        try {
            // InternalKim.g:14550:62: (iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF )
            // InternalKim.g:14551:2: iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueWithIdAndConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueWithIdAndConcept=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueWithIdAndConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueWithIdAndConcept"


    // $ANTLR start "ruleValueWithIdAndConcept"
    // InternalKim.g:14557:1: ruleValueWithIdAndConcept returns [EObject current=null] : ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_date_7_0= ruleDate ) ) | ( (lv_map_8_0= ruleMap ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( (lv_null_10_0= 'unknown' ) ) ) ;
    public final EObject ruleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_3_0=null;
        Token lv_id_4_2=null;
        Token lv_id_4_3=null;
        Token lv_id_4_4=null;
        Token lv_null_10_0=null;
        EObject lv_concept_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_literal_2_0 = null;

        AntlrDatatypeRuleToken lv_id_4_1 = null;

        EObject lv_list_5_0 = null;

        EObject lv_table_6_0 = null;

        EObject lv_date_7_0 = null;

        EObject lv_map_8_0 = null;

        EObject lv_quantity_9_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14563:2: ( ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_date_7_0= ruleDate ) ) | ( (lv_map_8_0= ruleMap ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( (lv_null_10_0= 'unknown' ) ) ) )
            // InternalKim.g:14564:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_date_7_0= ruleDate ) ) | ( (lv_map_8_0= ruleMap ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( (lv_null_10_0= 'unknown' ) ) )
            {
            // InternalKim.g:14564:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_date_7_0= ruleDate ) ) | ( (lv_map_8_0= ruleMap ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( (lv_null_10_0= 'unknown' ) ) )
            int alt305=11;
            alt305 = dfa305.predict(input);
            switch (alt305) {
                case 1 :
                    // InternalKim.g:14565:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:14565:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
                    // InternalKim.g:14566:4: (lv_concept_0_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:14566:4: (lv_concept_0_0= ruleConceptDeclaration )
                    // InternalKim.g:14567:5: lv_concept_0_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptConceptDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_0_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_0_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14585:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:14585:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:14586:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:14586:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:14587:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14605:3: ( (lv_literal_2_0= ruleLiteral ) )
                    {
                    // InternalKim.g:14605:3: ( (lv_literal_2_0= ruleLiteral ) )
                    // InternalKim.g:14606:4: (lv_literal_2_0= ruleLiteral )
                    {
                    // InternalKim.g:14606:4: (lv_literal_2_0= ruleLiteral )
                    // InternalKim.g:14607:5: lv_literal_2_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_2_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_2_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14625:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:14625:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    // InternalKim.g:14626:4: (lv_expr_3_0= RULE_EXPR )
                    {
                    // InternalKim.g:14626:4: (lv_expr_3_0= RULE_EXPR )
                    // InternalKim.g:14627:5: lv_expr_3_0= RULE_EXPR
                    {
                    lv_expr_3_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_3_0, grammarAccess.getValueWithIdAndConceptAccess().getExprEXPRTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_3_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14644:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:14644:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:14645:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:14645:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:14646:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:14646:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
                    int alt304=4;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        int LA304_1 = input.LA(2);

                        if ( (synpred548_InternalKim()) ) {
                            alt304=1;
                        }
                        else if ( (synpred549_InternalKim()) ) {
                            alt304=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 304, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        int LA304_2 = input.LA(2);

                        if ( (synpred548_InternalKim()) ) {
                            alt304=1;
                        }
                        else if ( (synpred550_InternalKim()) ) {
                            alt304=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 304, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_LOWERCASE_DASHID:
                        {
                        alt304=1;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt304=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 304, 0, input);

                        throw nvae;
                    }

                    switch (alt304) {
                        case 1 :
                            // InternalKim.g:14647:6: lv_id_4_1= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_4_0_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_4_1=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_4_1,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14663:6: lv_id_4_2= RULE_LOWERCASE_ID
                            {
                            lv_id_4_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_2, grammarAccess.getValueWithIdAndConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_4_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:14678:6: lv_id_4_3= RULE_UPPERCASE_ID
                            {
                            lv_id_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_3, grammarAccess.getValueWithIdAndConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_4_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_3,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:14693:6: lv_id_4_4= RULE_CAMELCASE_ID
                            {
                            lv_id_4_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_4, grammarAccess.getValueWithIdAndConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_4_0_3());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_4,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:14711:3: ( (lv_list_5_0= ruleList ) )
                    {
                    // InternalKim.g:14711:3: ( (lv_list_5_0= ruleList ) )
                    // InternalKim.g:14712:4: (lv_list_5_0= ruleList )
                    {
                    // InternalKim.g:14712:4: (lv_list_5_0= ruleList )
                    // InternalKim.g:14713:5: lv_list_5_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_5_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_5_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:14731:3: ( (lv_table_6_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:14731:3: ( (lv_table_6_0= ruleLookupTable ) )
                    // InternalKim.g:14732:4: (lv_table_6_0= ruleLookupTable )
                    {
                    // InternalKim.g:14732:4: (lv_table_6_0= ruleLookupTable )
                    // InternalKim.g:14733:5: lv_table_6_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getTableLookupTableParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_6_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_6_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:14751:3: ( (lv_date_7_0= ruleDate ) )
                    {
                    // InternalKim.g:14751:3: ( (lv_date_7_0= ruleDate ) )
                    // InternalKim.g:14752:4: (lv_date_7_0= ruleDate )
                    {
                    // InternalKim.g:14752:4: (lv_date_7_0= ruleDate )
                    // InternalKim.g:14753:5: lv_date_7_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getDateDateParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_7_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_7_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:14771:3: ( (lv_map_8_0= ruleMap ) )
                    {
                    // InternalKim.g:14771:3: ( (lv_map_8_0= ruleMap ) )
                    // InternalKim.g:14772:4: (lv_map_8_0= ruleMap )
                    {
                    // InternalKim.g:14772:4: (lv_map_8_0= ruleMap )
                    // InternalKim.g:14773:5: lv_map_8_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getMapMapParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_8_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_8_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:14791:3: ( (lv_quantity_9_0= ruleQuantity ) )
                    {
                    // InternalKim.g:14791:3: ( (lv_quantity_9_0= ruleQuantity ) )
                    // InternalKim.g:14792:4: (lv_quantity_9_0= ruleQuantity )
                    {
                    // InternalKim.g:14792:4: (lv_quantity_9_0= ruleQuantity )
                    // InternalKim.g:14793:5: lv_quantity_9_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getQuantityQuantityParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_9_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_9_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:14811:3: ( (lv_null_10_0= 'unknown' ) )
                    {
                    // InternalKim.g:14811:3: ( (lv_null_10_0= 'unknown' ) )
                    // InternalKim.g:14812:4: (lv_null_10_0= 'unknown' )
                    {
                    // InternalKim.g:14812:4: (lv_null_10_0= 'unknown' )
                    // InternalKim.g:14813:5: lv_null_10_0= 'unknown'
                    {
                    lv_null_10_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_10_0, grammarAccess.getValueWithIdAndConceptAccess().getNullUnknownKeyword_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueWithIdAndConcept"


    // $ANTLR start "entryRuleValue"
    // InternalKim.g:14829:1: entryRuleValue returns [EObject current=null] : iv_ruleValue= ruleValue EOF ;
    public final EObject entryRuleValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValue = null;


        try {
            // InternalKim.g:14829:46: (iv_ruleValue= ruleValue EOF )
            // InternalKim.g:14830:2: iv_ruleValue= ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValue=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // InternalKim.g:14836:1: ruleValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) ) ;
    public final EObject ruleValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_0=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_11_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;

        EObject lv_table_7_0 = null;

        EObject lv_quantity_8_0 = null;

        EObject lv_date_9_0 = null;

        EObject lv_map_10_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14842:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) ) )
            // InternalKim.g:14843:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )
            {
            // InternalKim.g:14843:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )
            int alt308=10;
            alt308 = dfa308.predict(input);
            switch (alt308) {
                case 1 :
                    // InternalKim.g:14844:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:14844:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:14845:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:14845:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:14846:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14864:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:14864:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:14865:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:14865:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:14866:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14884:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? )
                    {
                    // InternalKim.g:14884:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? )
                    // InternalKim.g:14885:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )?
                    {
                    // InternalKim.g:14885:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:14886:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:14886:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:14887:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:14903:4: (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )?
                    int alt306=2;
                    int LA306_0 = input.LA(1);

                    if ( (LA306_0==48) ) {
                        alt306=1;
                    }
                    switch (alt306) {
                        case 1 :
                            // InternalKim.g:14904:5: otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) )
                            {
                            otherlv_3=(Token)match(input,48,FOLLOW_10); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:14908:5: ( (lv_language_4_0= RULE_UPPERCASE_ID ) )
                            // InternalKim.g:14909:6: (lv_language_4_0= RULE_UPPERCASE_ID )
                            {
                            // InternalKim.g:14909:6: (lv_language_4_0= RULE_UPPERCASE_ID )
                            // InternalKim.g:14910:7: lv_language_4_0= RULE_UPPERCASE_ID
                            {
                            lv_language_4_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_language_4_0, grammarAccess.getValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getValueRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"language",
                              								lv_language_4_0,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14929:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:14929:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:14930:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:14930:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:14931:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:14931:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt307=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt307=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt307=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt307=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 307, 0, input);

                        throw nvae;
                    }

                    switch (alt307) {
                        case 1 :
                            // InternalKim.g:14932:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14947:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:14962:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14980:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:14980:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:14981:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:14981:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:14982:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:15000:3: ( (lv_table_7_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:15000:3: ( (lv_table_7_0= ruleLookupTable ) )
                    // InternalKim.g:15001:4: (lv_table_7_0= ruleLookupTable )
                    {
                    // InternalKim.g:15001:4: (lv_table_7_0= ruleLookupTable )
                    // InternalKim.g:15002:5: lv_table_7_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getTableLookupTableParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_7_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_7_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:15020:3: ( (lv_quantity_8_0= ruleQuantity ) )
                    {
                    // InternalKim.g:15020:3: ( (lv_quantity_8_0= ruleQuantity ) )
                    // InternalKim.g:15021:4: (lv_quantity_8_0= ruleQuantity )
                    {
                    // InternalKim.g:15021:4: (lv_quantity_8_0= ruleQuantity )
                    // InternalKim.g:15022:5: lv_quantity_8_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getQuantityQuantityParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_8_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_8_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:15040:3: ( (lv_date_9_0= ruleDate ) )
                    {
                    // InternalKim.g:15040:3: ( (lv_date_9_0= ruleDate ) )
                    // InternalKim.g:15041:4: (lv_date_9_0= ruleDate )
                    {
                    // InternalKim.g:15041:4: (lv_date_9_0= ruleDate )
                    // InternalKim.g:15042:5: lv_date_9_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getDateDateParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_9_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_9_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:15060:3: ( (lv_map_10_0= ruleMap ) )
                    {
                    // InternalKim.g:15060:3: ( (lv_map_10_0= ruleMap ) )
                    // InternalKim.g:15061:4: (lv_map_10_0= ruleMap )
                    {
                    // InternalKim.g:15061:4: (lv_map_10_0= ruleMap )
                    // InternalKim.g:15062:5: lv_map_10_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getMapMapParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_10_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_10_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:15080:3: ( (lv_null_11_0= 'unknown' ) )
                    {
                    // InternalKim.g:15080:3: ( (lv_null_11_0= 'unknown' ) )
                    // InternalKim.g:15081:4: (lv_null_11_0= 'unknown' )
                    {
                    // InternalKim.g:15081:4: (lv_null_11_0= 'unknown' )
                    // InternalKim.g:15082:5: lv_null_11_0= 'unknown'
                    {
                    lv_null_11_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_11_0, grammarAccess.getValueAccess().getNullUnknownKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleLiteralValueWithConcept"
    // InternalKim.g:15098:1: entryRuleLiteralValueWithConcept returns [EObject current=null] : iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF ;
    public final EObject entryRuleLiteralValueWithConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralValueWithConcept = null;


        try {
            // InternalKim.g:15098:64: (iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF )
            // InternalKim.g:15099:2: iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueWithConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralValueWithConcept=ruleLiteralValueWithConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralValueWithConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralValueWithConcept"


    // $ANTLR start "ruleLiteralValueWithConcept"
    // InternalKim.g:15105:1: ruleLiteralValueWithConcept returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) ) ;
    public final EObject ruleLiteralValueWithConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_3_0=null;
        Token lv_id_6_1=null;
        Token lv_id_6_2=null;
        Token lv_id_6_3=null;
        EObject lv_literal_0_0 = null;

        EObject lv_concept_1_0 = null;

        EObject lv_function_2_0 = null;

        EObject lv_quantity_4_0 = null;

        EObject lv_date_5_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15111:2: ( ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) ) )
            // InternalKim.g:15112:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )
            {
            // InternalKim.g:15112:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )
            int alt310=7;
            alt310 = dfa310.predict(input);
            switch (alt310) {
                case 1 :
                    // InternalKim.g:15113:3: ( (lv_literal_0_0= ruleLiteral ) )
                    {
                    // InternalKim.g:15113:3: ( (lv_literal_0_0= ruleLiteral ) )
                    // InternalKim.g:15114:4: (lv_literal_0_0= ruleLiteral )
                    {
                    // InternalKim.g:15114:4: (lv_literal_0_0= ruleLiteral )
                    // InternalKim.g:15115:5: lv_literal_0_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getLiteralLiteralParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15133:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:15133:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    // InternalKim.g:15134:4: (lv_concept_1_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:15134:4: (lv_concept_1_0= ruleConceptDeclaration )
                    // InternalKim.g:15135:5: lv_concept_1_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getConceptConceptDeclarationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_1_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_1_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:15153:3: ( (lv_function_2_0= ruleFunction ) )
                    {
                    // InternalKim.g:15153:3: ( (lv_function_2_0= ruleFunction ) )
                    // InternalKim.g:15154:4: (lv_function_2_0= ruleFunction )
                    {
                    // InternalKim.g:15154:4: (lv_function_2_0= ruleFunction )
                    // InternalKim.g:15155:5: lv_function_2_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getFunctionFunctionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_2_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_2_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:15173:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:15173:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    // InternalKim.g:15174:4: (lv_expr_3_0= RULE_EXPR )
                    {
                    // InternalKim.g:15174:4: (lv_expr_3_0= RULE_EXPR )
                    // InternalKim.g:15175:5: lv_expr_3_0= RULE_EXPR
                    {
                    lv_expr_3_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_3_0, grammarAccess.getLiteralValueWithConceptAccess().getExprEXPRTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_3_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:15192:3: ( (lv_quantity_4_0= ruleQuantity ) )
                    {
                    // InternalKim.g:15192:3: ( (lv_quantity_4_0= ruleQuantity ) )
                    // InternalKim.g:15193:4: (lv_quantity_4_0= ruleQuantity )
                    {
                    // InternalKim.g:15193:4: (lv_quantity_4_0= ruleQuantity )
                    // InternalKim.g:15194:5: lv_quantity_4_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getQuantityQuantityParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_4_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_4_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:15212:3: ( (lv_date_5_0= ruleDate ) )
                    {
                    // InternalKim.g:15212:3: ( (lv_date_5_0= ruleDate ) )
                    // InternalKim.g:15213:4: (lv_date_5_0= ruleDate )
                    {
                    // InternalKim.g:15213:4: (lv_date_5_0= ruleDate )
                    // InternalKim.g:15214:5: lv_date_5_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getDateDateParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_5_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_5_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:15232:3: ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:15232:3: ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:15233:4: ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:15233:4: ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:15234:5: (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:15234:5: (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID )
                    int alt309=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt309=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt309=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt309=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 309, 0, input);

                        throw nvae;
                    }

                    switch (alt309) {
                        case 1 :
                            // InternalKim.g:15235:6: lv_id_6_1= RULE_LOWERCASE_ID
                            {
                            lv_id_6_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_1, grammarAccess.getLiteralValueWithConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:15250:6: lv_id_6_2= RULE_UPPERCASE_ID
                            {
                            lv_id_6_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_2, grammarAccess.getLiteralValueWithConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_6_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:15265:6: lv_id_6_3= RULE_CAMELCASE_ID
                            {
                            lv_id_6_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_3, grammarAccess.getLiteralValueWithConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_6_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralValueWithConcept"


    // $ANTLR start "entryRuleFunction"
    // InternalKim.g:15286:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalKim.g:15286:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalKim.g:15287:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalKim.g:15293:1: ruleFunction returns [EObject current=null] : ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15299:2: ( ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) )
            // InternalKim.g:15300:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            {
            // InternalKim.g:15300:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            // InternalKim.g:15301:3: ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
            {
            // InternalKim.g:15301:3: ( (lv_name_0_0= rulePathName ) )
            // InternalKim.g:15302:4: (lv_name_0_0= rulePathName )
            {
            // InternalKim.g:15302:4: (lv_name_0_0= rulePathName )
            // InternalKim.g:15303:5: lv_name_0_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getNamePathNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_39);
            lv_name_0_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,38,FOLLOW_151); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:15324:3: ( (lv_parameters_2_0= ruleParameterList ) )?
            int alt311=2;
            int LA311_0 = input.LA(1);

            if ( ((LA311_0>=RULE_UPPERCASE_ID && LA311_0<=RULE_STRING)||(LA311_0>=RULE_EXPR && LA311_0<=RULE_LOWERCASE_DASHID)||(LA311_0>=28 && LA311_0<=29)||LA311_0==38||(LA311_0>=49 && LA311_0<=50)||(LA311_0>=130 && LA311_0<=131)||(LA311_0>=139 && LA311_0<=140)||(LA311_0>=142 && LA311_0<=160)||LA311_0==214||(LA311_0>=251 && LA311_0<=252)) ) {
                alt311=1;
            }
            switch (alt311) {
                case 1 :
                    // InternalKim.g:15325:4: (lv_parameters_2_0= ruleParameterList )
                    {
                    // InternalKim.g:15325:4: (lv_parameters_2_0= ruleParameterList )
                    // InternalKim.g:15326:5: lv_parameters_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_91);
                    lv_parameters_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionRule());
                      					}
                      					set(
                      						current,
                      						"parameters",
                      						lv_parameters_2_0,
                      						"org.integratedmodelling.kim.Kim.ParameterList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleCONCEPT_TYPE"
    // InternalKim.g:15351:1: entryRuleCONCEPT_TYPE returns [String current=null] : iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF ;
    public final String entryRuleCONCEPT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCONCEPT_TYPE = null;


        try {
            // InternalKim.g:15351:52: (iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF )
            // InternalKim.g:15352:2: iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCONCEPT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCONCEPT_TYPE=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCONCEPT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCONCEPT_TYPE"


    // $ANTLR start "ruleCONCEPT_TYPE"
    // InternalKim.g:15358:1: ruleCONCEPT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) ;
    public final AntlrDatatypeRuleToken ruleCONCEPT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DECLARABLE_TYPE_1 = null;



        	enterRule();

        try {
            // InternalKim.g:15364:2: ( (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) )
            // InternalKim.g:15365:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            {
            // InternalKim.g:15365:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            int alt312=2;
            int LA312_0 = input.LA(1);

            if ( (LA312_0==218) ) {
                alt312=1;
            }
            else if ( (LA312_0==95||LA312_0==160||(LA312_0>=167 && LA312_0<=168)||LA312_0==190||(LA312_0>=211 && LA312_0<=213)||(LA312_0>=219 && LA312_0<=247)) ) {
                alt312=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 312, 0, input);

                throw nvae;
            }
            switch (alt312) {
                case 1 :
                    // InternalKim.g:15366:3: kw= 'quality'
                    {
                    kw=(Token)match(input,218,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCONCEPT_TYPEAccess().getQualityKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15372:3: this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCONCEPT_TYPEAccess().getDECLARABLE_TYPEParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DECLARABLE_TYPE_1=ruleDECLARABLE_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DECLARABLE_TYPE_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCONCEPT_TYPE"


    // $ANTLR start "entryRuleDECLARABLE_TYPE"
    // InternalKim.g:15386:1: entryRuleDECLARABLE_TYPE returns [String current=null] : iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF ;
    public final String entryRuleDECLARABLE_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDECLARABLE_TYPE = null;


        try {
            // InternalKim.g:15386:55: (iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF )
            // InternalKim.g:15387:2: iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDECLARABLE_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDECLARABLE_TYPE=ruleDECLARABLE_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDECLARABLE_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDECLARABLE_TYPE"


    // $ANTLR start "ruleDECLARABLE_TYPE"
    // InternalKim.g:15393:1: ruleDECLARABLE_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) ;
    public final AntlrDatatypeRuleToken ruleDECLARABLE_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EXTENSIVE_PROPERTY_6 = null;

        AntlrDatatypeRuleToken this_INTENSIVE_PROPERTY_7 = null;

        AntlrDatatypeRuleToken this_AGENT_TYPE_8 = null;

        AntlrDatatypeRuleToken this_TRAIT_9 = null;



        	enterRule();

        try {
            // InternalKim.g:15399:2: ( (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) )
            // InternalKim.g:15400:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            {
            // InternalKim.g:15400:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            int alt313=10;
            switch ( input.LA(1) ) {
            case 219:
                {
                alt313=1;
                }
                break;
            case 220:
                {
                alt313=2;
                }
                break;
            case 221:
                {
                alt313=3;
                }
                break;
            case 168:
                {
                alt313=4;
                }
                break;
            case 222:
                {
                alt313=5;
                }
                break;
            case 213:
                {
                alt313=6;
                }
                break;
            case 224:
            case 225:
            case 226:
            case 227:
            case 228:
            case 229:
            case 230:
            case 231:
                {
                alt313=7;
                }
                break;
            case 232:
            case 233:
            case 234:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
            case 241:
            case 242:
            case 243:
            case 244:
                {
                alt313=8;
                }
                break;
            case 167:
            case 245:
            case 246:
            case 247:
                {
                alt313=9;
                }
                break;
            case 95:
            case 160:
            case 190:
            case 211:
            case 212:
            case 223:
                {
                alt313=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 313, 0, input);

                throw nvae;
            }

            switch (alt313) {
                case 1 :
                    // InternalKim.g:15401:3: kw= 'class'
                    {
                    kw=(Token)match(input,219,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getClassKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15407:3: kw= 'quantity'
                    {
                    kw=(Token)match(input,220,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getQuantityKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15413:3: kw= 'configuration'
                    {
                    kw=(Token)match(input,221,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getConfigurationKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15419:3: kw= 'relationship'
                    {
                    kw=(Token)match(input,168,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getRelationshipKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:15425:3: kw= 'bond'
                    {
                    kw=(Token)match(input,222,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getBondKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:15431:3: kw= 'extent'
                    {
                    kw=(Token)match(input,213,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getExtentKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:15437:3: this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getEXTENSIVE_PROPERTYParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EXTENSIVE_PROPERTY_6=ruleEXTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EXTENSIVE_PROPERTY_6);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:15448:3: this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getINTENSIVE_PROPERTYParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_INTENSIVE_PROPERTY_7=ruleINTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INTENSIVE_PROPERTY_7);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:15459:3: this_AGENT_TYPE_8= ruleAGENT_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getAGENT_TYPEParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AGENT_TYPE_8=ruleAGENT_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_AGENT_TYPE_8);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:15470:3: this_TRAIT_9= ruleTRAIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getTRAITParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TRAIT_9=ruleTRAIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_TRAIT_9);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDECLARABLE_TYPE"


    // $ANTLR start "entryRuleTRAIT"
    // InternalKim.g:15484:1: entryRuleTRAIT returns [String current=null] : iv_ruleTRAIT= ruleTRAIT EOF ;
    public final String entryRuleTRAIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTRAIT = null;


        try {
            // InternalKim.g:15484:45: (iv_ruleTRAIT= ruleTRAIT EOF )
            // InternalKim.g:15485:2: iv_ruleTRAIT= ruleTRAIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTRAITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTRAIT=ruleTRAIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTRAIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTRAIT"


    // $ANTLR start "ruleTRAIT"
    // InternalKim.g:15491:1: ruleTRAIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) ;
    public final AntlrDatatypeRuleToken ruleTRAIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15497:2: ( (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) )
            // InternalKim.g:15498:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            {
            // InternalKim.g:15498:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            int alt314=6;
            switch ( input.LA(1) ) {
            case 223:
                {
                alt314=1;
                }
                break;
            case 211:
                {
                alt314=2;
                }
                break;
            case 160:
                {
                alt314=3;
                }
                break;
            case 190:
                {
                alt314=4;
                }
                break;
            case 212:
                {
                alt314=5;
                }
                break;
            case 95:
                {
                alt314=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 314, 0, input);

                throw nvae;
            }

            switch (alt314) {
                case 1 :
                    // InternalKim.g:15499:3: kw= 'ordering'
                    {
                    kw=(Token)match(input,223,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getOrderingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15505:3: kw= 'attribute'
                    {
                    kw=(Token)match(input,211,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getAttributeKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15511:3: kw= 'identity'
                    {
                    kw=(Token)match(input,160,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getIdentityKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15517:3: kw= 'role'
                    {
                    kw=(Token)match(input,190,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRoleKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:15523:3: kw= 'realm'
                    {
                    kw=(Token)match(input,212,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRealmKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:15529:3: kw= 'domain'
                    {
                    kw=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getDomainKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTRAIT"


    // $ANTLR start "entryRuleEXTENSIVE_PROPERTY"
    // InternalKim.g:15538:1: entryRuleEXTENSIVE_PROPERTY returns [String current=null] : iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF ;
    public final String entryRuleEXTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEXTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:15538:58: (iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF )
            // InternalKim.g:15539:2: iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEXTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEXTENSIVE_PROPERTY=ruleEXTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEXTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEXTENSIVE_PROPERTY"


    // $ANTLR start "ruleEXTENSIVE_PROPERTY"
    // InternalKim.g:15545:1: ruleEXTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) ;
    public final AntlrDatatypeRuleToken ruleEXTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15551:2: ( (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) )
            // InternalKim.g:15552:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            {
            // InternalKim.g:15552:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            int alt315=8;
            switch ( input.LA(1) ) {
            case 224:
                {
                alt315=1;
                }
                break;
            case 225:
                {
                alt315=2;
                }
                break;
            case 226:
                {
                alt315=3;
                }
                break;
            case 227:
                {
                alt315=4;
                }
                break;
            case 228:
                {
                alt315=5;
                }
                break;
            case 229:
                {
                alt315=6;
                }
                break;
            case 230:
                {
                alt315=7;
                }
                break;
            case 231:
                {
                alt315=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 315, 0, input);

                throw nvae;
            }

            switch (alt315) {
                case 1 :
                    // InternalKim.g:15553:3: kw= 'amount'
                    {
                    kw=(Token)match(input,224,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAmountKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15559:3: kw= 'length'
                    {
                    kw=(Token)match(input,225,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getLengthKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15565:3: kw= 'mass'
                    {
                    kw=(Token)match(input,226,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMassKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15571:3: kw= 'volume'
                    {
                    kw=(Token)match(input,227,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getVolumeKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:15577:3: kw= 'weight'
                    {
                    kw=(Token)match(input,228,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getWeightKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:15583:3: kw= 'money'
                    {
                    kw=(Token)match(input,229,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMoneyKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:15589:3: kw= 'duration'
                    {
                    kw=(Token)match(input,230,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getDurationKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:15595:3: kw= 'area'
                    {
                    kw=(Token)match(input,231,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAreaKeyword_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEXTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleINTENSIVE_PROPERTY"
    // InternalKim.g:15604:1: entryRuleINTENSIVE_PROPERTY returns [String current=null] : iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF ;
    public final String entryRuleINTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleINTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:15604:58: (iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF )
            // InternalKim.g:15605:2: iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleINTENSIVE_PROPERTY=ruleINTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleINTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleINTENSIVE_PROPERTY"


    // $ANTLR start "ruleINTENSIVE_PROPERTY"
    // InternalKim.g:15611:1: ruleINTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) ;
    public final AntlrDatatypeRuleToken ruleINTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15617:2: ( (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) )
            // InternalKim.g:15618:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            {
            // InternalKim.g:15618:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            int alt316=13;
            switch ( input.LA(1) ) {
            case 232:
                {
                alt316=1;
                }
                break;
            case 233:
                {
                alt316=2;
                }
                break;
            case 234:
                {
                alt316=3;
                }
                break;
            case 235:
                {
                alt316=4;
                }
                break;
            case 236:
                {
                alt316=5;
                }
                break;
            case 237:
                {
                alt316=6;
                }
                break;
            case 238:
                {
                alt316=7;
                }
                break;
            case 239:
                {
                alt316=8;
                }
                break;
            case 240:
                {
                alt316=9;
                }
                break;
            case 241:
                {
                alt316=10;
                }
                break;
            case 242:
                {
                alt316=11;
                }
                break;
            case 243:
                {
                alt316=12;
                }
                break;
            case 244:
                {
                alt316=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 316, 0, input);

                throw nvae;
            }

            switch (alt316) {
                case 1 :
                    // InternalKim.g:15619:3: kw= 'acceleration'
                    {
                    kw=(Token)match(input,232,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAccelerationKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15625:3: kw= 'energy'
                    {
                    kw=(Token)match(input,233,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEnergyKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15631:3: kw= 'entropy'
                    {
                    kw=(Token)match(input,234,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEntropyKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15637:3: kw= 'priority'
                    {
                    kw=(Token)match(input,235,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPriorityKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:15643:3: kw= 'electric-potential'
                    {
                    kw=(Token)match(input,236,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getElectricPotentialKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:15649:3: kw= 'charge'
                    {
                    kw=(Token)match(input,237,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getChargeKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:15655:3: kw= 'resistance'
                    {
                    kw=(Token)match(input,238,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistanceKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:15661:3: kw= 'resistivity'
                    {
                    kw=(Token)match(input,239,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistivityKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:15667:3: kw= 'pressure'
                    {
                    kw=(Token)match(input,240,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPressureKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:15673:3: kw= 'angle'
                    {
                    kw=(Token)match(input,241,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAngleKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:15679:3: kw= 'velocity'
                    {
                    kw=(Token)match(input,242,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getVelocityKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:15685:3: kw= 'temperature'
                    {
                    kw=(Token)match(input,243,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getTemperatureKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:15691:3: kw= 'viscosity'
                    {
                    kw=(Token)match(input,244,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getViscosityKeyword_12());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleINTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleAGENT_TYPE"
    // InternalKim.g:15700:1: entryRuleAGENT_TYPE returns [String current=null] : iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF ;
    public final String entryRuleAGENT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAGENT_TYPE = null;


        try {
            // InternalKim.g:15700:50: (iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF )
            // InternalKim.g:15701:2: iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAGENT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAGENT_TYPE=ruleAGENT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAGENT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAGENT_TYPE"


    // $ANTLR start "ruleAGENT_TYPE"
    // InternalKim.g:15707:1: ruleAGENT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) ;
    public final AntlrDatatypeRuleToken ruleAGENT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15713:2: ( (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) )
            // InternalKim.g:15714:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            {
            // InternalKim.g:15714:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            int alt317=4;
            switch ( input.LA(1) ) {
            case 245:
                {
                alt317=1;
                }
                break;
            case 246:
                {
                alt317=2;
                }
                break;
            case 167:
                {
                alt317=3;
                }
                break;
            case 247:
                {
                alt317=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 317, 0, input);

                throw nvae;
            }

            switch (alt317) {
                case 1 :
                    // InternalKim.g:15715:3: kw= 'thing'
                    {
                    kw=(Token)match(input,245,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getThingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15721:3: kw= 'process'
                    {
                    kw=(Token)match(input,246,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getProcessKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15727:3: kw= 'agent'
                    {
                    kw=(Token)match(input,167,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getAgentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15733:3: kw= 'event'
                    {
                    kw=(Token)match(input,247,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getEventKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAGENT_TYPE"


    // $ANTLR start "entryRulePROPERTY_TYPE"
    // InternalKim.g:15742:1: entryRulePROPERTY_TYPE returns [String current=null] : iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF ;
    public final String entryRulePROPERTY_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePROPERTY_TYPE = null;


        try {
            // InternalKim.g:15742:53: (iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF )
            // InternalKim.g:15743:2: iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPROPERTY_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePROPERTY_TYPE=rulePROPERTY_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePROPERTY_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePROPERTY_TYPE"


    // $ANTLR start "rulePROPERTY_TYPE"
    // InternalKim.g:15749:1: rulePROPERTY_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'functional' | kw= 'structural' ) ;
    public final AntlrDatatypeRuleToken rulePROPERTY_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15755:2: ( (kw= 'functional' | kw= 'structural' ) )
            // InternalKim.g:15756:2: (kw= 'functional' | kw= 'structural' )
            {
            // InternalKim.g:15756:2: (kw= 'functional' | kw= 'structural' )
            int alt318=2;
            int LA318_0 = input.LA(1);

            if ( (LA318_0==248) ) {
                alt318=1;
            }
            else if ( (LA318_0==249) ) {
                alt318=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 318, 0, input);

                throw nvae;
            }
            switch (alt318) {
                case 1 :
                    // InternalKim.g:15757:3: kw= 'functional'
                    {
                    kw=(Token)match(input,248,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getFunctionalKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15763:3: kw= 'structural'
                    {
                    kw=(Token)match(input,249,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getStructuralKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePROPERTY_TYPE"


    // $ANTLR start "entryRuleDependencyObservableSemantics"
    // InternalKim.g:15772:1: entryRuleDependencyObservableSemantics returns [EObject current=null] : iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF ;
    public final EObject entryRuleDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependencyObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:15776:2: (iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF )
            // InternalKim.g:15777:2: iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependencyObservableSemantics=ruleDependencyObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependencyObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDependencyObservableSemantics"


    // $ANTLR start "ruleDependencyObservableSemantics"
    // InternalKim.g:15786:1: ruleDependencyObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token lv_optional_18_0=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;

        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:15795:2: ( ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:15796:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:15796:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:15797:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:15797:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?
            int alt319=2;
            alt319 = dfa319.predict(input);
            switch (alt319) {
                case 1 :
                    // InternalKim.g:15798:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:15798:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
                    // InternalKim.g:15799:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    {
                    // InternalKim.g:15799:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    // InternalKim.g:15800:6: lv_value_0_0= ruleLiteralValueWithConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleLiteralValueWithConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,25,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDependencyObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:15822:3: ( (lv_generic_2_0= 'any' ) )?
            int alt320=2;
            int LA320_0 = input.LA(1);

            if ( (LA320_0==112) ) {
                alt320=1;
            }
            switch (alt320) {
                case 1 :
                    // InternalKim.g:15823:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:15823:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:15824:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,112,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getDependencyObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:15836:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:15837:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:15837:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:15838:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_94);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:15855:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:15856:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:15856:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:15857:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:15860:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:15861:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:15861:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop326:
            do {
                int alt326=7;
                alt326 = dfa326.predict(input);
                switch (alt326) {
            	case 1 :
            	    // InternalKim.g:15862:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:15862:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:15863:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:15863:126: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:15864:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:15867:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:15867:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:15867:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:15867:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,35,FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getDependencyObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,36,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getDependencyObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:15875:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:15876:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:15876:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:15877:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:15900:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:15900:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:15901:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:15901:126: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:15902:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:15905:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:15905:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:15905:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt322=2;
            	    int LA322_0 = input.LA(1);

            	    if ( (LA322_0==48) ) {
            	        alt322=1;
            	    }
            	    else if ( (LA322_0==113) ) {
            	        alt322=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 322, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt322) {
            	        case 1 :
            	            // InternalKim.g:15905:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:15905:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:15906:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            otherlv_8=(Token)match(input,48,FOLLOW_95); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getDependencyObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:15910:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt321=2;
            	            int LA321_0 = input.LA(1);

            	            if ( (LA321_0==EOF||LA321_0==RULE_LOWERCASE_ID||(LA321_0>=RULE_CAMELCASE_ID && LA321_0<=RULE_INT)||LA321_0==RULE_BACKCASE_ID||LA321_0==20||LA321_0==27||(LA321_0>=31 && LA321_0<=33)||LA321_0==35||(LA321_0>=37 && LA321_0<=38)||LA321_0==40||LA321_0==42||LA321_0==48||(LA321_0>=54 && LA321_0<=56)||(LA321_0>=62 && LA321_0<=67)||(LA321_0>=76 && LA321_0<=88)||LA321_0==107||(LA321_0>=113 && LA321_0<=120)||(LA321_0>=251 && LA321_0<=252)||LA321_0==259) ) {
            	                alt321=1;
            	            }
            	            else if ( (LA321_0==RULE_UPPERCASE_ID) ) {
            	                int LA321_2 = input.LA(2);

            	                if ( (LA321_2==250) ) {
            	                    alt321=2;
            	                }
            	                else if ( (LA321_2==EOF||LA321_2==RULE_INT||LA321_2==20||LA321_2==27||(LA321_2>=31 && LA321_2<=33)||LA321_2==35||LA321_2==37||LA321_2==40||LA321_2==42||LA321_2==48||(LA321_2>=54 && LA321_2<=56)||(LA321_2>=62 && LA321_2<=67)||(LA321_2>=76 && LA321_2<=88)||LA321_2==107||(LA321_2>=113 && LA321_2<=120)||(LA321_2>=251 && LA321_2<=252)||LA321_2==259) ) {
            	                    alt321=1;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 321, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 321, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt321) {
            	                case 1 :
            	                    // InternalKim.g:15911:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:15911:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:15912:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:15912:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:15913:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_94);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:15931:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:15931:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:15932:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:15932:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:15933:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_94);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:15953:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:15953:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:15954:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            otherlv_11=(Token)match(input,113,FOLLOW_95); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_11, grammarAccess.getDependencyObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:15958:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:15959:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:15959:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:15960:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_94);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:15984:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:15984:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:15985:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:15985:126: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:15986:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:15989:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    // InternalKim.g:15989:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:15989:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    // InternalKim.g:15989:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:15989:20: ( (lv_from_13_0= ruleNumber ) )
            	    // InternalKim.g:15990:10: (lv_from_13_0= ruleNumber )
            	    {
            	    // InternalKim.g:15990:10: (lv_from_13_0= ruleNumber )
            	    // InternalKim.g:15991:11: lv_from_13_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_from_13_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_13_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_14=(Token)match(input,36,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getDependencyObservableSemanticsAccess().getToKeyword_3_2_1());
            	      								
            	    }
            	    // InternalKim.g:16012:9: ( (lv_to_15_0= ruleNumber ) )
            	    // InternalKim.g:16013:10: (lv_to_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:16013:10: (lv_to_15_0= ruleNumber )
            	    // InternalKim.g:16014:11: lv_to_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_to_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:16037:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:16037:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:16038:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:16038:126: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:16039:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:16042:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:16042:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16042:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    // InternalKim.g:16042:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:16042:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
            	    // InternalKim.g:16043:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:16043:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    // InternalKim.g:16044:11: lv_valueOperators_16_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_valueOperators_16_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_16_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:16061:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    loop323:
            	    do {
            	        int alt323=2;
            	        alt323 = dfa323.predict(input);
            	        switch (alt323) {
            	    	case 1 :
            	    	    // InternalKim.g:16062:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:16062:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    // InternalKim.g:16063:11: lv_valueOperators_17_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_94);
            	    	    lv_valueOperators_17_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_17_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop323;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:16086:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:16086:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
            	    // InternalKim.g:16087:5: {...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:16087:126: ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
            	    // InternalKim.g:16088:6: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:16091:9: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
            	    // InternalKim.g:16091:10: {...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16091:19: ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
            	    int alt324=2;
            	    int LA324_0 = input.LA(1);

            	    if ( (LA324_0==114) ) {
            	        alt324=1;
            	    }
            	    else if ( (LA324_0==115) ) {
            	        alt324=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 324, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt324) {
            	        case 1 :
            	            // InternalKim.g:16091:20: ( (lv_optional_18_0= 'optional' ) )
            	            {
            	            // InternalKim.g:16091:20: ( (lv_optional_18_0= 'optional' ) )
            	            // InternalKim.g:16092:10: (lv_optional_18_0= 'optional' )
            	            {
            	            // InternalKim.g:16092:10: (lv_optional_18_0= 'optional' )
            	            // InternalKim.g:16093:11: lv_optional_18_0= 'optional'
            	            {
            	            lv_optional_18_0=(Token)match(input,114,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_18_0, grammarAccess.getDependencyObservableSemanticsAccess().getOptionalOptionalKeyword_3_4_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16106:9: otherlv_19= 'required'
            	            {
            	            otherlv_19=(Token)match(input,115,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_19, grammarAccess.getDependencyObservableSemanticsAccess().getRequiredKeyword_3_4_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:16116:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16116:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:16117:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:16117:126: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:16118:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:16121:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:16121:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16121:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:16121:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    {
            	    otherlv_20=(Token)match(input,116,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_20, grammarAccess.getDependencyObservableSemanticsAccess().getNamedKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:16125:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    // InternalKim.g:16126:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:16126:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    // InternalKim.g:16127:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    {
            	    // InternalKim.g:16127:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    int alt325=2;
            	    int LA325_0 = input.LA(1);

            	    if ( (LA325_0==RULE_LOWERCASE_ID) ) {
            	        alt325=1;
            	    }
            	    else if ( (LA325_0==RULE_STRING) ) {
            	        alt325=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 325, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt325) {
            	        case 1 :
            	            // InternalKim.g:16128:12: lv_name_21_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_1, grammarAccess.getDependencyObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_5_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16143:12: lv_name_21_2= RULE_STRING
            	            {
            	            lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_2, grammarAccess.getDependencyObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_3_5_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop326;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDependencyObservableSemantics"


    // $ANTLR start "entryRuleAlternativeDependencyObservableSemantics"
    // InternalKim.g:16180:1: entryRuleAlternativeDependencyObservableSemantics returns [EObject current=null] : iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF ;
    public final EObject entryRuleAlternativeDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlternativeDependencyObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16184:2: (iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF )
            // InternalKim.g:16185:2: iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAlternativeDependencyObservableSemantics=ruleAlternativeDependencyObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAlternativeDependencyObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleAlternativeDependencyObservableSemantics"


    // $ANTLR start "ruleAlternativeDependencyObservableSemantics"
    // InternalKim.g:16194:1: ruleAlternativeDependencyObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? ) ;
    public final EObject ruleAlternativeDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token otherlv_18=null;
        Token lv_condition_19_0=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;

        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16203:2: ( ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? ) )
            // InternalKim.g:16204:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? )
            {
            // InternalKim.g:16204:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? )
            // InternalKim.g:16205:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )?
            {
            // InternalKim.g:16205:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?
            int alt327=2;
            alt327 = dfa327.predict(input);
            switch (alt327) {
                case 1 :
                    // InternalKim.g:16206:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:16206:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
                    // InternalKim.g:16207:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    {
                    // InternalKim.g:16207:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    // InternalKim.g:16208:6: lv_value_0_0= ruleLiteralValueWithConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleLiteralValueWithConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,25,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:16230:3: ( (lv_generic_2_0= 'any' ) )?
            int alt328=2;
            int LA328_0 = input.LA(1);

            if ( (LA328_0==112) ) {
                alt328=1;
            }
            switch (alt328) {
                case 1 :
                    // InternalKim.g:16231:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:16231:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:16232:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,112,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:16244:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:16245:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:16245:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:16246:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_160);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:16263:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) )
            // InternalKim.g:16264:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) )
            {
            // InternalKim.g:16264:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) )
            // InternalKim.g:16265:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:16268:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* )
            // InternalKim.g:16269:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*
            {
            // InternalKim.g:16269:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*
            loop332:
            do {
                int alt332=5;
                alt332 = dfa332.predict(input);
                switch (alt332) {
            	case 1 :
            	    // InternalKim.g:16270:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16270:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:16271:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:16271:137: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:16272:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:16275:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:16275:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16275:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:16275:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,35,FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,36,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:16283:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:16284:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:16284:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:16285:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_160);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:16308:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16308:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:16309:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:16309:137: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:16310:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:16313:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:16313:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16313:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt330=2;
            	    int LA330_0 = input.LA(1);

            	    if ( (LA330_0==48) ) {
            	        alt330=1;
            	    }
            	    else if ( (LA330_0==113) ) {
            	        alt330=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 330, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt330) {
            	        case 1 :
            	            // InternalKim.g:16313:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:16313:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:16314:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            otherlv_8=(Token)match(input,48,FOLLOW_161); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:16318:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt329=2;
            	            int LA329_0 = input.LA(1);

            	            if ( (LA329_0==EOF||LA329_0==RULE_LOWERCASE_ID||(LA329_0>=RULE_CAMELCASE_ID && LA329_0<=RULE_INT)||LA329_0==RULE_BACKCASE_ID||LA329_0==27||LA329_0==35||LA329_0==38||(LA329_0>=40 && LA329_0<=41)||LA329_0==44||LA329_0==48||LA329_0==55||(LA329_0>=76 && LA329_0<=88)||LA329_0==107||LA329_0==113||(LA329_0>=117 && LA329_0<=120)||(LA329_0>=251 && LA329_0<=252)||LA329_0==259) ) {
            	                alt329=1;
            	            }
            	            else if ( (LA329_0==RULE_UPPERCASE_ID) ) {
            	                int LA329_2 = input.LA(2);

            	                if ( (LA329_2==EOF||LA329_2==RULE_INT||LA329_2==27||LA329_2==35||(LA329_2>=40 && LA329_2<=41)||LA329_2==44||LA329_2==48||LA329_2==55||(LA329_2>=76 && LA329_2<=88)||LA329_2==107||LA329_2==113||(LA329_2>=117 && LA329_2<=120)||(LA329_2>=251 && LA329_2<=252)||LA329_2==259) ) {
            	                    alt329=1;
            	                }
            	                else if ( (LA329_2==250) ) {
            	                    alt329=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 329, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 329, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt329) {
            	                case 1 :
            	                    // InternalKim.g:16319:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:16319:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:16320:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:16320:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:16321:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_160);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:16339:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:16339:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:16340:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:16340:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:16341:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_160);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16361:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:16361:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:16362:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            otherlv_11=(Token)match(input,113,FOLLOW_162); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_11, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:16366:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:16367:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:16367:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:16368:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_160);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:16392:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16392:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:16393:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:16393:137: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:16394:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:16397:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    // InternalKim.g:16397:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16397:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    // InternalKim.g:16397:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:16397:20: ( (lv_from_13_0= ruleNumber ) )
            	    // InternalKim.g:16398:10: (lv_from_13_0= ruleNumber )
            	    {
            	    // InternalKim.g:16398:10: (lv_from_13_0= ruleNumber )
            	    // InternalKim.g:16399:11: lv_from_13_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_from_13_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_13_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_14=(Token)match(input,36,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToKeyword_3_2_1());
            	      								
            	    }
            	    // InternalKim.g:16420:9: ( (lv_to_15_0= ruleNumber ) )
            	    // InternalKim.g:16421:10: (lv_to_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:16421:10: (lv_to_15_0= ruleNumber )
            	    // InternalKim.g:16422:11: lv_to_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_160);
            	    lv_to_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:16445:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:16445:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:16446:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:16446:137: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:16447:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:16450:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:16450:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16450:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    // InternalKim.g:16450:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:16450:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
            	    // InternalKim.g:16451:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:16451:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    // InternalKim.g:16452:11: lv_valueOperators_16_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_160);
            	    lv_valueOperators_16_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_16_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:16469:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    loop331:
            	    do {
            	        int alt331=2;
            	        alt331 = dfa331.predict(input);
            	        switch (alt331) {
            	    	case 1 :
            	    	    // InternalKim.g:16470:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:16470:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    // InternalKim.g:16471:11: lv_valueOperators_17_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_160);
            	    	    lv_valueOperators_17_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_17_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop331;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop332;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            }

            // InternalKim.g:16501:3: (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )?
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==44) ) {
                alt333=1;
            }
            switch (alt333) {
                case 1 :
                    // InternalKim.g:16502:4: otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) )
                    {
                    otherlv_18=(Token)match(input,44,FOLLOW_163); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getIfKeyword_4_0());
                      			
                    }
                    // InternalKim.g:16506:4: ( (lv_condition_19_0= RULE_EXPR ) )
                    // InternalKim.g:16507:5: (lv_condition_19_0= RULE_EXPR )
                    {
                    // InternalKim.g:16507:5: (lv_condition_19_0= RULE_EXPR )
                    // InternalKim.g:16508:6: lv_condition_19_0= RULE_EXPR
                    {
                    lv_condition_19_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_condition_19_0, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getConditionEXPRTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"condition",
                      							lv_condition_19_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleAlternativeDependencyObservableSemantics"


    // $ANTLR start "entryRuleNamedObservableSemantics"
    // InternalKim.g:16532:1: entryRuleNamedObservableSemantics returns [EObject current=null] : iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF ;
    public final EObject entryRuleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedObservableSemantics = null;


        try {
            // InternalKim.g:16532:65: (iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF )
            // InternalKim.g:16533:2: iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedObservableSemantics=ruleNamedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedObservableSemantics"


    // $ANTLR start "ruleNamedObservableSemantics"
    // InternalKim.g:16539:1: ruleNamedObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) ) ;
    public final EObject ruleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_1=null;
        Token lv_name_2_2=null;
        Token lv_name_2_3=null;
        EObject lv_declaration_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:16545:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) ) )
            // InternalKim.g:16546:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) )
            {
            // InternalKim.g:16546:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) )
            // InternalKim.g:16547:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) )
            {
            // InternalKim.g:16547:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:16548:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:16548:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:16549:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_164);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,116,FOLLOW_165); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedObservableSemanticsAccess().getNamedKeyword_1());
              		
            }
            // InternalKim.g:16570:3: ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) )
            // InternalKim.g:16571:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) )
            {
            // InternalKim.g:16571:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) )
            // InternalKim.g:16572:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING )
            {
            // InternalKim.g:16572:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING )
            int alt334=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt334=1;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt334=2;
                }
                break;
            case RULE_STRING:
                {
                alt334=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 334, 0, input);

                throw nvae;
            }

            switch (alt334) {
                case 1 :
                    // InternalKim.g:16573:6: lv_name_2_1= RULE_LOWERCASE_ID
                    {
                    lv_name_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_1, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16588:6: lv_name_2_2= RULE_LOWERCASE_DASHID
                    {
                    lv_name_2_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_2, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_DASHIDTerminalRuleCall_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_DASHID");
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16603:6: lv_name_2_3= RULE_STRING
                    {
                    lv_name_2_3=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_3, grammarAccess.getNamedObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_2_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_3,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedObservableSemantics"


    // $ANTLR start "entryRuleUnitElement"
    // InternalKim.g:16624:1: entryRuleUnitElement returns [EObject current=null] : iv_ruleUnitElement= ruleUnitElement EOF ;
    public final EObject entryRuleUnitElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitElement = null;


        try {
            // InternalKim.g:16624:52: (iv_ruleUnitElement= ruleUnitElement EOF )
            // InternalKim.g:16625:2: iv_ruleUnitElement= ruleUnitElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitElement=ruleUnitElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitElement"


    // $ANTLR start "ruleUnitElement"
    // InternalKim.g:16631:1: ruleUnitElement returns [EObject current=null] : ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) ) ;
    public final EObject ruleUnitElement() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_1=null;
        Token lv_id_0_2=null;
        Token lv_id_0_3=null;
        Token lv_id_0_4=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_unit_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:16637:2: ( ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) ) )
            // InternalKim.g:16638:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) )
            {
            // InternalKim.g:16638:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) )
            int alt336=2;
            int LA336_0 = input.LA(1);

            if ( ((LA336_0>=RULE_UPPERCASE_ID && LA336_0<=RULE_LOWERCASE_ID)||LA336_0==RULE_CAMELCASE_ID||LA336_0==RULE_BACKCASE_ID) ) {
                alt336=1;
            }
            else if ( (LA336_0==38) ) {
                alt336=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 336, 0, input);

                throw nvae;
            }
            switch (alt336) {
                case 1 :
                    // InternalKim.g:16639:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) )
                    {
                    // InternalKim.g:16639:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) )
                    // InternalKim.g:16640:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) )
                    {
                    // InternalKim.g:16640:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) )
                    // InternalKim.g:16641:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID )
                    {
                    // InternalKim.g:16641:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID )
                    int alt335=4;
                    switch ( input.LA(1) ) {
                    case RULE_CAMELCASE_ID:
                        {
                        alt335=1;
                        }
                        break;
                    case RULE_LOWERCASE_ID:
                        {
                        alt335=2;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt335=3;
                        }
                        break;
                    case RULE_BACKCASE_ID:
                        {
                        alt335=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 335, 0, input);

                        throw nvae;
                    }

                    switch (alt335) {
                        case 1 :
                            // InternalKim.g:16642:6: lv_id_0_1= RULE_CAMELCASE_ID
                            {
                            lv_id_0_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_1, grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_1,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:16657:6: lv_id_0_2= RULE_LOWERCASE_ID
                            {
                            lv_id_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_2, grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:16672:6: lv_id_0_3= RULE_UPPERCASE_ID
                            {
                            lv_id_0_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_3, grammarAccess.getUnitElementAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_3,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:16687:6: lv_id_0_4= RULE_BACKCASE_ID
                            {
                            lv_id_0_4=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_4, grammarAccess.getUnitElementAccess().getIdBACKCASE_IDTerminalRuleCall_0_0_3());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_4,
                              							"org.integratedmodelling.kim.Kim.BACKCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:16705:3: (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' )
                    {
                    // InternalKim.g:16705:3: (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' )
                    // InternalKim.g:16706:4: otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,38,FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKim.g:16710:4: ( (lv_unit_2_0= ruleUnit ) )
                    // InternalKim.g:16711:5: (lv_unit_2_0= ruleUnit )
                    {
                    // InternalKim.g:16711:5: (lv_unit_2_0= ruleUnit )
                    // InternalKim.g:16712:6: lv_unit_2_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    lv_unit_2_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnitElementRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitElement"


    // $ANTLR start "entryRuleREL_OPERATOR"
    // InternalKim.g:16738:1: entryRuleREL_OPERATOR returns [EObject current=null] : iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF ;
    public final EObject entryRuleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleREL_OPERATOR = null;


        try {
            // InternalKim.g:16738:53: (iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF )
            // InternalKim.g:16739:2: iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getREL_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleREL_OPERATOR=ruleREL_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleREL_OPERATOR; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleREL_OPERATOR"


    // $ANTLR start "ruleREL_OPERATOR"
    // InternalKim.g:16745:1: ruleREL_OPERATOR returns [EObject current=null] : ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) ;
    public final EObject ruleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        Token lv_gt_0_0=null;
        Token lv_lt_1_0=null;
        Token lv_eq_2_0=null;
        Token lv_ne_3_0=null;
        Token lv_le_4_0=null;
        Token lv_ge_5_0=null;


        	enterRule();

        try {
            // InternalKim.g:16751:2: ( ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) )
            // InternalKim.g:16752:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            {
            // InternalKim.g:16752:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            int alt337=6;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt337=1;
                }
                break;
            case 79:
                {
                alt337=2;
                }
                break;
            case 82:
                {
                alt337=3;
                }
                break;
            case 84:
                {
                alt337=4;
                }
                break;
            case 78:
                {
                alt337=5;
                }
                break;
            case 77:
                {
                alt337=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 337, 0, input);

                throw nvae;
            }

            switch (alt337) {
                case 1 :
                    // InternalKim.g:16753:3: ( (lv_gt_0_0= '>' ) )
                    {
                    // InternalKim.g:16753:3: ( (lv_gt_0_0= '>' ) )
                    // InternalKim.g:16754:4: (lv_gt_0_0= '>' )
                    {
                    // InternalKim.g:16754:4: (lv_gt_0_0= '>' )
                    // InternalKim.g:16755:5: lv_gt_0_0= '>'
                    {
                    lv_gt_0_0=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_gt_0_0, grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "gt", true, ">");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:16768:3: ( (lv_lt_1_0= '<' ) )
                    {
                    // InternalKim.g:16768:3: ( (lv_lt_1_0= '<' ) )
                    // InternalKim.g:16769:4: (lv_lt_1_0= '<' )
                    {
                    // InternalKim.g:16769:4: (lv_lt_1_0= '<' )
                    // InternalKim.g:16770:5: lv_lt_1_0= '<'
                    {
                    lv_lt_1_0=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_lt_1_0, grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "lt", true, "<");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:16783:3: ( (lv_eq_2_0= '=' ) )
                    {
                    // InternalKim.g:16783:3: ( (lv_eq_2_0= '=' ) )
                    // InternalKim.g:16784:4: (lv_eq_2_0= '=' )
                    {
                    // InternalKim.g:16784:4: (lv_eq_2_0= '=' )
                    // InternalKim.g:16785:5: lv_eq_2_0= '='
                    {
                    lv_eq_2_0=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_eq_2_0, grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "eq", true, "=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:16798:3: ( (lv_ne_3_0= '!=' ) )
                    {
                    // InternalKim.g:16798:3: ( (lv_ne_3_0= '!=' ) )
                    // InternalKim.g:16799:4: (lv_ne_3_0= '!=' )
                    {
                    // InternalKim.g:16799:4: (lv_ne_3_0= '!=' )
                    // InternalKim.g:16800:5: lv_ne_3_0= '!='
                    {
                    lv_ne_3_0=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ne_3_0, grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ne", true, "!=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:16813:3: ( (lv_le_4_0= '<=' ) )
                    {
                    // InternalKim.g:16813:3: ( (lv_le_4_0= '<=' ) )
                    // InternalKim.g:16814:4: (lv_le_4_0= '<=' )
                    {
                    // InternalKim.g:16814:4: (lv_le_4_0= '<=' )
                    // InternalKim.g:16815:5: lv_le_4_0= '<='
                    {
                    lv_le_4_0=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_le_4_0, grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "le", true, "<=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:16828:3: ( (lv_ge_5_0= '>=' ) )
                    {
                    // InternalKim.g:16828:3: ( (lv_ge_5_0= '>=' ) )
                    // InternalKim.g:16829:4: (lv_ge_5_0= '>=' )
                    {
                    // InternalKim.g:16829:4: (lv_ge_5_0= '>=' )
                    // InternalKim.g:16830:5: lv_ge_5_0= '>='
                    {
                    lv_ge_5_0=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ge_5_0, grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ge", true, ">=");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleREL_OPERATOR"


    // $ANTLR start "entryRuleUnit"
    // InternalKim.g:16846:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnit = null;


        try {
            // InternalKim.g:16846:45: (iv_ruleUnit= ruleUnit EOF )
            // InternalKim.g:16847:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnit=ruleUnit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalKim.g:16853:1: ruleUnit returns [EObject current=null] : ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;

        EObject lv_root_1_0 = null;

        Enumerator lv_connectors_2_0 = null;

        EObject lv_units_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:16859:2: ( ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:16860:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:16860:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            // InternalKim.g:16861:3: () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:16861:3: ()
            // InternalKim.g:16862:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnitAccess().getUnitAction_0(),
              					current);
              			
            }

            }

            // InternalKim.g:16871:3: ( (lv_root_1_0= ruleUnitElement ) )?
            int alt338=2;
            alt338 = dfa338.predict(input);
            switch (alt338) {
                case 1 :
                    // InternalKim.g:16872:4: (lv_root_1_0= ruleUnitElement )
                    {
                    // InternalKim.g:16872:4: (lv_root_1_0= ruleUnitElement )
                    // InternalKim.g:16873:5: lv_root_1_0= ruleUnitElement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_167);
                    lv_root_1_0=ruleUnitElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitRule());
                      					}
                      					set(
                      						current,
                      						"root",
                      						lv_root_1_0,
                      						"org.integratedmodelling.kim.Kim.UnitElement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:16890:3: ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            loop339:
            do {
                int alt339=2;
                int LA339_0 = input.LA(1);

                if ( (LA339_0==40||LA339_0==107||LA339_0==259) ) {
                    alt339=1;
                }


                switch (alt339) {
            	case 1 :
            	    // InternalKim.g:16891:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:16891:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) )
            	    // InternalKim.g:16892:5: ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) )
            	    {
            	    // InternalKim.g:16898:5: ( (lv_connectors_2_0= ruleUnitOp ) )
            	    // InternalKim.g:16899:6: (lv_connectors_2_0= ruleUnitOp )
            	    {
            	    // InternalKim.g:16899:6: (lv_connectors_2_0= ruleUnitOp )
            	    // InternalKim.g:16900:7: lv_connectors_2_0= ruleUnitOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_168);
            	    lv_connectors_2_0=ruleUnitOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getUnitRule());
            	      							}
            	      							add(
            	      								current,
            	      								"connectors",
            	      								lv_connectors_2_0,
            	      								"org.integratedmodelling.kim.Kim.UnitOp");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }

            	    // InternalKim.g:16918:4: ( (lv_units_3_0= ruleUnitElement ) )
            	    // InternalKim.g:16919:5: (lv_units_3_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:16919:5: (lv_units_3_0= ruleUnitElement )
            	    // InternalKim.g:16920:6: lv_units_3_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_167);
            	    lv_units_3_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getUnitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_3_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop339;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleCurrency"
    // InternalKim.g:16942:1: entryRuleCurrency returns [EObject current=null] : iv_ruleCurrency= ruleCurrency EOF ;
    public final EObject entryRuleCurrency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrency = null;


        try {
            // InternalKim.g:16942:49: (iv_ruleCurrency= ruleCurrency EOF )
            // InternalKim.g:16943:2: iv_ruleCurrency= ruleCurrency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurrencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCurrency=ruleCurrency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurrency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrency"


    // $ANTLR start "ruleCurrency"
    // InternalKim.g:16949:1: ruleCurrency returns [EObject current=null] : ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleCurrency() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_0=null;
        Token otherlv_1=null;
        Token lv_year_2_0=null;
        Token otherlv_3=null;
        EObject lv_units_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:16955:2: ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:16956:2: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:16956:2: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* )
            // InternalKim.g:16957:3: ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:16957:3: ( (lv_id_0_0= RULE_UPPERCASE_ID ) )
            // InternalKim.g:16958:4: (lv_id_0_0= RULE_UPPERCASE_ID )
            {
            // InternalKim.g:16958:4: (lv_id_0_0= RULE_UPPERCASE_ID )
            // InternalKim.g:16959:5: lv_id_0_0= RULE_UPPERCASE_ID
            {
            lv_id_0_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_169); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_id_0_0, grammarAccess.getCurrencyAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getCurrencyRule());
              					}
              					setWithLastConsumed(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
              				
            }

            }


            }

            // InternalKim.g:16975:3: (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) )
            // InternalKim.g:16976:4: otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) )
            {
            otherlv_1=(Token)match(input,250,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getCurrencyAccess().getCommercialAtKeyword_1_0());
              			
            }
            // InternalKim.g:16980:4: ( (lv_year_2_0= RULE_INT ) )
            // InternalKim.g:16981:5: (lv_year_2_0= RULE_INT )
            {
            // InternalKim.g:16981:5: (lv_year_2_0= RULE_INT )
            // InternalKim.g:16982:6: lv_year_2_0= RULE_INT
            {
            lv_year_2_0=(Token)match(input,RULE_INT,FOLLOW_170); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_year_2_0, grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getCurrencyRule());
              						}
              						setWithLastConsumed(
              							current,
              							"year",
              							lv_year_2_0,
              							"org.eclipse.xtext.common.Terminals.INT");
              					
            }

            }


            }


            }

            // InternalKim.g:16999:3: ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )*
            loop340:
            do {
                int alt340=2;
                int LA340_0 = input.LA(1);

                if ( (LA340_0==107) ) {
                    alt340=1;
                }


                switch (alt340) {
            	case 1 :
            	    // InternalKim.g:17000:4: ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:17000:4: ( ( '/' )=>otherlv_3= '/' )
            	    // InternalKim.g:17001:5: ( '/' )=>otherlv_3= '/'
            	    {
            	    otherlv_3=(Token)match(input,107,FOLLOW_168); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_3, grammarAccess.getCurrencyAccess().getSolidusKeyword_2_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:17007:4: ( (lv_units_4_0= ruleUnitElement ) )
            	    // InternalKim.g:17008:5: (lv_units_4_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:17008:5: (lv_units_4_0= ruleUnitElement )
            	    // InternalKim.g:17009:6: lv_units_4_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCurrencyAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_170);
            	    lv_units_4_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCurrencyRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_4_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop340;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrency"


    // $ANTLR start "entryRuleNumber"
    // InternalKim.g:17031:1: entryRuleNumber returns [EObject current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final EObject entryRuleNumber() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumber = null;


        try {
            // InternalKim.g:17031:47: (iv_ruleNumber= ruleNumber EOF )
            // InternalKim.g:17032:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalKim.g:17038:1: ruleNumber returns [EObject current=null] : ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? ) ;
    public final EObject ruleNumber() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_negative_1_0=null;
        Token lv_real_2_0=null;
        Token lv_long_3_0=null;
        Token lv_decimal_4_0=null;
        Token lv_decimalPart_5_0=null;
        Token lv_exponential_6_1=null;
        Token lv_exponential_6_2=null;
        Token otherlv_7=null;
        Token lv_expNegative_8_0=null;
        Token lv_exp_9_0=null;


        	enterRule();

        try {
            // InternalKim.g:17044:2: ( ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? ) )
            // InternalKim.g:17045:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? )
            {
            // InternalKim.g:17045:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? )
            // InternalKim.g:17046:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )?
            {
            // InternalKim.g:17046:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )?
            int alt341=3;
            int LA341_0 = input.LA(1);

            if ( (LA341_0==251) ) {
                alt341=1;
            }
            else if ( (LA341_0==252) ) {
                alt341=2;
            }
            switch (alt341) {
                case 1 :
                    // InternalKim.g:17047:4: otherlv_0= '+'
                    {
                    otherlv_0=(Token)match(input,251,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17052:4: ( (lv_negative_1_0= '-' ) )
                    {
                    // InternalKim.g:17052:4: ( (lv_negative_1_0= '-' ) )
                    // InternalKim.g:17053:5: (lv_negative_1_0= '-' )
                    {
                    // InternalKim.g:17053:5: (lv_negative_1_0= '-' )
                    // InternalKim.g:17054:6: lv_negative_1_0= '-'
                    {
                    lv_negative_1_0=(Token)match(input,252,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_negative_1_0, grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNumberRule());
                      						}
                      						setWithLastConsumed(current, "negative", true, "-");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:17067:3: ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) )
            // InternalKim.g:17068:4: ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT )
            {
            // InternalKim.g:17072:4: (lv_real_2_0= RULE_INT )
            // InternalKim.g:17073:5: lv_real_2_0= RULE_INT
            {
            lv_real_2_0=(Token)match(input,RULE_INT,FOLLOW_171); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_real_2_0, grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNumberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"real",
              						lv_real_2_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:17089:3: ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )?
            int alt342=2;
            int LA342_0 = input.LA(1);

            if ( (LA342_0==253) && (synpred658_InternalKim())) {
                alt342=1;
            }
            switch (alt342) {
                case 1 :
                    // InternalKim.g:17090:4: ( ( 'l' ) )=> (lv_long_3_0= 'l' )
                    {
                    // InternalKim.g:17094:4: (lv_long_3_0= 'l' )
                    // InternalKim.g:17095:5: lv_long_3_0= 'l'
                    {
                    lv_long_3_0=(Token)match(input,253,FOLLOW_172); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_long_3_0, grammarAccess.getNumberAccess().getLongLKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNumberRule());
                      					}
                      					setWithLastConsumed(current, "long", true, "l");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:17107:3: ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )?
            int alt343=2;
            int LA343_0 = input.LA(1);

            if ( (LA343_0==108) ) {
                int LA343_1 = input.LA(2);

                if ( (LA343_1==RULE_INT) ) {
                    int LA343_3 = input.LA(3);

                    if ( (synpred659_InternalKim()) ) {
                        alt343=1;
                    }
                }
            }
            switch (alt343) {
                case 1 :
                    // InternalKim.g:17108:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:17121:4: ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) )
                    // InternalKim.g:17122:5: ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) )
                    {
                    // InternalKim.g:17122:5: ( (lv_decimal_4_0= '.' ) )
                    // InternalKim.g:17123:6: (lv_decimal_4_0= '.' )
                    {
                    // InternalKim.g:17123:6: (lv_decimal_4_0= '.' )
                    // InternalKim.g:17124:7: lv_decimal_4_0= '.'
                    {
                    lv_decimal_4_0=(Token)match(input,108,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimal_4_0, grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(current, "decimal", true, ".");
                      						
                    }

                    }


                    }

                    // InternalKim.g:17136:5: ( (lv_decimalPart_5_0= RULE_INT ) )
                    // InternalKim.g:17137:6: (lv_decimalPart_5_0= RULE_INT )
                    {
                    // InternalKim.g:17137:6: (lv_decimalPart_5_0= RULE_INT )
                    // InternalKim.g:17138:7: lv_decimalPart_5_0= RULE_INT
                    {
                    lv_decimalPart_5_0=(Token)match(input,RULE_INT,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimalPart_5_0, grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_3_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"decimalPart",
                      								lv_decimalPart_5_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:17156:3: ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )?
            int alt346=2;
            int LA346_0 = input.LA(1);

            if ( (LA346_0==254) && (synpred663_InternalKim())) {
                alt346=1;
            }
            else if ( (LA346_0==255) && (synpred663_InternalKim())) {
                alt346=1;
            }
            switch (alt346) {
                case 1 :
                    // InternalKim.g:17157:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:17183:4: ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) )
                    // InternalKim.g:17184:5: ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) )
                    {
                    // InternalKim.g:17184:5: ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) )
                    // InternalKim.g:17185:6: ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) )
                    {
                    // InternalKim.g:17185:6: ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) )
                    // InternalKim.g:17186:7: (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' )
                    {
                    // InternalKim.g:17186:7: (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' )
                    int alt344=2;
                    int LA344_0 = input.LA(1);

                    if ( (LA344_0==254) ) {
                        alt344=1;
                    }
                    else if ( (LA344_0==255) ) {
                        alt344=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 344, 0, input);

                        throw nvae;
                    }
                    switch (alt344) {
                        case 1 :
                            // InternalKim.g:17187:8: lv_exponential_6_1= 'e'
                            {
                            lv_exponential_6_1=(Token)match(input,254,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_6_1, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:17198:8: lv_exponential_6_2= 'E'
                            {
                            lv_exponential_6_2=(Token)match(input,255,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_6_2, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:17211:5: (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )?
                    int alt345=3;
                    int LA345_0 = input.LA(1);

                    if ( (LA345_0==251) ) {
                        alt345=1;
                    }
                    else if ( (LA345_0==252) ) {
                        alt345=2;
                    }
                    switch (alt345) {
                        case 1 :
                            // InternalKim.g:17212:6: otherlv_7= '+'
                            {
                            otherlv_7=(Token)match(input,251,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getNumberAccess().getPlusSignKeyword_4_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:17217:6: ( (lv_expNegative_8_0= '-' ) )
                            {
                            // InternalKim.g:17217:6: ( (lv_expNegative_8_0= '-' ) )
                            // InternalKim.g:17218:7: (lv_expNegative_8_0= '-' )
                            {
                            // InternalKim.g:17218:7: (lv_expNegative_8_0= '-' )
                            // InternalKim.g:17219:8: lv_expNegative_8_0= '-'
                            {
                            lv_expNegative_8_0=(Token)match(input,252,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_expNegative_8_0, grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "expNegative", true, "-");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:17232:5: ( (lv_exp_9_0= RULE_INT ) )
                    // InternalKim.g:17233:6: (lv_exp_9_0= RULE_INT )
                    {
                    // InternalKim.g:17233:6: (lv_exp_9_0= RULE_INT )
                    // InternalKim.g:17234:7: lv_exp_9_0= RULE_INT
                    {
                    lv_exp_9_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_exp_9_0, grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_4_0_2_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"exp",
                      								lv_exp_9_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleQuantity"
    // InternalKim.g:17256:1: entryRuleQuantity returns [EObject current=null] : iv_ruleQuantity= ruleQuantity EOF ;
    public final EObject entryRuleQuantity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuantity = null;


        try {
            // InternalKim.g:17256:49: (iv_ruleQuantity= ruleQuantity EOF )
            // InternalKim.g:17257:2: iv_ruleQuantity= ruleQuantity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuantityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQuantity=ruleQuantity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuantity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuantity"


    // $ANTLR start "ruleQuantity"
    // InternalKim.g:17263:1: ruleQuantity returns [EObject current=null] : ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) ) ;
    public final EObject ruleQuantity() throws RecognitionException {
        EObject current = null;

        Token lv_over_1_0=null;
        Token otherlv_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_unit_3_0 = null;

        EObject lv_currency_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17269:2: ( ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) ) )
            // InternalKim.g:17270:2: ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) )
            {
            // InternalKim.g:17270:2: ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) )
            // InternalKim.g:17271:3: ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) )
            {
            // InternalKim.g:17271:3: ( (lv_value_0_0= ruleNumber ) )
            // InternalKim.g:17272:4: (lv_value_0_0= ruleNumber )
            {
            // InternalKim.g:17272:4: (lv_value_0_0= ruleNumber )
            // InternalKim.g:17273:5: lv_value_0_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuantityAccess().getValueNumberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_174);
            lv_value_0_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuantityRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_0_0,
              						"org.integratedmodelling.kim.Kim.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:17290:3: ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' )
            int alt347=2;
            int LA347_0 = input.LA(1);

            if ( (LA347_0==107) ) {
                alt347=1;
            }
            else if ( (LA347_0==108) ) {
                alt347=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 347, 0, input);

                throw nvae;
            }
            switch (alt347) {
                case 1 :
                    // InternalKim.g:17291:4: ( (lv_over_1_0= '/' ) )
                    {
                    // InternalKim.g:17291:4: ( (lv_over_1_0= '/' ) )
                    // InternalKim.g:17292:5: (lv_over_1_0= '/' )
                    {
                    // InternalKim.g:17292:5: (lv_over_1_0= '/' )
                    // InternalKim.g:17293:6: lv_over_1_0= '/'
                    {
                    lv_over_1_0=(Token)match(input,107,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_over_1_0, grammarAccess.getQuantityAccess().getOverSolidusKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getQuantityRule());
                      						}
                      						setWithLastConsumed(current, "over", true, "/");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:17306:4: otherlv_2= '.'
                    {
                    otherlv_2=(Token)match(input,108,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getQuantityAccess().getFullStopKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:17311:3: ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) )
            int alt348=2;
            int LA348_0 = input.LA(1);

            if ( (LA348_0==EOF||(LA348_0>=RULE_LOWERCASE_ID && LA348_0<=RULE_STRING)||(LA348_0>=RULE_EXPR && LA348_0<=RULE_ID)||LA348_0==RULE_BACKCASE_ID||LA348_0==20||LA348_0==25||(LA348_0>=27 && LA348_0<=33)||LA348_0==35||(LA348_0>=37 && LA348_0<=38)||(LA348_0>=40 && LA348_0<=42)||(LA348_0>=44 && LA348_0<=45)||(LA348_0>=48 && LA348_0<=52)||(LA348_0>=54 && LA348_0<=56)||(LA348_0>=62 && LA348_0<=67)||LA348_0==69||(LA348_0>=76 && LA348_0<=88)||LA348_0==104||LA348_0==107||LA348_0==111||(LA348_0>=113 && LA348_0<=120)||(LA348_0>=130 && LA348_0<=131)||(LA348_0>=138 && LA348_0<=140)||(LA348_0>=142 && LA348_0<=160)||(LA348_0>=173 && LA348_0<=174)||(LA348_0>=177 && LA348_0<=179)||(LA348_0>=181 && LA348_0<=189)||(LA348_0>=192 && LA348_0<=202)||LA348_0==209||LA348_0==214||(LA348_0>=251 && LA348_0<=252)||LA348_0==259) ) {
                alt348=1;
            }
            else if ( (LA348_0==RULE_UPPERCASE_ID) ) {
                int LA348_2 = input.LA(2);

                if ( (LA348_2==250) ) {
                    alt348=2;
                }
                else if ( (LA348_2==EOF||(LA348_2>=RULE_UPPERCASE_ID && LA348_2<=RULE_STRING)||(LA348_2>=RULE_EXPR && LA348_2<=RULE_ID)||LA348_2==RULE_BACKCASE_ID||LA348_2==20||LA348_2==25||(LA348_2>=27 && LA348_2<=33)||LA348_2==35||(LA348_2>=37 && LA348_2<=38)||(LA348_2>=40 && LA348_2<=42)||(LA348_2>=44 && LA348_2<=45)||(LA348_2>=48 && LA348_2<=52)||(LA348_2>=54 && LA348_2<=56)||(LA348_2>=62 && LA348_2<=67)||LA348_2==69||(LA348_2>=76 && LA348_2<=88)||(LA348_2>=104 && LA348_2<=105)||(LA348_2>=107 && LA348_2<=108)||LA348_2==111||(LA348_2>=113 && LA348_2<=120)||(LA348_2>=130 && LA348_2<=131)||(LA348_2>=138 && LA348_2<=140)||(LA348_2>=142 && LA348_2<=160)||(LA348_2>=173 && LA348_2<=174)||(LA348_2>=177 && LA348_2<=179)||(LA348_2>=181 && LA348_2<=189)||(LA348_2>=192 && LA348_2<=202)||LA348_2==209||LA348_2==214||(LA348_2>=251 && LA348_2<=252)||LA348_2==259) ) {
                    alt348=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 348, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 348, 0, input);

                throw nvae;
            }
            switch (alt348) {
                case 1 :
                    // InternalKim.g:17312:4: ( (lv_unit_3_0= ruleUnit ) )
                    {
                    // InternalKim.g:17312:4: ( (lv_unit_3_0= ruleUnit ) )
                    // InternalKim.g:17313:5: (lv_unit_3_0= ruleUnit )
                    {
                    // InternalKim.g:17313:5: (lv_unit_3_0= ruleUnit )
                    // InternalKim.g:17314:6: lv_unit_3_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantityAccess().getUnitUnitParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unit_3_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantityRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_3_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:17332:4: ( (lv_currency_4_0= ruleCurrency ) )
                    {
                    // InternalKim.g:17332:4: ( (lv_currency_4_0= ruleCurrency ) )
                    // InternalKim.g:17333:5: (lv_currency_4_0= ruleCurrency )
                    {
                    // InternalKim.g:17333:5: (lv_currency_4_0= ruleCurrency )
                    // InternalKim.g:17334:6: lv_currency_4_0= ruleCurrency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantityAccess().getCurrencyCurrencyParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_currency_4_0=ruleCurrency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantityRule());
                      						}
                      						set(
                      							current,
                      							"currency",
                      							lv_currency_4_0,
                      							"org.integratedmodelling.kim.Kim.Currency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuantity"


    // $ANTLR start "entryRuleDate"
    // InternalKim.g:17356:1: entryRuleDate returns [EObject current=null] : iv_ruleDate= ruleDate EOF ;
    public final EObject entryRuleDate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDate = null;


        try {
            // InternalKim.g:17356:45: (iv_ruleDate= ruleDate EOF )
            // InternalKim.g:17357:2: iv_ruleDate= ruleDate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDate=ruleDate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDate"


    // $ANTLR start "ruleDate"
    // InternalKim.g:17363:1: ruleDate returns [EObject current=null] : ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? ) ;
    public final EObject ruleDate() throws RecognitionException {
        EObject current = null;

        Token lv_year_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_bc_3_0=null;
        Token otherlv_4=null;
        Token lv_month_5_0=null;
        Token otherlv_6=null;
        Token lv_day_7_0=null;
        Token lv_hour_8_0=null;
        Token otherlv_9=null;
        Token lv_min_10_0=null;
        Token otherlv_11=null;
        Token lv_sec_12_0=null;
        Token otherlv_13=null;
        Token lv_ms_14_0=null;


        	enterRule();

        try {
            // InternalKim.g:17369:2: ( ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? ) )
            // InternalKim.g:17370:2: ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? )
            {
            // InternalKim.g:17370:2: ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? )
            // InternalKim.g:17371:3: ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )?
            {
            // InternalKim.g:17371:3: ( (lv_year_0_0= RULE_INT ) )
            // InternalKim.g:17372:4: (lv_year_0_0= RULE_INT )
            {
            // InternalKim.g:17372:4: (lv_year_0_0= RULE_INT )
            // InternalKim.g:17373:5: lv_year_0_0= RULE_INT
            {
            lv_year_0_0=(Token)match(input,RULE_INT,FOLLOW_175); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_year_0_0, grammarAccess.getDateAccess().getYearINTTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"year",
              						lv_year_0_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:17389:3: (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )?
            int alt349=4;
            switch ( input.LA(1) ) {
                case 256:
                    {
                    alt349=1;
                    }
                    break;
                case 257:
                    {
                    alt349=2;
                    }
                    break;
                case 258:
                    {
                    alt349=3;
                    }
                    break;
            }

            switch (alt349) {
                case 1 :
                    // InternalKim.g:17390:4: otherlv_1= 'AD'
                    {
                    otherlv_1=(Token)match(input,256,FOLLOW_176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDateAccess().getADKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17395:4: otherlv_2= 'CE'
                    {
                    otherlv_2=(Token)match(input,257,FOLLOW_176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDateAccess().getCEKeyword_1_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:17400:4: ( (lv_bc_3_0= 'BC' ) )
                    {
                    // InternalKim.g:17400:4: ( (lv_bc_3_0= 'BC' ) )
                    // InternalKim.g:17401:5: (lv_bc_3_0= 'BC' )
                    {
                    // InternalKim.g:17401:5: (lv_bc_3_0= 'BC' )
                    // InternalKim.g:17402:6: lv_bc_3_0= 'BC'
                    {
                    lv_bc_3_0=(Token)match(input,258,FOLLOW_176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_bc_3_0, grammarAccess.getDateAccess().getBcBCKeyword_1_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(current, "bc", true, "BC");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,252,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDateAccess().getHyphenMinusKeyword_2());
              		
            }
            // InternalKim.g:17419:3: ( (lv_month_5_0= RULE_INT ) )
            // InternalKim.g:17420:4: (lv_month_5_0= RULE_INT )
            {
            // InternalKim.g:17420:4: (lv_month_5_0= RULE_INT )
            // InternalKim.g:17421:5: lv_month_5_0= RULE_INT
            {
            lv_month_5_0=(Token)match(input,RULE_INT,FOLLOW_176); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_month_5_0, grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"month",
              						lv_month_5_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            otherlv_6=(Token)match(input,252,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDateAccess().getHyphenMinusKeyword_4());
              		
            }
            // InternalKim.g:17441:3: ( (lv_day_7_0= RULE_INT ) )
            // InternalKim.g:17442:4: (lv_day_7_0= RULE_INT )
            {
            // InternalKim.g:17442:4: (lv_day_7_0= RULE_INT )
            // InternalKim.g:17443:5: lv_day_7_0= RULE_INT
            {
            lv_day_7_0=(Token)match(input,RULE_INT,FOLLOW_177); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_day_7_0, grammarAccess.getDateAccess().getDayINTTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"day",
              						lv_day_7_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:17459:3: ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )?
            int alt352=2;
            int LA352_0 = input.LA(1);

            if ( (LA352_0==RULE_INT) ) {
                int LA352_1 = input.LA(2);

                if ( (LA352_1==105) ) {
                    alt352=1;
                }
            }
            switch (alt352) {
                case 1 :
                    // InternalKim.g:17460:4: ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
                    {
                    // InternalKim.g:17460:4: ( (lv_hour_8_0= RULE_INT ) )
                    // InternalKim.g:17461:5: (lv_hour_8_0= RULE_INT )
                    {
                    // InternalKim.g:17461:5: (lv_hour_8_0= RULE_INT )
                    // InternalKim.g:17462:6: lv_hour_8_0= RULE_INT
                    {
                    lv_hour_8_0=(Token)match(input,RULE_INT,FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hour_8_0, grammarAccess.getDateAccess().getHourINTTerminalRuleCall_6_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"hour",
                      							lv_hour_8_0,
                      							"org.eclipse.xtext.common.Terminals.INT");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,105,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDateAccess().getColonKeyword_6_1());
                      			
                    }
                    // InternalKim.g:17482:4: ( (lv_min_10_0= RULE_INT ) )
                    // InternalKim.g:17483:5: (lv_min_10_0= RULE_INT )
                    {
                    // InternalKim.g:17483:5: (lv_min_10_0= RULE_INT )
                    // InternalKim.g:17484:6: lv_min_10_0= RULE_INT
                    {
                    lv_min_10_0=(Token)match(input,RULE_INT,FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_min_10_0, grammarAccess.getDateAccess().getMinINTTerminalRuleCall_6_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"min",
                      							lv_min_10_0,
                      							"org.eclipse.xtext.common.Terminals.INT");
                      					
                    }

                    }


                    }

                    // InternalKim.g:17500:4: (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
                    int alt351=2;
                    int LA351_0 = input.LA(1);

                    if ( (LA351_0==105) ) {
                        alt351=1;
                    }
                    switch (alt351) {
                        case 1 :
                            // InternalKim.g:17501:5: otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                            {
                            otherlv_11=(Token)match(input,105,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_11, grammarAccess.getDateAccess().getColonKeyword_6_3_0());
                              				
                            }
                            // InternalKim.g:17505:5: ( (lv_sec_12_0= RULE_INT ) )
                            // InternalKim.g:17506:6: (lv_sec_12_0= RULE_INT )
                            {
                            // InternalKim.g:17506:6: (lv_sec_12_0= RULE_INT )
                            // InternalKim.g:17507:7: lv_sec_12_0= RULE_INT
                            {
                            lv_sec_12_0=(Token)match(input,RULE_INT,FOLLOW_179); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_sec_12_0, grammarAccess.getDateAccess().getSecINTTerminalRuleCall_6_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDateRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"sec",
                              								lv_sec_12_0,
                              								"org.eclipse.xtext.common.Terminals.INT");
                              						
                            }

                            }


                            }

                            // InternalKim.g:17523:5: (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                            int alt350=2;
                            int LA350_0 = input.LA(1);

                            if ( (LA350_0==108) ) {
                                alt350=1;
                            }
                            switch (alt350) {
                                case 1 :
                                    // InternalKim.g:17524:6: otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) )
                                    {
                                    otherlv_13=(Token)match(input,108,FOLLOW_75); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_13, grammarAccess.getDateAccess().getFullStopKeyword_6_3_2_0());
                                      					
                                    }
                                    // InternalKim.g:17528:6: ( (lv_ms_14_0= RULE_INT ) )
                                    // InternalKim.g:17529:7: (lv_ms_14_0= RULE_INT )
                                    {
                                    // InternalKim.g:17529:7: (lv_ms_14_0= RULE_INT )
                                    // InternalKim.g:17530:8: lv_ms_14_0= RULE_INT
                                    {
                                    lv_ms_14_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_ms_14_0, grammarAccess.getDateAccess().getMsINTTerminalRuleCall_6_3_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDateRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"ms",
                                      									lv_ms_14_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDate"


    // $ANTLR start "entryRulePathName"
    // InternalKim.g:17553:1: entryRulePathName returns [String current=null] : iv_rulePathName= rulePathName EOF ;
    public final String entryRulePathName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePathName = null;


        try {
            // InternalKim.g:17553:48: (iv_rulePathName= rulePathName EOF )
            // InternalKim.g:17554:2: iv_rulePathName= rulePathName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathName=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathName"


    // $ANTLR start "rulePathName"
    // InternalKim.g:17560:1: rulePathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePathName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_UPPERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_LOWERCASE_ID_4=null;
        Token this_UPPERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;


        	enterRule();

        try {
            // InternalKim.g:17566:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:17567:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:17567:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:17568:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:17568:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt353=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt353=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                alt353=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt353=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 353, 0, input);

                throw nvae;
            }

            switch (alt353) {
                case 1 :
                    // InternalKim.g:17569:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_179); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17577:4: this_UPPERCASE_ID_1= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_179); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getPathNameAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:17585:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_179); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:17593:3: (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop355:
            do {
                int alt355=2;
                int LA355_0 = input.LA(1);

                if ( (LA355_0==108) ) {
                    alt355=1;
                }


                switch (alt355) {
            	case 1 :
            	    // InternalKim.g:17594:4: kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,108,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPathNameAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:17599:4: (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt354=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt354=1;
            	        }
            	        break;
            	    case RULE_UPPERCASE_ID:
            	        {
            	        alt354=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt354=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 354, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt354) {
            	        case 1 :
            	            // InternalKim.g:17600:5: this_LOWERCASE_ID_4= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_4=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_179); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_4, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:17608:5: this_UPPERCASE_ID_5= RULE_UPPERCASE_ID
            	            {
            	            this_UPPERCASE_ID_5=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_179); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_UPPERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_UPPERCASE_ID_5, grammarAccess.getPathNameAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:17616:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_179); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop355;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathName"


    // $ANTLR start "entryRulePath"
    // InternalKim.g:17629:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePath = null;


        try {
            // InternalKim.g:17629:44: (iv_rulePath= rulePath EOF )
            // InternalKim.g:17630:2: iv_rulePath= rulePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePath=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalKim.g:17636:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_UPPERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_UPPERCASE_ID_6=null;
        Token this_LOWERCASE_DASHID_7=null;


        	enterRule();

        try {
            // InternalKim.g:17642:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:17643:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:17643:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:17644:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:17644:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt356=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt356=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                alt356=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt356=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 0, input);

                throw nvae;
            }

            switch (alt356) {
                case 1 :
                    // InternalKim.g:17645:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_180); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17653:4: this_UPPERCASE_ID_1= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_180); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:17661:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_180); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:17669:3: ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )*
            loop359:
            do {
                int alt359=2;
                int LA359_0 = input.LA(1);

                if ( ((LA359_0>=107 && LA359_0<=108)) ) {
                    alt359=1;
                }


                switch (alt359) {
            	case 1 :
            	    // InternalKim.g:17670:4: (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID )
            	    {
            	    // InternalKim.g:17670:4: (kw= '.' | kw= '/' )
            	    int alt357=2;
            	    int LA357_0 = input.LA(1);

            	    if ( (LA357_0==108) ) {
            	        alt357=1;
            	    }
            	    else if ( (LA357_0==107) ) {
            	        alt357=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 357, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt357) {
            	        case 1 :
            	            // InternalKim.g:17671:5: kw= '.'
            	            {
            	            kw=(Token)match(input,108,FOLLOW_25); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:17677:5: kw= '/'
            	            {
            	            kw=(Token)match(input,107,FOLLOW_25); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getSolidusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:17683:4: (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID )
            	    int alt358=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt358=1;
            	        }
            	        break;
            	    case RULE_UPPERCASE_ID:
            	        {
            	        alt358=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt358=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 358, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt358) {
            	        case 1 :
            	            // InternalKim.g:17684:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_180); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:17692:5: this_UPPERCASE_ID_6= RULE_UPPERCASE_ID
            	            {
            	            this_UPPERCASE_ID_6=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_180); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_UPPERCASE_ID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_UPPERCASE_ID_6, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:17700:5: this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_7=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_180); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_7);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_7, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop359;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleNamespaceId"
    // InternalKim.g:17713:1: entryRuleNamespaceId returns [String current=null] : iv_ruleNamespaceId= ruleNamespaceId EOF ;
    public final String entryRuleNamespaceId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceId = null;


        try {
            // InternalKim.g:17713:51: (iv_ruleNamespaceId= ruleNamespaceId EOF )
            // InternalKim.g:17714:2: iv_ruleNamespaceId= ruleNamespaceId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceId=ruleNamespaceId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceId"


    // $ANTLR start "ruleNamespaceId"
    // InternalKim.g:17720:1: ruleNamespaceId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_CAMELCASE_ID_2=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17726:2: ( (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) )
            // InternalKim.g:17727:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            {
            // InternalKim.g:17727:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            // InternalKim.g:17728:3: this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIdAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_79);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,105,FOLLOW_149); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getNamespaceIdAccess().getColonKeyword_1());
              		
            }
            this_CAMELCASE_ID_2=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CAMELCASE_ID_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_CAMELCASE_ID_2, grammarAccess.getNamespaceIdAccess().getCAMELCASE_IDTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceId"


    // $ANTLR start "entryRulePropertyId"
    // InternalKim.g:17754:1: entryRulePropertyId returns [String current=null] : iv_rulePropertyId= rulePropertyId EOF ;
    public final String entryRulePropertyId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePropertyId = null;


        try {
            // InternalKim.g:17754:50: (iv_rulePropertyId= rulePropertyId EOF )
            // InternalKim.g:17755:2: iv_rulePropertyId= rulePropertyId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyId=rulePropertyId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyId"


    // $ANTLR start "rulePropertyId"
    // InternalKim.g:17761:1: rulePropertyId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) ) ;
    public final AntlrDatatypeRuleToken rulePropertyId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_BACKCASE_ID_4=null;
        Token this_LOWERCASE_DASHID_5=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17767:2: ( ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:17768:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:17768:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:17769:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:17769:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID )
            int alt360=2;
            int LA360_0 = input.LA(1);

            if ( (LA360_0==RULE_LOWERCASE_ID) ) {
                int LA360_1 = input.LA(2);

                if ( (synpred686_InternalKim()) ) {
                    alt360=1;
                }
                else if ( (true) ) {
                    alt360=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 360, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA360_0==RULE_UPPERCASE_ID||LA360_0==RULE_LOWERCASE_DASHID) ) {
                alt360=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 360, 0, input);

                throw nvae;
            }
            switch (alt360) {
                case 1 :
                    // InternalKim.g:17770:4: this_PathName_0= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_79);
                    this_PathName_0=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_PathName_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17781:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,105,FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getPropertyIdAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:17794:3: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            int alt361=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt361=1;
                }
                break;
            case RULE_BACKCASE_ID:
                {
                alt361=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt361=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 361, 0, input);

                throw nvae;
            }

            switch (alt361) {
                case 1 :
                    // InternalKim.g:17795:4: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17803:4: this_BACKCASE_ID_4= RULE_BACKCASE_ID
                    {
                    this_BACKCASE_ID_4=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_BACKCASE_ID_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BACKCASE_ID_4, grammarAccess.getPropertyIdAccess().getBACKCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:17811:4: this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_5=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_5, grammarAccess.getPropertyIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_2_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyId"


    // $ANTLR start "entryRuleVersionNumber"
    // InternalKim.g:17823:1: entryRuleVersionNumber returns [String current=null] : iv_ruleVersionNumber= ruleVersionNumber EOF ;
    public final String entryRuleVersionNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVersionNumber = null;


        try {
            // InternalKim.g:17823:53: (iv_ruleVersionNumber= ruleVersionNumber EOF )
            // InternalKim.g:17824:2: iv_ruleVersionNumber= ruleVersionNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVersionNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVersionNumber=ruleVersionNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVersionNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVersionNumber"


    // $ANTLR start "ruleVersionNumber"
    // InternalKim.g:17830:1: ruleVersionNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleVersionNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;
        Token this_INT_2=null;
        Token this_INT_4=null;
        Token this_LOWERCASE_ID_6=null;
        Token this_UPPERCASE_ID_7=null;


        	enterRule();

        try {
            // InternalKim.g:17836:2: ( (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) )
            // InternalKim.g:17837:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            {
            // InternalKim.g:17837:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            // InternalKim.g:17838:3: this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            {
            this_INT_0=(Token)match(input,RULE_INT,FOLLOW_182); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_0, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0());
              		
            }
            // InternalKim.g:17845:3: (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )?
            int alt363=2;
            int LA363_0 = input.LA(1);

            if ( (LA363_0==108) ) {
                alt363=1;
            }
            switch (alt363) {
                case 1 :
                    // InternalKim.g:17846:4: kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )?
                    {
                    kw=(Token)match(input,108,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0());
                      			
                    }
                    this_INT_2=(Token)match(input,RULE_INT,FOLLOW_182); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_2, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1());
                      			
                    }
                    // InternalKim.g:17858:4: (kw= '.' this_INT_4= RULE_INT )?
                    int alt362=2;
                    int LA362_0 = input.LA(1);

                    if ( (LA362_0==108) ) {
                        alt362=1;
                    }
                    switch (alt362) {
                        case 1 :
                            // InternalKim.g:17859:5: kw= '.' this_INT_4= RULE_INT
                            {
                            kw=(Token)match(input,108,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0());
                              				
                            }
                            this_INT_4=(Token)match(input,RULE_INT,FOLLOW_183); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_4);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_4, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:17873:3: (kw= '-' )?
            int alt364=2;
            int LA364_0 = input.LA(1);

            if ( (LA364_0==252) ) {
                alt364=1;
            }
            switch (alt364) {
                case 1 :
                    // InternalKim.g:17874:4: kw= '-'
                    {
                    kw=(Token)match(input,252,FOLLOW_184); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:17880:3: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            int alt365=3;
            int LA365_0 = input.LA(1);

            if ( (LA365_0==RULE_LOWERCASE_ID) ) {
                int LA365_1 = input.LA(2);

                if ( (synpred692_InternalKim()) ) {
                    alt365=1;
                }
            }
            else if ( (LA365_0==RULE_UPPERCASE_ID) ) {
                int LA365_2 = input.LA(2);

                if ( (synpred693_InternalKim()) ) {
                    alt365=2;
                }
            }
            switch (alt365) {
                case 1 :
                    // InternalKim.g:17881:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_6);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_6, grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17889:4: this_UPPERCASE_ID_7= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_7=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_7, grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVersionNumber"


    // $ANTLR start "ruleUnitOp"
    // InternalKim.g:17901:1: ruleUnitOp returns [Enumerator current=null] : ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) ;
    public final Enumerator ruleUnitOp() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKim.g:17907:2: ( ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) )
            // InternalKim.g:17908:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            {
            // InternalKim.g:17908:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            int alt366=3;
            switch ( input.LA(1) ) {
            case 107:
                {
                alt366=1;
                }
                break;
            case 259:
                {
                alt366=2;
                }
                break;
            case 40:
                {
                alt366=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 366, 0, input);

                throw nvae;
            }

            switch (alt366) {
                case 1 :
                    // InternalKim.g:17909:3: (enumLiteral_0= '/' )
                    {
                    // InternalKim.g:17909:3: (enumLiteral_0= '/' )
                    // InternalKim.g:17910:4: enumLiteral_0= '/'
                    {
                    enumLiteral_0=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:17917:3: (enumLiteral_1= '^' )
                    {
                    // InternalKim.g:17917:3: (enumLiteral_1= '^' )
                    // InternalKim.g:17918:4: enumLiteral_1= '^'
                    {
                    enumLiteral_1=(Token)match(input,259,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:17925:3: (enumLiteral_2= '*' )
                    {
                    // InternalKim.g:17925:3: (enumLiteral_2= '*' )
                    // InternalKim.g:17926:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitOp"

    // $ANTLR start synpred2_InternalKim
    public final void synpred2_InternalKim_fragment() throws RecognitionException {   
        EObject lv_namespace_1_0 = null;


        // InternalKim.g:110:5: ( (lv_namespace_1_0= ruleNamespace ) )
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        {
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_namespace_1_0=ruleNamespace();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalKim

    // $ANTLR start synpred4_InternalKim
    public final void synpred4_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_conceptStatement_0_0 = null;


        // InternalKim.g:167:3: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) )
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        {
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
        {
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        {
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_conceptStatement_0_0=ruleConceptStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred4_InternalKim

    // $ANTLR start synpred5_InternalKim
    public final void synpred5_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_modelStatement_2_0 = null;


        // InternalKim.g:193:3: ( ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) )
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        {
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
        {
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        {
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_modelStatement_2_0=ruleModelStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalKim

    // $ANTLR start synpred6_InternalKim
    public final void synpred6_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_upperOntologyStatement_4_0 = null;


        // InternalKim.g:219:3: ( ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) )
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        {
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
        {
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        {
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalKim

    // $ANTLR start synpred7_InternalKim
    public final void synpred7_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject lv_defineStatement_6_0 = null;


        // InternalKim.g:245:3: ( ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) )
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        {
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
        {
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        {
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_defineStatement_6_0=ruleDefineStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_7=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred7_InternalKim

    // $ANTLR start synpred10_InternalKim
    public final void synpred10_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;

        // InternalKim.g:372:4: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )
        // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "true");
        }
        // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
        // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        {
        // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        // InternalKim.g:378:10: lv_inactive_3_0= 'void'
        {
        lv_inactive_3_0=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalKim

    // $ANTLR start synpred12_InternalKim
    public final void synpred12_InternalKim_fragment() throws RecognitionException {   
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;

        // InternalKim.g:395:4: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )
        // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        {
        // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred12_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred12_InternalKim", "true");
        }
        // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
        {
        // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
        int alt368=2;
        int LA368_0 = input.LA(1);

        if ( (LA368_0==22) ) {
            alt368=1;
        }
        switch (alt368) {
            case 1 :
                // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                {
                // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
                {
                lv_projectPrivate_4_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
        // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        {
        // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        // InternalKim.g:416:11: lv_private_5_0= 'private'
        {
        lv_private_5_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred12_InternalKim

    // $ANTLR start synpred13_InternalKim
    public final void synpred13_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;

        // InternalKim.g:366:4: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )
        // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
        {
        // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
        // InternalKim.g:367:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
        // InternalKim.g:370:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
        // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
        {
        // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
        loop370:
        do {
            int alt370=3;
            int LA370_0 = input.LA(1);

            if ( LA370_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                alt370=1;
            }
            else if ( LA370_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                alt370=2;
            }
            else if ( LA370_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                alt370=2;
            }


            switch (alt370) {
        	case 1 :
        	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        	    {
        	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        	    // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        	    }
        	    // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        	    // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        	    // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        	    // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "true");
        	    }
        	    // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
        	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        	    {
        	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        	    // InternalKim.g:378:10: lv_inactive_3_0= 'void'
        	    {
        	    lv_inactive_3_0=(Token)match(input,21,FOLLOW_185); if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        	    {
        	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        	    // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        	    }
        	    // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        	    // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        	    // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        	    // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "true");
        	    }
        	    // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
        	    {
        	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
        	    int alt369=2;
        	    int LA369_0 = input.LA(1);

        	    if ( (LA369_0==22) ) {
        	        alt369=1;
        	    }
        	    switch (alt369) {
        	        case 1 :
        	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
        	            {
        	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
        	            // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
        	            {
        	            lv_projectPrivate_4_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
        	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        	    {
        	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        	    // InternalKim.g:416:11: lv_private_5_0= 'private'
        	    {
        	    lv_private_5_0=(Token)match(input,23,FOLLOW_185); if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop370;
            }
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalKim

    // $ANTLR start synpred21_InternalKim
    public final void synpred21_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        Token otherlv_6=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_number_4_0 = null;


        // InternalKim.g:658:4: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) otherlv_6= 'as' )
        // InternalKim.g:658:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) otherlv_6= 'as'
        {
        // InternalKim.g:658:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
        int alt375=3;
        switch ( input.LA(1) ) {
        case RULE_UPPERCASE_ID:
        case RULE_LOWERCASE_ID:
        case RULE_STRING:
        case RULE_CAMELCASE_ID:
        case RULE_LOWERCASE_DASHID:
        case 104:
            {
            alt375=1;
            }
            break;
        case RULE_INT:
        case 251:
        case 252:
            {
            alt375=2;
            }
            break;
        case 28:
        case 29:
            {
            alt375=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 375, 0, input);

            throw nvae;
        }

        switch (alt375) {
            case 1 :
                // InternalKim.g:659:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                {
                // InternalKim.g:659:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                // InternalKim.g:660:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                {
                // InternalKim.g:660:6: ( (lv_urns_1_0= ruleUrn ) )
                // InternalKim.g:661:7: (lv_urns_1_0= ruleUrn )
                {
                // InternalKim.g:661:7: (lv_urns_1_0= ruleUrn )
                // InternalKim.g:662:8: lv_urns_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                  							
                }
                pushFollow(FOLLOW_13);
                lv_urns_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:679:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                loop373:
                do {
                    int alt373=2;
                    int LA373_0 = input.LA(1);

                    if ( (LA373_0==27) ) {
                        alt373=1;
                    }


                    switch (alt373) {
                	case 1 :
                	    // InternalKim.g:680:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                	    {
                	    otherlv_2=(Token)match(input,27,FOLLOW_14); if (state.failed) return ;
                	    // InternalKim.g:684:7: ( (lv_urns_3_0= ruleUrn ) )
                	    // InternalKim.g:685:8: (lv_urns_3_0= ruleUrn )
                	    {
                	    // InternalKim.g:685:8: (lv_urns_3_0= ruleUrn )
                	    // InternalKim.g:686:9: lv_urns_3_0= ruleUrn
                	    {
                	    if ( state.backtracking==0 ) {

                	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                	      								
                	    }
                	    pushFollow(FOLLOW_13);
                	    lv_urns_3_0=ruleUrn();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop373;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:706:5: ( (lv_number_4_0= ruleNumber ) )
                {
                // InternalKim.g:706:5: ( (lv_number_4_0= ruleNumber ) )
                // InternalKim.g:707:6: (lv_number_4_0= ruleNumber )
                {
                // InternalKim.g:707:6: (lv_number_4_0= ruleNumber )
                // InternalKim.g:708:7: lv_number_4_0= ruleNumber
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_1_0());
                  						
                }
                pushFollow(FOLLOW_11);
                lv_number_4_0=ruleNumber();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:726:5: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                {
                // InternalKim.g:726:5: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                // InternalKim.g:727:6: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                {
                // InternalKim.g:727:6: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                // InternalKim.g:728:7: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                {
                // InternalKim.g:728:7: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                int alt374=2;
                int LA374_0 = input.LA(1);

                if ( (LA374_0==28) ) {
                    alt374=1;
                }
                else if ( (LA374_0==29) ) {
                    alt374=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 374, 0, input);

                    throw nvae;
                }
                switch (alt374) {
                    case 1 :
                        // InternalKim.g:729:8: lv_boolean_5_1= 'true'
                        {
                        lv_boolean_5_1=(Token)match(input,28,FOLLOW_11); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:740:8: lv_boolean_5_2= 'false'
                        {
                        lv_boolean_5_2=(Token)match(input,29,FOLLOW_11); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;

        }

        otherlv_6=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred21_InternalKim

    // $ANTLR start synpred51_InternalKim
    public final void synpred51_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1474:5: ( 'to' )
        // InternalKim.g:1474:6: 'to'
        {
        match(input,36,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred51_InternalKim

    // $ANTLR start synpred55_InternalKim
    public final void synpred55_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1432:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1432:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1432:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1433:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1433:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1434:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1434:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1435:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_36);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1452:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt391=3;
        int LA391_0 = input.LA(1);

        if ( (LA391_0==46) ) {
            alt391=1;
        }
        else if ( (LA391_0==47) ) {
            alt391=2;
        }
        switch (alt391) {
            case 1 :
                // InternalKim.g:1453:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1453:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1454:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1454:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1455:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_24); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1468:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,47,FOLLOW_24); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1473:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1474:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,36,FOLLOW_37); if (state.failed) return ;

        }

        // InternalKim.g:1480:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1481:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1485:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1486:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_38);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1503:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt392=3;
        int LA392_0 = input.LA(1);

        if ( (LA392_0==46) ) {
            alt392=1;
        }
        else if ( (LA392_0==47) ) {
            alt392=2;
        }
        switch (alt392) {
            case 1 :
                // InternalKim.g:1504:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1504:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1505:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1505:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1506:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1519:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred55_InternalKim

    // $ANTLR start synpred56_InternalKim
    public final void synpred56_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1526:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1526:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1526:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1527:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1527:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1528:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred56_InternalKim

    // $ANTLR start synpred59_InternalKim
    public final void synpred59_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1591:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1591:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1591:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1592:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1592:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1593:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred59_InternalKim

    // $ANTLR start synpred62_InternalKim
    public final void synpred62_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;


        // InternalKim.g:1611:3: ( (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) )
        // InternalKim.g:1611:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        {
        // InternalKim.g:1611:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        // InternalKim.g:1612:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
        {
        otherlv_14=(Token)match(input,38,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:1616:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
        // InternalKim.g:1617:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1617:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        // InternalKim.g:1618:6: lv_toResolve_15_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_28);
        lv_toResolve_15_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1635:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
        loop393:
        do {
            int alt393=2;
            int LA393_0 = input.LA(1);

            if ( (LA393_0==27) ) {
                alt393=1;
            }


            switch (alt393) {
        	case 1 :
        	    // InternalKim.g:1636:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:1636:5: ( ( ',' )=>otherlv_16= ',' )
        	    // InternalKim.g:1637:6: ( ',' )=>otherlv_16= ','
        	    {
        	    otherlv_16=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;

        	    }

        	    // InternalKim.g:1643:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:1644:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:1644:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    // InternalKim.g:1645:7: lv_toResolve_17_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
        	      						
        	    }
        	    pushFollow(FOLLOW_28);
        	    lv_toResolve_17_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop393;
            }
        } while (true);

        otherlv_18=(Token)match(input,41,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred62_InternalKim

    // $ANTLR start synpred69_InternalKim
    public final void synpred69_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1832:5: ( 'to' )
        // InternalKim.g:1832:6: 'to'
        {
        match(input,36,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred69_InternalKim

    // $ANTLR start synpred73_InternalKim
    public final void synpred73_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1790:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1790:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1790:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1791:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1791:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1792:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1792:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1793:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_36);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1810:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt395=3;
        int LA395_0 = input.LA(1);

        if ( (LA395_0==46) ) {
            alt395=1;
        }
        else if ( (LA395_0==47) ) {
            alt395=2;
        }
        switch (alt395) {
            case 1 :
                // InternalKim.g:1811:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1811:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1812:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1812:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1813:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_24); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1826:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,47,FOLLOW_24); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1831:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1832:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,36,FOLLOW_37); if (state.failed) return ;

        }

        // InternalKim.g:1838:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1839:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1843:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1844:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_38);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1861:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt396=3;
        int LA396_0 = input.LA(1);

        if ( (LA396_0==46) ) {
            alt396=1;
        }
        else if ( (LA396_0==47) ) {
            alt396=2;
        }
        switch (alt396) {
            case 1 :
                // InternalKim.g:1862:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1862:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1863:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1863:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1864:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1877:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred73_InternalKim

    // $ANTLR start synpred74_InternalKim
    public final void synpred74_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1884:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1884:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1884:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1885:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1885:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1886:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred74_InternalKim

    // $ANTLR start synpred77_InternalKim
    public final void synpred77_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1949:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1949:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1949:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1950:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1950:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1951:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred77_InternalKim

    // $ANTLR start synpred78_InternalKim
    public final void synpred78_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_14_1=null;

        // InternalKim.g:1972:6: (lv_id_14_1= RULE_LOWERCASE_ID )
        // InternalKim.g:1972:6: lv_id_14_1= RULE_LOWERCASE_ID
        {
        lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred78_InternalKim

    // $ANTLR start synpred79_InternalKim
    public final void synpred79_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_14_1=null;
        AntlrDatatypeRuleToken lv_id_14_2 = null;


        // InternalKim.g:1969:3: ( ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) )
        // InternalKim.g:1969:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
        {
        // InternalKim.g:1969:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
        // InternalKim.g:1970:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
        {
        // InternalKim.g:1970:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
        // InternalKim.g:1971:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
        {
        // InternalKim.g:1971:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
        int alt397=2;
        int LA397_0 = input.LA(1);

        if ( (LA397_0==RULE_LOWERCASE_ID) ) {
            int LA397_1 = input.LA(2);

            if ( (LA397_1==105||LA397_1==108) ) {
                alt397=2;
            }
            else if ( (LA397_1==EOF) ) {
                alt397=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 397, 1, input);

                throw nvae;
            }
        }
        else if ( (LA397_0==RULE_UPPERCASE_ID||LA397_0==RULE_LOWERCASE_DASHID) ) {
            alt397=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 397, 0, input);

            throw nvae;
        }
        switch (alt397) {
            case 1 :
                // InternalKim.g:1972:6: lv_id_14_1= RULE_LOWERCASE_ID
                {
                lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:1987:6: lv_id_14_2= rulePropertyId
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getIdPropertyIdParserRuleCall_6_0_1());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_id_14_2=rulePropertyId();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred79_InternalKim

    // $ANTLR start synpred82_InternalKim
    public final void synpred82_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_name_0_1 = null;


        // InternalKim.g:2097:5: (lv_name_0_1= rulePathName )
        // InternalKim.g:2097:5: lv_name_0_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUrnAccess().getNamePathNameParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_name_0_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred82_InternalKim

    // $ANTLR start synpred96_InternalKim
    public final void synpred96_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:2556:5: ( 'to' )
        // InternalKim.g:2556:6: 'to'
        {
        match(input,36,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred96_InternalKim

    // $ANTLR start synpred116_InternalKim
    public final void synpred116_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;


        // InternalKim.g:2933:5: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )
        // InternalKim.g:2933:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
        {
        // InternalKim.g:2933:5: ( (lv_actions_5_0= ruleAction ) )
        // InternalKim.g:2934:6: (lv_actions_5_0= ruleAction )
        {
        // InternalKim.g:2934:6: (lv_actions_5_0= ruleAction )
        // InternalKim.g:2935:7: lv_actions_5_0= ruleAction
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
          						
        }
        pushFollow(FOLLOW_33);
        lv_actions_5_0=ruleAction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:2952:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
        loop402:
        do {
            int alt402=2;
            int LA402_0 = input.LA(1);

            if ( (LA402_0==27) ) {
                alt402=1;
            }


            switch (alt402) {
        	case 1 :
        	    // InternalKim.g:2953:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
        	    {
        	    // InternalKim.g:2953:6: ( ( ',' )=>otherlv_6= ',' )
        	    // InternalKim.g:2954:7: ( ',' )=>otherlv_6= ','
        	    {
        	    otherlv_6=(Token)match(input,27,FOLLOW_47); if (state.failed) return ;

        	    }

        	    // InternalKim.g:2960:6: ( (lv_actions_7_0= ruleAction ) )
        	    // InternalKim.g:2961:7: (lv_actions_7_0= ruleAction )
        	    {
        	    // InternalKim.g:2961:7: (lv_actions_7_0= ruleAction )
        	    // InternalKim.g:2962:8: lv_actions_7_0= ruleAction
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
        	      							
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_actions_7_0=ruleAction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop402;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred116_InternalKim

    // $ANTLR start synpred127_InternalKim
    public final void synpred127_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_0_0 = null;


        // InternalKim.g:3210:3: ( ( (lv_function_0_0= ruleFunction ) ) )
        // InternalKim.g:3210:3: ( (lv_function_0_0= ruleFunction ) )
        {
        // InternalKim.g:3210:3: ( (lv_function_0_0= ruleFunction ) )
        // InternalKim.g:3211:4: (lv_function_0_0= ruleFunction )
        {
        // InternalKim.g:3211:4: (lv_function_0_0= ruleFunction )
        // InternalKim.g:3212:5: lv_function_0_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_0_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred127_InternalKim

    // $ANTLR start synpred150_InternalKim
    public final void synpred150_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:3706:5: ( ( ruleValue ) )
        // InternalKim.g:3706:6: ( ruleValue )
        {
        // InternalKim.g:3706:6: ( ruleValue )
        // InternalKim.g:3707:6: ruleValue
        {
        pushFollow(FOLLOW_2);
        ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred150_InternalKim

    // $ANTLR start synpred154_InternalKim
    public final void synpred154_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:3830:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:3830:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:3830:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:3831:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:3831:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:3832:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred154_InternalKim

    // $ANTLR start synpred161_InternalKim
    public final void synpred161_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:3927:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:3927:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:3927:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:3928:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:3928:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:3929:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:3929:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt432=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt432=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt432=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt432=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 432, 0, input);

            throw nvae;
        }

        switch (alt432) {
            case 1 :
                // InternalKim.g:3930:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:3945:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:3960:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred161_InternalKim

    // $ANTLR start synpred171_InternalKim
    public final void synpred171_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token lv_conditionNegated_6_0=null;
        EObject lv_condition_7_0 = null;


        // InternalKim.g:4229:4: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )
        // InternalKim.g:4229:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) )
        {
        // InternalKim.g:4229:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) )
        int alt436=2;
        int LA436_0 = input.LA(1);

        if ( (LA436_0==44) ) {
            alt436=1;
        }
        else if ( (LA436_0==45) ) {
            alt436=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 436, 0, input);

            throw nvae;
        }
        switch (alt436) {
            case 1 :
                // InternalKim.g:4230:5: otherlv_5= 'if'
                {
                otherlv_5=(Token)match(input,44,FOLLOW_12); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:4235:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                {
                // InternalKim.g:4235:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                // InternalKim.g:4236:6: (lv_conditionNegated_6_0= 'unless' )
                {
                // InternalKim.g:4236:6: (lv_conditionNegated_6_0= 'unless' )
                // InternalKim.g:4237:7: lv_conditionNegated_6_0= 'unless'
                {
                lv_conditionNegated_6_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:4250:4: ( (lv_condition_7_0= ruleValue ) )
        // InternalKim.g:4251:5: (lv_condition_7_0= ruleValue )
        {
        // InternalKim.g:4251:5: (lv_condition_7_0= ruleValue )
        // InternalKim.g:4252:6: lv_condition_7_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExecutableValueAccess().getConditionValueParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_condition_7_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred171_InternalKim

    // $ANTLR start synpred193_InternalKim
    public final void synpred193_InternalKim_fragment() throws RecognitionException {   
        Token lv_projectPrivate_3_0=null;
        Token lv_private_4_0=null;

        // InternalKim.g:4506:4: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) )
        // InternalKim.g:4506:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
        {
        // InternalKim.g:4506:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
        // InternalKim.g:4507:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred193_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:4507:106: ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
        // InternalKim.g:4508:6: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:4511:9: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
        // InternalKim.g:4511:10: {...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred193_InternalKim", "true");
        }
        // InternalKim.g:4511:19: ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
        // InternalKim.g:4511:20: ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) )
        {
        // InternalKim.g:4511:20: ( (lv_projectPrivate_3_0= 'project' ) )?
        int alt438=2;
        int LA438_0 = input.LA(1);

        if ( (LA438_0==22) ) {
            alt438=1;
        }
        switch (alt438) {
            case 1 :
                // InternalKim.g:4512:10: (lv_projectPrivate_3_0= 'project' )
                {
                // InternalKim.g:4512:10: (lv_projectPrivate_3_0= 'project' )
                // InternalKim.g:4513:11: lv_projectPrivate_3_0= 'project'
                {
                lv_projectPrivate_3_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:4525:9: ( (lv_private_4_0= 'private' ) )
        // InternalKim.g:4526:10: (lv_private_4_0= 'private' )
        {
        // InternalKim.g:4526:10: (lv_private_4_0= 'private' )
        // InternalKim.g:4527:11: lv_private_4_0= 'private'
        {
        lv_private_4_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred193_InternalKim

    // $ANTLR start synpred194_InternalKim
    public final void synpred194_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_5_0=null;

        // InternalKim.g:4545:4: ( ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )
        // InternalKim.g:4545:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:4545:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
        // InternalKim.g:4546:5: {...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred194_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:4546:106: ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
        // InternalKim.g:4547:6: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:4550:9: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
        // InternalKim.g:4550:10: {...}? => ( (lv_inactive_5_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred194_InternalKim", "true");
        }
        // InternalKim.g:4550:19: ( (lv_inactive_5_0= 'void' ) )
        // InternalKim.g:4550:20: (lv_inactive_5_0= 'void' )
        {
        // InternalKim.g:4550:20: (lv_inactive_5_0= 'void' )
        // InternalKim.g:4551:10: lv_inactive_5_0= 'void'
        {
        lv_inactive_5_0=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred194_InternalKim

    // $ANTLR start synpred198_InternalKim
    public final void synpred198_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_language_14_0=null;

        // InternalKim.g:4655:4: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) )
        // InternalKim.g:4655:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
        {
        // InternalKim.g:4655:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
        // InternalKim.g:4656:5: {...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred198_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
        }
        // InternalKim.g:4656:106: ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
        // InternalKim.g:4657:6: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
        // InternalKim.g:4660:9: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
        // InternalKim.g:4660:10: {...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred198_InternalKim", "true");
        }
        // InternalKim.g:4660:19: (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
        // InternalKim.g:4660:20: otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
        {
        otherlv_12=(Token)match(input,31,FOLLOW_66); if (state.failed) return ;
        otherlv_13=(Token)match(input,92,FOLLOW_10); if (state.failed) return ;
        // InternalKim.g:4668:9: ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
        // InternalKim.g:4669:10: (lv_language_14_0= RULE_UPPERCASE_ID )
        {
        // InternalKim.g:4669:10: (lv_language_14_0= RULE_UPPERCASE_ID )
        // InternalKim.g:4670:11: lv_language_14_0= RULE_UPPERCASE_ID
        {
        lv_language_14_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred198_InternalKim

    // $ANTLR start synpred201_InternalKim
    public final void synpred201_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_imported_16_0 = null;

        EObject lv_imported_18_0 = null;


        // InternalKim.g:4692:4: ( ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) )
        // InternalKim.g:4692:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4692:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
        // InternalKim.g:4693:5: {...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred201_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
        }
        // InternalKim.g:4693:106: ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
        // InternalKim.g:4694:6: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
        // InternalKim.g:4697:9: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
        // InternalKim.g:4697:10: {...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred201_InternalKim", "true");
        }
        // InternalKim.g:4697:19: (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
        // InternalKim.g:4697:20: otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
        {
        otherlv_15=(Token)match(input,31,FOLLOW_67); if (state.failed) return ;
        // InternalKim.g:4701:9: ( (lv_imported_16_0= ruleImport ) )
        // InternalKim.g:4702:10: (lv_imported_16_0= ruleImport )
        {
        // InternalKim.g:4702:10: (lv_imported_16_0= ruleImport )
        // InternalKim.g:4703:11: lv_imported_16_0= ruleImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_1_0());
          										
        }
        pushFollow(FOLLOW_33);
        lv_imported_16_0=ruleImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4720:9: ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
        loop439:
        do {
            int alt439=2;
            int LA439_0 = input.LA(1);

            if ( (LA439_0==27) ) {
                alt439=1;
            }


            switch (alt439) {
        	case 1 :
        	    // InternalKim.g:4721:10: ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) )
        	    {
        	    // InternalKim.g:4721:10: ( ( ',' )=>otherlv_17= ',' )
        	    // InternalKim.g:4722:11: ( ',' )=>otherlv_17= ','
        	    {
        	    otherlv_17=(Token)match(input,27,FOLLOW_67); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4728:10: ( (lv_imported_18_0= ruleImport ) )
        	    // InternalKim.g:4729:11: (lv_imported_18_0= ruleImport )
        	    {
        	    // InternalKim.g:4729:11: (lv_imported_18_0= ruleImport )
        	    // InternalKim.g:4730:12: lv_imported_18_0= ruleImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_imported_18_0=ruleImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop439;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred201_InternalKim

    // $ANTLR start synpred203_InternalKim
    public final void synpred203_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_owlImports_20_0 = null;

        EObject lv_owlImports_22_0 = null;


        // InternalKim.g:4754:4: ( ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) )
        // InternalKim.g:4754:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4754:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
        // InternalKim.g:4755:5: {...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred203_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
        }
        // InternalKim.g:4755:106: ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
        // InternalKim.g:4756:6: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
        // InternalKim.g:4759:9: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
        // InternalKim.g:4759:10: {...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred203_InternalKim", "true");
        }
        // InternalKim.g:4759:19: (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
        // InternalKim.g:4759:20: otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
        {
        otherlv_19=(Token)match(input,93,FOLLOW_69); if (state.failed) return ;
        // InternalKim.g:4763:9: ( (lv_owlImports_20_0= ruleOwlImport ) )
        // InternalKim.g:4764:10: (lv_owlImports_20_0= ruleOwlImport )
        {
        // InternalKim.g:4764:10: (lv_owlImports_20_0= ruleOwlImport )
        // InternalKim.g:4765:11: lv_owlImports_20_0= ruleOwlImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_1_0());
          										
        }
        pushFollow(FOLLOW_33);
        lv_owlImports_20_0=ruleOwlImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4782:9: (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
        loop440:
        do {
            int alt440=2;
            int LA440_0 = input.LA(1);

            if ( (LA440_0==27) ) {
                alt440=1;
            }


            switch (alt440) {
        	case 1 :
        	    // InternalKim.g:4783:10: otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) )
        	    {
        	    otherlv_21=(Token)match(input,27,FOLLOW_69); if (state.failed) return ;
        	    // InternalKim.g:4787:10: ( (lv_owlImports_22_0= ruleOwlImport ) )
        	    // InternalKim.g:4788:11: (lv_owlImports_22_0= ruleOwlImport )
        	    {
        	    // InternalKim.g:4788:11: (lv_owlImports_22_0= ruleOwlImport )
        	    // InternalKim.g:4789:12: lv_owlImports_22_0= ruleOwlImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_owlImports_22_0=ruleOwlImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop440;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred203_InternalKim

    // $ANTLR start synpred206_InternalKim
    public final void synpred206_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_coverage_24_0 = null;

        EObject lv_coverage_26_0 = null;


        // InternalKim.g:4813:4: ( ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) )
        // InternalKim.g:4813:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
        {
        // InternalKim.g:4813:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
        // InternalKim.g:4814:5: {...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred206_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
        }
        // InternalKim.g:4814:106: ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
        // InternalKim.g:4815:6: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
        // InternalKim.g:4818:9: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
        // InternalKim.g:4818:10: {...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred206_InternalKim", "true");
        }
        // InternalKim.g:4818:19: (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
        // InternalKim.g:4818:20: otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
        {
        otherlv_23=(Token)match(input,94,FOLLOW_25); if (state.failed) return ;
        // InternalKim.g:4822:9: ( (lv_coverage_24_0= ruleFunction ) )
        // InternalKim.g:4823:10: (lv_coverage_24_0= ruleFunction )
        {
        // InternalKim.g:4823:10: (lv_coverage_24_0= ruleFunction )
        // InternalKim.g:4824:11: lv_coverage_24_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_1_0());
          										
        }
        pushFollow(FOLLOW_33);
        lv_coverage_24_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4841:9: ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
        loop441:
        do {
            int alt441=2;
            int LA441_0 = input.LA(1);

            if ( (LA441_0==27) ) {
                alt441=1;
            }


            switch (alt441) {
        	case 1 :
        	    // InternalKim.g:4842:10: ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) )
        	    {
        	    // InternalKim.g:4842:10: ( ( ',' )=>otherlv_25= ',' )
        	    // InternalKim.g:4843:11: ( ',' )=>otherlv_25= ','
        	    {
        	    otherlv_25=(Token)match(input,27,FOLLOW_25); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4849:10: ( (lv_coverage_26_0= ruleFunction ) )
        	    // InternalKim.g:4850:11: (lv_coverage_26_0= ruleFunction )
        	    {
        	    // InternalKim.g:4850:11: (lv_coverage_26_0= ruleFunction )
        	    // InternalKim.g:4851:12: lv_coverage_26_0= ruleFunction
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_coverage_26_0=ruleFunction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop441;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred206_InternalKim

    // $ANTLR start synpred208_InternalKim
    public final void synpred208_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_rootDomain_29_0=null;
        EObject lv_domainConcept_30_0 = null;


        // InternalKim.g:4875:4: ( ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:4875:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:4875:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:4876:5: {...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred208_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
        }
        // InternalKim.g:4876:106: ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:4877:6: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
        // InternalKim.g:4880:9: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
        // InternalKim.g:4880:10: {...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred208_InternalKim", "true");
        }
        // InternalKim.g:4880:19: (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
        // InternalKim.g:4880:20: otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
        {
        otherlv_27=(Token)match(input,48,FOLLOW_70); if (state.failed) return ;
        otherlv_28=(Token)match(input,95,FOLLOW_71); if (state.failed) return ;
        // InternalKim.g:4888:9: ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
        int alt442=2;
        int LA442_0 = input.LA(1);

        if ( (LA442_0==96) ) {
            alt442=1;
        }
        else if ( ((LA442_0>=RULE_UPPERCASE_ID && LA442_0<=RULE_LOWERCASE_ID)||LA442_0==RULE_CAMELCASE_ID||LA442_0==RULE_LOWERCASE_DASHID||LA442_0==38||(LA442_0>=130 && LA442_0<=131)||(LA442_0>=139 && LA442_0<=140)||(LA442_0>=142 && LA442_0<=160)) ) {
            alt442=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 442, 0, input);

            throw nvae;
        }
        switch (alt442) {
            case 1 :
                // InternalKim.g:4889:10: ( (lv_rootDomain_29_0= 'root' ) )
                {
                // InternalKim.g:4889:10: ( (lv_rootDomain_29_0= 'root' ) )
                // InternalKim.g:4890:11: (lv_rootDomain_29_0= 'root' )
                {
                // InternalKim.g:4890:11: (lv_rootDomain_29_0= 'root' )
                // InternalKim.g:4891:12: lv_rootDomain_29_0= 'root'
                {
                lv_rootDomain_29_0=(Token)match(input,96,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:4904:10: ( (lv_domainConcept_30_0= ruleConcept ) )
                {
                // InternalKim.g:4904:10: ( (lv_domainConcept_30_0= ruleConcept ) )
                // InternalKim.g:4905:11: (lv_domainConcept_30_0= ruleConcept )
                {
                // InternalKim.g:4905:11: (lv_domainConcept_30_0= ruleConcept )
                // InternalKim.g:4906:12: lv_domainConcept_30_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_4_2_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_domainConcept_30_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred208_InternalKim

    // $ANTLR start synpred210_InternalKim
    public final void synpred210_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        AntlrDatatypeRuleToken lv_disjointNamespaces_33_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_35_0 = null;


        // InternalKim.g:4930:4: ( ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) )
        // InternalKim.g:4930:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) )
        {
        // InternalKim.g:4930:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:4931:5: {...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred210_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
        }
        // InternalKim.g:4931:106: ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:4932:6: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
        // InternalKim.g:4935:9: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) )
        // InternalKim.g:4935:10: {...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred210_InternalKim", "true");
        }
        // InternalKim.g:4935:19: (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) )
        // InternalKim.g:4935:20: otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* )
        {
        otherlv_31=(Token)match(input,97,FOLLOW_72); if (state.failed) return ;
        otherlv_32=(Token)match(input,98,FOLLOW_25); if (state.failed) return ;
        // InternalKim.g:4943:9: ( (lv_disjointNamespaces_33_0= rulePathName ) )
        // InternalKim.g:4944:10: (lv_disjointNamespaces_33_0= rulePathName )
        {
        // InternalKim.g:4944:10: (lv_disjointNamespaces_33_0= rulePathName )
        // InternalKim.g:4945:11: lv_disjointNamespaces_33_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_2_0());
          										
        }
        pushFollow(FOLLOW_73);
        lv_disjointNamespaces_33_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4962:9: (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* )
        // InternalKim.g:4963:10: otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )*
        {
        otherlv_34=(Token)match(input,27,FOLLOW_186); if (state.failed) return ;
        // InternalKim.g:4967:10: ( (lv_disjointNamespaces_35_0= rulePathName ) )*
        loop443:
        do {
            int alt443=2;
            int LA443_0 = input.LA(1);

            if ( ((LA443_0>=RULE_UPPERCASE_ID && LA443_0<=RULE_LOWERCASE_ID)||LA443_0==RULE_LOWERCASE_DASHID) ) {
                alt443=1;
            }


            switch (alt443) {
        	case 1 :
        	    // InternalKim.g:4968:11: (lv_disjointNamespaces_35_0= rulePathName )
        	    {
        	    // InternalKim.g:4968:11: (lv_disjointNamespaces_35_0= rulePathName )
        	    // InternalKim.g:4969:12: lv_disjointNamespaces_35_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_186);
        	    lv_disjointNamespaces_35_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop443;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred210_InternalKim

    // $ANTLR start synpred211_InternalKim
    public final void synpred211_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_36=null;
        AntlrDatatypeRuleToken lv_version_37_0 = null;


        // InternalKim.g:4993:4: ( ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) )
        // InternalKim.g:4993:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
        {
        // InternalKim.g:4993:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
        // InternalKim.g:4994:5: {...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred211_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
        }
        // InternalKim.g:4994:106: ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
        // InternalKim.g:4995:6: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
        // InternalKim.g:4998:9: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
        // InternalKim.g:4998:10: {...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred211_InternalKim", "true");
        }
        // InternalKim.g:4998:19: (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
        // InternalKim.g:4998:20: otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) )
        {
        otherlv_36=(Token)match(input,99,FOLLOW_75); if (state.failed) return ;
        // InternalKim.g:5002:9: ( (lv_version_37_0= ruleVersionNumber ) )
        // InternalKim.g:5003:10: (lv_version_37_0= ruleVersionNumber )
        {
        // InternalKim.g:5003:10: (lv_version_37_0= ruleVersionNumber )
        // InternalKim.g:5004:11: lv_version_37_0= ruleVersionNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_version_37_0=ruleVersionNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred211_InternalKim

    // $ANTLR start synpred214_InternalKim
    public final void synpred214_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        Token otherlv_40=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;


        // InternalKim.g:5038:9: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) )
        // InternalKim.g:5038:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        {
        // InternalKim.g:5038:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        // InternalKim.g:5039:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred214_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
        }
        // InternalKim.g:5039:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        // InternalKim.g:5040:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
        // InternalKim.g:5043:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        // InternalKim.g:5043:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred214_InternalKim", "true");
        }
        // InternalKim.g:5043:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        // InternalKim.g:5043:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        {
        otherlv_39=(Token)match(input,100,FOLLOW_187); if (state.failed) return ;
        // InternalKim.g:5047:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        int alt446=2;
        int LA446_0 = input.LA(1);

        if ( (LA446_0==101) ) {
            alt446=1;
        }
        switch (alt446) {
            case 1 :
                // InternalKim.g:5048:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
                {
                otherlv_40=(Token)match(input,101,FOLLOW_186); if (state.failed) return ;
                // InternalKim.g:5052:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
                loop445:
                do {
                    int alt445=2;
                    int LA445_0 = input.LA(1);

                    if ( ((LA445_0>=RULE_UPPERCASE_ID && LA445_0<=RULE_LOWERCASE_ID)||LA445_0==RULE_LOWERCASE_DASHID) ) {
                        alt445=1;
                    }


                    switch (alt445) {
                	case 1 :
                	    // InternalKim.g:5053:16: (lv_lookupNamespace_41_0= rulePathName )
                	    {
                	    // InternalKim.g:5053:16: (lv_lookupNamespace_41_0= rulePathName )
                	    // InternalKim.g:5054:17: lv_lookupNamespace_41_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
                	      																
                	    }
                	    pushFollow(FOLLOW_186);
                	    lv_lookupNamespace_41_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop445;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred214_InternalKim

    // $ANTLR start synpred216_InternalKim
    public final void synpred216_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_42=null;
        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;


        // InternalKim.g:5078:9: ( ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:5078:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        {
        // InternalKim.g:5078:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:5079:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred216_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
        }
        // InternalKim.g:5079:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        // InternalKim.g:5080:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
        // InternalKim.g:5083:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        // InternalKim.g:5083:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred216_InternalKim", "true");
        }
        // InternalKim.g:5083:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        // InternalKim.g:5083:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        {
        otherlv_42=(Token)match(input,102,FOLLOW_186); if (state.failed) return ;
        // InternalKim.g:5087:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        loop447:
        do {
            int alt447=2;
            int LA447_0 = input.LA(1);

            if ( ((LA447_0>=RULE_UPPERCASE_ID && LA447_0<=RULE_LOWERCASE_ID)||LA447_0==RULE_LOWERCASE_DASHID) ) {
                alt447=1;
            }


            switch (alt447) {
        	case 1 :
        	    // InternalKim.g:5088:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    {
        	    // InternalKim.g:5088:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    // InternalKim.g:5089:16: lv_blacklistNamespace_43_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_186);
        	    lv_blacklistNamespace_43_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop447;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred216_InternalKim

    // $ANTLR start synpred217_InternalKim
    public final void synpred217_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_44=null;
        EObject lv_weights_45_0 = null;


        // InternalKim.g:5112:9: ( ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:5112:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:5112:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:5113:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred217_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
        }
        // InternalKim.g:5113:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:5114:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
        // InternalKim.g:5117:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) )
        // InternalKim.g:5117:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred217_InternalKim", "true");
        }
        // InternalKim.g:5117:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) )
        // InternalKim.g:5117:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) )
        {
        otherlv_44=(Token)match(input,31,FOLLOW_32); if (state.failed) return ;
        // InternalKim.g:5121:14: ( (lv_weights_45_0= ruleMetadata ) )
        // InternalKim.g:5122:15: (lv_weights_45_0= ruleMetadata )
        {
        // InternalKim.g:5122:15: (lv_weights_45_0= ruleMetadata )
        // InternalKim.g:5123:16: lv_weights_45_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_7_2_1_0());
          															
        }
        pushFollow(FOLLOW_2);
        lv_weights_45_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred217_InternalKim

    // $ANTLR start synpred218_InternalKim
    public final void synpred218_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;

        EObject lv_weights_45_0 = null;


        // InternalKim.g:5027:4: ( ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )
        // InternalKim.g:5027:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        {
        // InternalKim.g:5027:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        // InternalKim.g:5028:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred218_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7)");
        }
        // InternalKim.g:5028:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
        // InternalKim.g:5029:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7);
        // InternalKim.g:5032:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
        // InternalKim.g:5032:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred218_InternalKim", "true");
        }
        // InternalKim.g:5032:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
        // InternalKim.g:5032:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
        {
        // InternalKim.g:5032:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
        // InternalKim.g:5033:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
        {
        getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
        // InternalKim.g:5036:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
        // InternalKim.g:5037:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
        {
        // InternalKim.g:5037:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+
        int cnt451=0;
        loop451:
        do {
            int alt451=4;
            int LA451_0 = input.LA(1);

            if ( LA451_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
                alt451=1;
            }
            else if ( LA451_0 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
                alt451=2;
            }
            else if ( LA451_0 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
                alt451=3;
            }


            switch (alt451) {
        	case 1 :
        	    // InternalKim.g:5038:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        	    {
        	    // InternalKim.g:5038:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        	    // InternalKim.g:5039:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred218_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
        	    }
        	    // InternalKim.g:5039:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        	    // InternalKim.g:5040:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
        	    // InternalKim.g:5043:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        	    // InternalKim.g:5043:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred218_InternalKim", "true");
        	    }
        	    // InternalKim.g:5043:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        	    // InternalKim.g:5043:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        	    {
        	    otherlv_39=(Token)match(input,100,FOLLOW_188); if (state.failed) return ;
        	    // InternalKim.g:5047:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        	    int alt449=2;
        	    int LA449_0 = input.LA(1);

        	    if ( (LA449_0==101) ) {
        	        alt449=1;
        	    }
        	    switch (alt449) {
        	        case 1 :
        	            // InternalKim.g:5048:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
        	            {
        	            otherlv_40=(Token)match(input,101,FOLLOW_189); if (state.failed) return ;
        	            // InternalKim.g:5052:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
        	            loop448:
        	            do {
        	                int alt448=2;
        	                int LA448_0 = input.LA(1);

        	                if ( ((LA448_0>=RULE_UPPERCASE_ID && LA448_0<=RULE_LOWERCASE_ID)||LA448_0==RULE_LOWERCASE_DASHID) ) {
        	                    alt448=1;
        	                }


        	                switch (alt448) {
        	            	case 1 :
        	            	    // InternalKim.g:5053:16: (lv_lookupNamespace_41_0= rulePathName )
        	            	    {
        	            	    // InternalKim.g:5053:16: (lv_lookupNamespace_41_0= rulePathName )
        	            	    // InternalKim.g:5054:17: lv_lookupNamespace_41_0= rulePathName
        	            	    {
        	            	    if ( state.backtracking==0 ) {

        	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
        	            	      																
        	            	    }
        	            	    pushFollow(FOLLOW_189);
        	            	    lv_lookupNamespace_41_0=rulePathName();

        	            	    state._fsp--;
        	            	    if (state.failed) return ;

        	            	    }


        	            	    }
        	            	    break;

        	            	default :
        	            	    break loop448;
        	                }
        	            } while (true);


        	            }
        	            break;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:5078:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        	    {
        	    // InternalKim.g:5078:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        	    // InternalKim.g:5079:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred218_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
        	    }
        	    // InternalKim.g:5079:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        	    // InternalKim.g:5080:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
        	    // InternalKim.g:5083:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        	    // InternalKim.g:5083:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred218_InternalKim", "true");
        	    }
        	    // InternalKim.g:5083:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        	    // InternalKim.g:5083:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        	    {
        	    otherlv_42=(Token)match(input,102,FOLLOW_189); if (state.failed) return ;
        	    // InternalKim.g:5087:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        	    loop450:
        	    do {
        	        int alt450=2;
        	        int LA450_0 = input.LA(1);

        	        if ( ((LA450_0>=RULE_UPPERCASE_ID && LA450_0<=RULE_LOWERCASE_ID)||LA450_0==RULE_LOWERCASE_DASHID) ) {
        	            alt450=1;
        	        }


        	        switch (alt450) {
        	    	case 1 :
        	    	    // InternalKim.g:5088:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    	    {
        	    	    // InternalKim.g:5088:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    	    // InternalKim.g:5089:16: lv_blacklistNamespace_43_0= rulePathName
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
        	    	      															
        	    	    }
        	    	    pushFollow(FOLLOW_189);
        	    	    lv_blacklistNamespace_43_0=rulePathName();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop450;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:5112:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) )
        	    {
        	    // InternalKim.g:5112:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) )
        	    // InternalKim.g:5113:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred218_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
        	    }
        	    // InternalKim.g:5113:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) )
        	    // InternalKim.g:5114:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
        	    // InternalKim.g:5117:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) )
        	    // InternalKim.g:5117:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred218_InternalKim", "true");
        	    }
        	    // InternalKim.g:5117:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) )
        	    // InternalKim.g:5117:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) )
        	    {
        	    otherlv_44=(Token)match(input,31,FOLLOW_32); if (state.failed) return ;
        	    // InternalKim.g:5121:14: ( (lv_weights_45_0= ruleMetadata ) )
        	    // InternalKim.g:5122:15: (lv_weights_45_0= ruleMetadata )
        	    {
        	    // InternalKim.g:5122:15: (lv_weights_45_0= ruleMetadata )
        	    // InternalKim.g:5123:16: lv_weights_45_0= ruleMetadata
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_7_2_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_190);
        	    lv_weights_45_0=ruleMetadata();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt451 >= 1 ) break loop451;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(451, input);
                    throw eee;
            }
            cnt451++;
        } while (true);

        if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred218_InternalKim", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7())");
        }

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred218_InternalKim

    // $ANTLR start synpred245_InternalKim
    public final void synpred245_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;


        // InternalKim.g:5933:9: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) )
        // InternalKim.g:5933:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        {
        // InternalKim.g:5933:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        // InternalKim.g:5934:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred245_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
        }
        // InternalKim.g:5934:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        // InternalKim.g:5935:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
        // InternalKim.g:5938:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        // InternalKim.g:5938:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred245_InternalKim", "true");
        }
        // InternalKim.g:5938:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        // InternalKim.g:5938:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        {
        otherlv_10=(Token)match(input,30,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:5942:14: ( (lv_states_11_0= ruleObservableSemantics ) )
        // InternalKim.g:5943:15: (lv_states_11_0= ruleObservableSemantics )
        {
        // InternalKim.g:5943:15: (lv_states_11_0= ruleObservableSemantics )
        // InternalKim.g:5944:16: lv_states_11_0= ruleObservableSemantics
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
          															
        }
        pushFollow(FOLLOW_33);
        lv_states_11_0=ruleObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5961:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        loop460:
        do {
            int alt460=2;
            int LA460_0 = input.LA(1);

            if ( (LA460_0==27) ) {
                alt460=1;
            }


            switch (alt460) {
        	case 1 :
        	    // InternalKim.g:5962:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
        	    {
        	    otherlv_12=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:5966:15: ( (lv_states_13_0= ruleObservableSemantics ) )
        	    // InternalKim.g:5967:16: (lv_states_13_0= ruleObservableSemantics )
        	    {
        	    // InternalKim.g:5967:16: (lv_states_13_0= ruleObservableSemantics )
        	    // InternalKim.g:5968:17: lv_states_13_0= ruleObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_states_13_0=ruleObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop460;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred245_InternalKim

    // $ANTLR start synpred247_InternalKim
    public final void synpred247_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;


        // InternalKim.g:5992:9: ( ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )
        // InternalKim.g:5992:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        {
        // InternalKim.g:5992:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        // InternalKim.g:5993:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred247_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
        }
        // InternalKim.g:5993:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        // InternalKim.g:5994:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
        // InternalKim.g:5997:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        // InternalKim.g:5997:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred247_InternalKim", "true");
        }
        // InternalKim.g:5997:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        // InternalKim.g:5997:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        {
        otherlv_14=(Token)match(input,111,FOLLOW_39); if (state.failed) return ;
        // InternalKim.g:6001:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
        // InternalKim.g:6002:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
        {
        otherlv_15=(Token)match(input,38,FOLLOW_88); if (state.failed) return ;
        // InternalKim.g:6006:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
        // InternalKim.g:6007:16: (lv_observations_16_0= ruleObserveStatementBody )
        {
        // InternalKim.g:6007:16: (lv_observations_16_0= ruleObserveStatementBody )
        // InternalKim.g:6008:17: lv_observations_16_0= ruleObserveStatementBody
        {
        if ( state.backtracking==0 ) {

          																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
          																
        }
        pushFollow(FOLLOW_91);
        lv_observations_16_0=ruleObserveStatementBody();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_17=(Token)match(input,41,FOLLOW_33); if (state.failed) return ;

        }

        // InternalKim.g:6030:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        loop461:
        do {
            int alt461=2;
            int LA461_0 = input.LA(1);

            if ( (LA461_0==27) ) {
                alt461=1;
            }


            switch (alt461) {
        	case 1 :
        	    // InternalKim.g:6031:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
        	    {
        	    otherlv_18=(Token)match(input,27,FOLLOW_39); if (state.failed) return ;
        	    otherlv_19=(Token)match(input,38,FOLLOW_88); if (state.failed) return ;
        	    // InternalKim.g:6039:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
        	    // InternalKim.g:6040:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    {
        	    // InternalKim.g:6040:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    // InternalKim.g:6041:17: lv_observations_20_0= ruleObserveStatementBody
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_91);
        	    lv_observations_20_0=ruleObserveStatementBody();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_21=(Token)match(input,41,FOLLOW_33); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop461;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred247_InternalKim

    // $ANTLR start synpred249_InternalKim
    public final void synpred249_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;

        EObject lv_actions_22_0 = null;


        // InternalKim.g:5809:3: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) )
        // InternalKim.g:5809:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
        {
        // InternalKim.g:5809:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
        // InternalKim.g:5810:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred249_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
        }
        // InternalKim.g:5810:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
        // InternalKim.g:5811:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
        // InternalKim.g:5814:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
        // InternalKim.g:5814:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred249_InternalKim", "true");
        }
        // InternalKim.g:5814:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
        // InternalKim.g:5814:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )*
        {
        // InternalKim.g:5814:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
        int alt462=2;
        alt462 = dfa462.predict(input);
        switch (alt462) {
            case 1 :
                // InternalKim.g:5815:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
                {
                // InternalKim.g:5815:9: ( (lv_urn_1_0= ruleUrn ) )
                // InternalKim.g:5816:10: (lv_urn_1_0= ruleUrn )
                {
                // InternalKim.g:5816:10: (lv_urn_1_0= ruleUrn )
                // InternalKim.g:5817:11: lv_urn_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
                  										
                }
                pushFollow(FOLLOW_11);
                lv_urn_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_2=(Token)match(input,25,FOLLOW_8); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:5839:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
        // InternalKim.g:5840:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        {
        // InternalKim.g:5840:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        // InternalKim.g:5841:10: lv_concept_3_0= ruleNamedObservableSemantics
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
          									
        }
        pushFollow(FOLLOW_191);
        lv_concept_3_0=ruleNamedObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5858:8: ( (lv_docstring_4_0= RULE_STRING ) )?
        int alt463=2;
        int LA463_0 = input.LA(1);

        if ( (LA463_0==RULE_STRING) ) {
            alt463=1;
        }
        switch (alt463) {
            case 1 :
                // InternalKim.g:5859:9: (lv_docstring_4_0= RULE_STRING )
                {
                // InternalKim.g:5859:9: (lv_docstring_4_0= RULE_STRING )
                // InternalKim.g:5860:10: lv_docstring_4_0= RULE_STRING
                {
                lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_192); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:5876:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
        int alt465=2;
        int LA465_0 = input.LA(1);

        if ( (LA465_0==110) ) {
            alt465=1;
        }
        switch (alt465) {
            case 1 :
                // InternalKim.g:5877:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                {
                otherlv_5=(Token)match(input,110,FOLLOW_25); if (state.failed) return ;
                // InternalKim.g:5881:9: ( (lv_parents_6_0= rulePathName ) )
                // InternalKim.g:5882:10: (lv_parents_6_0= rulePathName )
                {
                // InternalKim.g:5882:10: (lv_parents_6_0= rulePathName )
                // InternalKim.g:5883:11: lv_parents_6_0= rulePathName
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
                  										
                }
                pushFollow(FOLLOW_193);
                lv_parents_6_0=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:5900:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                loop464:
                do {
                    int alt464=2;
                    int LA464_0 = input.LA(1);

                    if ( (LA464_0==27) ) {
                        alt464=1;
                    }


                    switch (alt464) {
                	case 1 :
                	    // InternalKim.g:5901:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
                	    {
                	    otherlv_7=(Token)match(input,27,FOLLOW_25); if (state.failed) return ;
                	    // InternalKim.g:5905:10: ( (lv_parents_8_0= rulePathName ) )
                	    // InternalKim.g:5906:11: (lv_parents_8_0= rulePathName )
                	    {
                	    // InternalKim.g:5906:11: (lv_parents_8_0= rulePathName )
                	    // InternalKim.g:5907:12: lv_parents_8_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_193);
                	    lv_parents_8_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop464;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:5926:8: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) )
        // InternalKim.g:5927:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
        {
        // InternalKim.g:5927:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
        // InternalKim.g:5928:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
        // InternalKim.g:5931:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
        // InternalKim.g:5932:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
        {
        // InternalKim.g:5932:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
        loop468:
        do {
            int alt468=3;
            int LA468_0 = input.LA(1);

            if ( LA468_0 == 30 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
                alt468=1;
            }
            else if ( LA468_0 == 111 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
                alt468=2;
            }


            switch (alt468) {
        	case 1 :
        	    // InternalKim.g:5933:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        	    {
        	    // InternalKim.g:5933:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        	    // InternalKim.g:5934:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred249_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
        	    }
        	    // InternalKim.g:5934:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        	    // InternalKim.g:5935:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
        	    // InternalKim.g:5938:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        	    // InternalKim.g:5938:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred249_InternalKim", "true");
        	    }
        	    // InternalKim.g:5938:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        	    // InternalKim.g:5938:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        	    {
        	    otherlv_10=(Token)match(input,30,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:5942:14: ( (lv_states_11_0= ruleObservableSemantics ) )
        	    // InternalKim.g:5943:15: (lv_states_11_0= ruleObservableSemantics )
        	    {
        	    // InternalKim.g:5943:15: (lv_states_11_0= ruleObservableSemantics )
        	    // InternalKim.g:5944:16: lv_states_11_0= ruleObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_193);
        	    lv_states_11_0=ruleObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:5961:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        	    loop466:
        	    do {
        	        int alt466=2;
        	        int LA466_0 = input.LA(1);

        	        if ( (LA466_0==27) ) {
        	            alt466=1;
        	        }


        	        switch (alt466) {
        	    	case 1 :
        	    	    // InternalKim.g:5962:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
        	    	    {
        	    	    otherlv_12=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
        	    	    // InternalKim.g:5966:15: ( (lv_states_13_0= ruleObservableSemantics ) )
        	    	    // InternalKim.g:5967:16: (lv_states_13_0= ruleObservableSemantics )
        	    	    {
        	    	    // InternalKim.g:5967:16: (lv_states_13_0= ruleObservableSemantics )
        	    	    // InternalKim.g:5968:17: lv_states_13_0= ruleObservableSemantics
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
        	    	      																
        	    	    }
        	    	    pushFollow(FOLLOW_193);
        	    	    lv_states_13_0=ruleObservableSemantics();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop466;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:5992:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        	    {
        	    // InternalKim.g:5992:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        	    // InternalKim.g:5993:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred249_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
        	    }
        	    // InternalKim.g:5993:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        	    // InternalKim.g:5994:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
        	    // InternalKim.g:5997:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        	    // InternalKim.g:5997:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred249_InternalKim", "true");
        	    }
        	    // InternalKim.g:5997:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        	    // InternalKim.g:5997:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        	    {
        	    otherlv_14=(Token)match(input,111,FOLLOW_39); if (state.failed) return ;
        	    // InternalKim.g:6001:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
        	    // InternalKim.g:6002:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
        	    {
        	    otherlv_15=(Token)match(input,38,FOLLOW_88); if (state.failed) return ;
        	    // InternalKim.g:6006:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
        	    // InternalKim.g:6007:16: (lv_observations_16_0= ruleObserveStatementBody )
        	    {
        	    // InternalKim.g:6007:16: (lv_observations_16_0= ruleObserveStatementBody )
        	    // InternalKim.g:6008:17: lv_observations_16_0= ruleObserveStatementBody
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_91);
        	    lv_observations_16_0=ruleObserveStatementBody();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_17=(Token)match(input,41,FOLLOW_193); if (state.failed) return ;

        	    }

        	    // InternalKim.g:6030:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        	    loop467:
        	    do {
        	        int alt467=2;
        	        int LA467_0 = input.LA(1);

        	        if ( (LA467_0==27) ) {
        	            alt467=1;
        	        }


        	        switch (alt467) {
        	    	case 1 :
        	    	    // InternalKim.g:6031:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
        	    	    {
        	    	    otherlv_18=(Token)match(input,27,FOLLOW_39); if (state.failed) return ;
        	    	    otherlv_19=(Token)match(input,38,FOLLOW_88); if (state.failed) return ;
        	    	    // InternalKim.g:6039:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
        	    	    // InternalKim.g:6040:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    	    {
        	    	    // InternalKim.g:6040:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    	    // InternalKim.g:6041:17: lv_observations_20_0= ruleObserveStatementBody
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
        	    	      																
        	    	    }
        	    	    pushFollow(FOLLOW_91);
        	    	    lv_observations_20_0=ruleObserveStatementBody();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }

        	    	    otherlv_21=(Token)match(input,41,FOLLOW_193); if (state.failed) return ;

        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop467;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop468;
            }
        } while (true);


        }


        }


        }

        // InternalKim.g:6076:8: ( (lv_actions_22_0= ruleActionSpecification ) )*
        loop469:
        do {
            int alt469=2;
            int LA469_0 = input.LA(1);

            if ( ((LA469_0>=54 && LA469_0<=56)||(LA469_0>=62 && LA469_0<=67)) ) {
                alt469=1;
            }


            switch (alt469) {
        	case 1 :
        	    // InternalKim.g:6077:9: (lv_actions_22_0= ruleActionSpecification )
        	    {
        	    // InternalKim.g:6077:9: (lv_actions_22_0= ruleActionSpecification )
        	    // InternalKim.g:6078:10: lv_actions_22_0= ruleActionSpecification
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_5_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_194);
        	    lv_actions_22_0=ruleActionSpecification();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop469;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred249_InternalKim

    // $ANTLR start synpred251_InternalKim
    public final void synpred251_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        EObject lv_accessor_24_0 = null;


        // InternalKim.g:6101:3: ( ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) )
        // InternalKim.g:6101:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
        {
        // InternalKim.g:6101:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
        // InternalKim.g:6102:4: {...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred251_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
        }
        // InternalKim.g:6102:114: ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
        // InternalKim.g:6103:5: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
        // InternalKim.g:6106:8: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
        // InternalKim.g:6106:9: {...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred251_InternalKim", "true");
        }
        // InternalKim.g:6106:18: (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
        // InternalKim.g:6106:19: otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )?
        {
        otherlv_23=(Token)match(input,31,FOLLOW_186); if (state.failed) return ;
        // InternalKim.g:6110:8: ( (lv_accessor_24_0= ruleFunction ) )?
        int alt470=2;
        int LA470_0 = input.LA(1);

        if ( ((LA470_0>=RULE_UPPERCASE_ID && LA470_0<=RULE_LOWERCASE_ID)||LA470_0==RULE_LOWERCASE_DASHID) ) {
            alt470=1;
        }
        switch (alt470) {
            case 1 :
                // InternalKim.g:6111:9: (lv_accessor_24_0= ruleFunction )
                {
                // InternalKim.g:6111:9: (lv_accessor_24_0= ruleFunction )
                // InternalKim.g:6112:10: lv_accessor_24_0= ruleFunction
                {
                if ( state.backtracking==0 ) {

                  										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_1_1_0());
                  									
                }
                pushFollow(FOLLOW_2);
                lv_accessor_24_0=ruleFunction();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred251_InternalKim

    // $ANTLR start synpred252_InternalKim
    public final void synpred252_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_25=null;
        EObject lv_metadata_26_0 = null;


        // InternalKim.g:6135:3: ( ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:6135:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:6135:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:6136:4: {...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred252_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2)");
        }
        // InternalKim.g:6136:114: ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:6137:5: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2);
        // InternalKim.g:6140:8: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) )
        // InternalKim.g:6140:9: {...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred252_InternalKim", "true");
        }
        // InternalKim.g:6140:18: (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) )
        // InternalKim.g:6140:19: otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) )
        {
        otherlv_25=(Token)match(input,42,FOLLOW_32); if (state.failed) return ;
        // InternalKim.g:6144:8: ( (lv_metadata_26_0= ruleMetadata ) )
        // InternalKim.g:6145:9: (lv_metadata_26_0= ruleMetadata )
        {
        // InternalKim.g:6145:9: (lv_metadata_26_0= ruleMetadata )
        // InternalKim.g:6146:10: lv_metadata_26_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_2_1_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_metadata_26_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred252_InternalKim

    // $ANTLR start synpred253_InternalKim
    public final void synpred253_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:6209:4: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )
        // InternalKim.g:6209:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
        {
        // InternalKim.g:6209:4: ( (lv_value_0_0= ruleValue ) )
        // InternalKim.g:6210:5: (lv_value_0_0= ruleValue )
        {
        // InternalKim.g:6210:5: (lv_value_0_0= ruleValue )
        // InternalKim.g:6211:6: lv_value_0_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred253_InternalKim

    // $ANTLR start synpred255_InternalKim
    public final void synpred255_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:6273:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:6273:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:6273:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:6274:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred255_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:6274:116: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:6275:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:6278:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:6278:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred255_InternalKim", "true");
        }
        // InternalKim.g:6278:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:6278:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,35,FOLLOW_24); if (state.failed) return ;
        otherlv_6=(Token)match(input,36,FOLLOW_25); if (state.failed) return ;
        // InternalKim.g:6286:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:6287:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:6287:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:6288:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred255_InternalKim

    // $ANTLR start synpred258_InternalKim
    public final void synpred258_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:6311:4: ( ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:6311:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:6311:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:6312:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred258_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:6312:116: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:6313:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:6316:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:6316:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred258_InternalKim", "true");
        }
        // InternalKim.g:6316:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt473=2;
        int LA473_0 = input.LA(1);

        if ( (LA473_0==48) ) {
            alt473=1;
        }
        else if ( (LA473_0==113) ) {
            alt473=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 473, 0, input);

            throw nvae;
        }
        switch (alt473) {
            case 1 :
                // InternalKim.g:6316:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:6316:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:6317:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                otherlv_8=(Token)match(input,48,FOLLOW_95); if (state.failed) return ;
                // InternalKim.g:6321:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt472=2;
                int LA472_0 = input.LA(1);

                if ( (LA472_0==EOF||LA472_0==RULE_LOWERCASE_ID||LA472_0==RULE_CAMELCASE_ID||LA472_0==RULE_BACKCASE_ID||LA472_0==38||LA472_0==40||LA472_0==107||LA472_0==259) ) {
                    alt472=1;
                }
                else if ( (LA472_0==RULE_UPPERCASE_ID) ) {
                    int LA472_2 = input.LA(2);

                    if ( (LA472_2==250) ) {
                        alt472=2;
                    }
                    else if ( (LA472_2==EOF||LA472_2==40||LA472_2==107||LA472_2==259) ) {
                        alt472=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 472, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 472, 0, input);

                    throw nvae;
                }
                switch (alt472) {
                    case 1 :
                        // InternalKim.g:6322:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:6322:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:6323:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:6323:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:6324:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:6342:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:6342:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:6343:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:6343:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:6344:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:6364:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:6364:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:6365:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
                {
                otherlv_11=(Token)match(input,113,FOLLOW_195); if (state.failed) return ;
                // InternalKim.g:6369:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:6370:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:6370:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:6371:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred258_InternalKim

    // $ANTLR start synpred259_InternalKim
    public final void synpred259_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_14_0 = null;


        // InternalKim.g:6420:10: ( (lv_valueOperators_14_0= ruleValueOperator ) )
        // InternalKim.g:6420:10: (lv_valueOperators_14_0= ruleValueOperator )
        {
        // InternalKim.g:6420:10: (lv_valueOperators_14_0= ruleValueOperator )
        // InternalKim.g:6421:11: lv_valueOperators_14_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_14_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred259_InternalKim

    // $ANTLR start synpred260_InternalKim
    public final void synpred260_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_13_0 = null;

        EObject lv_valueOperators_14_0 = null;


        // InternalKim.g:6395:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:6395:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:6395:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:6396:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred260_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:6396:116: ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:6397:6: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:6400:9: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
        // InternalKim.g:6400:10: {...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred260_InternalKim", "true");
        }
        // InternalKim.g:6400:19: ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
        // InternalKim.g:6400:20: ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )*
        {
        // InternalKim.g:6400:20: ( (lv_valueOperators_13_0= ruleValueOperator ) )
        // InternalKim.g:6401:10: (lv_valueOperators_13_0= ruleValueOperator )
        {
        // InternalKim.g:6401:10: (lv_valueOperators_13_0= ruleValueOperator )
        // InternalKim.g:6402:11: lv_valueOperators_13_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_196);
        lv_valueOperators_13_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:6419:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*
        loop474:
        do {
            int alt474=2;
            int LA474_0 = input.LA(1);

            if ( (LA474_0==55||(LA474_0>=76 && LA474_0<=88)||(LA474_0>=117 && LA474_0<=120)) ) {
                alt474=1;
            }


            switch (alt474) {
        	case 1 :
        	    // InternalKim.g:6420:10: (lv_valueOperators_14_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:6420:10: (lv_valueOperators_14_0= ruleValueOperator )
        	    // InternalKim.g:6421:11: lv_valueOperators_14_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_196);
        	    lv_valueOperators_14_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop474;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred260_InternalKim

    // $ANTLR start synpred262_InternalKim
    public final void synpred262_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_15_0=null;
        Token otherlv_16=null;

        // InternalKim.g:6444:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) )
        // InternalKim.g:6444:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
        {
        // InternalKim.g:6444:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
        // InternalKim.g:6445:5: {...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred262_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:6445:116: ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
        // InternalKim.g:6446:6: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:6449:9: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
        // InternalKim.g:6449:10: {...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred262_InternalKim", "true");
        }
        // InternalKim.g:6449:19: ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
        int alt475=2;
        int LA475_0 = input.LA(1);

        if ( (LA475_0==114) ) {
            alt475=1;
        }
        else if ( (LA475_0==115) ) {
            alt475=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 475, 0, input);

            throw nvae;
        }
        switch (alt475) {
            case 1 :
                // InternalKim.g:6449:20: ( (lv_optional_15_0= 'optional' ) )
                {
                // InternalKim.g:6449:20: ( (lv_optional_15_0= 'optional' ) )
                // InternalKim.g:6450:10: (lv_optional_15_0= 'optional' )
                {
                // InternalKim.g:6450:10: (lv_optional_15_0= 'optional' )
                // InternalKim.g:6451:11: lv_optional_15_0= 'optional'
                {
                lv_optional_15_0=(Token)match(input,114,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:6464:9: otherlv_16= 'required'
                {
                otherlv_16=(Token)match(input,115,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred262_InternalKim

    // $ANTLR start synpred263_InternalKim
    public final void synpred263_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        EObject lv_from_17_0 = null;

        EObject lv_to_19_0 = null;


        // InternalKim.g:6474:4: ( ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:6474:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:6474:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:6475:5: {...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred263_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:6475:116: ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
        // InternalKim.g:6476:6: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:6479:9: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
        // InternalKim.g:6479:10: {...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred263_InternalKim", "true");
        }
        // InternalKim.g:6479:19: ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
        // InternalKim.g:6479:20: ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) )
        {
        // InternalKim.g:6479:20: ( (lv_from_17_0= ruleNumber ) )
        // InternalKim.g:6480:10: (lv_from_17_0= ruleNumber )
        {
        // InternalKim.g:6480:10: (lv_from_17_0= ruleNumber )
        // InternalKim.g:6481:11: lv_from_17_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_4_0_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_from_17_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_18=(Token)match(input,36,FOLLOW_37); if (state.failed) return ;
        // InternalKim.g:6502:9: ( (lv_to_19_0= ruleNumber ) )
        // InternalKim.g:6503:10: (lv_to_19_0= ruleNumber )
        {
        // InternalKim.g:6503:10: (lv_to_19_0= ruleNumber )
        // InternalKim.g:6504:11: lv_to_19_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_19_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred263_InternalKim

    // $ANTLR start synpred265_InternalKim
    public final void synpred265_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;

        // InternalKim.g:6527:4: ( ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:6527:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:6527:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:6528:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred265_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:6528:116: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:6529:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:6532:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:6532:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred265_InternalKim", "true");
        }
        // InternalKim.g:6532:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        // InternalKim.g:6532:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        {
        otherlv_20=(Token)match(input,116,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:6536:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        // InternalKim.g:6537:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        {
        // InternalKim.g:6537:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        // InternalKim.g:6538:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        {
        // InternalKim.g:6538:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        int alt476=2;
        int LA476_0 = input.LA(1);

        if ( (LA476_0==RULE_LOWERCASE_ID) ) {
            alt476=1;
        }
        else if ( (LA476_0==RULE_STRING) ) {
            alt476=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 476, 0, input);

            throw nvae;
        }
        switch (alt476) {
            case 1 :
                // InternalKim.g:6539:12: lv_name_21_1= RULE_LOWERCASE_ID
                {
                lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:6554:12: lv_name_21_2= RULE_STRING
                {
                lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred265_InternalKim

    // $ANTLR start synpred267_InternalKim
    public final void synpred267_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonValue_3_0 = null;


        // InternalKim.g:6650:5: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) )
        // InternalKim.g:6650:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
        {
        // InternalKim.g:6650:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
        // InternalKim.g:6651:6: (lv_comparisonValue_3_0= ruleNumber )
        {
        // InternalKim.g:6651:6: (lv_comparisonValue_3_0= ruleNumber )
        // InternalKim.g:6652:7: lv_comparisonValue_3_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonValueNumberParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonValue_3_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred267_InternalKim

    // $ANTLR start synpred268_InternalKim
    public final void synpred268_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonQuantity_4_0 = null;


        // InternalKim.g:6670:5: ( ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) )
        // InternalKim.g:6670:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
        {
        // InternalKim.g:6670:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
        // InternalKim.g:6671:6: (lv_comparisonQuantity_4_0= ruleQuantity )
        {
        // InternalKim.g:6671:6: (lv_comparisonQuantity_4_0= ruleQuantity )
        // InternalKim.g:6672:7: lv_comparisonQuantity_4_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonQuantityQuantityParserRuleCall_0_1_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonQuantity_4_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred268_InternalKim

    // $ANTLR start synpred269_InternalKim
    public final void synpred269_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonConcept_5_0 = null;


        // InternalKim.g:6690:5: ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:6690:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:6690:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
        // InternalKim.g:6691:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
        {
        // InternalKim.g:6691:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
        // InternalKim.g:6692:7: lv_comparisonConcept_5_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonConcept_5_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred269_InternalKim

    // $ANTLR start synpred274_InternalKim
    public final void synpred274_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_value_1_0 = null;


        // InternalKim.g:6835:4: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )
        // InternalKim.g:6835:4: ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as'
        {
        // InternalKim.g:6835:4: ( (lv_value_1_0= ruleValue ) )
        // InternalKim.g:6836:5: (lv_value_1_0= ruleValue )
        {
        // InternalKim.g:6836:5: (lv_value_1_0= ruleValue )
        // InternalKim.g:6837:6: lv_value_1_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueValueParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_1_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred274_InternalKim

    // $ANTLR start synpred276_InternalKim
    public final void synpred276_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_accordingTo_8_0 = null;


        // InternalKim.g:6899:4: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:6899:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:6899:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:6900:5: {...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred276_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0)");
        }
        // InternalKim.g:6900:125: ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:6901:6: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0);
        // InternalKim.g:6904:9: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
        // InternalKim.g:6904:10: {...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred276_InternalKim", "true");
        }
        // InternalKim.g:6904:19: (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
        // InternalKim.g:6904:20: otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) )
        {
        otherlv_6=(Token)match(input,35,FOLLOW_24); if (state.failed) return ;
        otherlv_7=(Token)match(input,36,FOLLOW_25); if (state.failed) return ;
        // InternalKim.g:6912:9: ( (lv_accordingTo_8_0= rulePropertyId ) )
        // InternalKim.g:6913:10: (lv_accordingTo_8_0= rulePropertyId )
        {
        // InternalKim.g:6913:10: (lv_accordingTo_8_0= rulePropertyId )
        // InternalKim.g:6914:11: lv_accordingTo_8_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_4_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_8_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred276_InternalKim

    // $ANTLR start synpred279_InternalKim
    public final void synpred279_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token otherlv_12=null;
        EObject lv_unit_10_0 = null;

        EObject lv_currency_11_0 = null;

        EObject lv_unit_13_0 = null;


        // InternalKim.g:6937:4: ( ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:6937:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:6937:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:6938:5: {...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred279_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1)");
        }
        // InternalKim.g:6938:125: ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:6939:6: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1);
        // InternalKim.g:6942:9: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
        // InternalKim.g:6942:10: {...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred279_InternalKim", "true");
        }
        // InternalKim.g:6942:19: ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
        int alt481=2;
        int LA481_0 = input.LA(1);

        if ( (LA481_0==48) ) {
            alt481=1;
        }
        else if ( (LA481_0==113) ) {
            alt481=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 481, 0, input);

            throw nvae;
        }
        switch (alt481) {
            case 1 :
                // InternalKim.g:6942:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:6942:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
                // InternalKim.g:6943:10: otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
                {
                otherlv_9=(Token)match(input,48,FOLLOW_95); if (state.failed) return ;
                // InternalKim.g:6947:10: ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
                int alt480=2;
                int LA480_0 = input.LA(1);

                if ( (LA480_0==EOF||LA480_0==RULE_LOWERCASE_ID||LA480_0==RULE_CAMELCASE_ID||LA480_0==RULE_BACKCASE_ID||LA480_0==38||LA480_0==40||LA480_0==107||LA480_0==259) ) {
                    alt480=1;
                }
                else if ( (LA480_0==RULE_UPPERCASE_ID) ) {
                    int LA480_2 = input.LA(2);

                    if ( (LA480_2==EOF||LA480_2==40||LA480_2==107||LA480_2==259) ) {
                        alt480=1;
                    }
                    else if ( (LA480_2==250) ) {
                        alt480=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 480, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 480, 0, input);

                    throw nvae;
                }
                switch (alt480) {
                    case 1 :
                        // InternalKim.g:6948:11: ( (lv_unit_10_0= ruleUnit ) )
                        {
                        // InternalKim.g:6948:11: ( (lv_unit_10_0= ruleUnit ) )
                        // InternalKim.g:6949:12: (lv_unit_10_0= ruleUnit )
                        {
                        // InternalKim.g:6949:12: (lv_unit_10_0= ruleUnit )
                        // InternalKim.g:6950:13: lv_unit_10_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_10_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:6968:11: ( (lv_currency_11_0= ruleCurrency ) )
                        {
                        // InternalKim.g:6968:11: ( (lv_currency_11_0= ruleCurrency ) )
                        // InternalKim.g:6969:12: (lv_currency_11_0= ruleCurrency )
                        {
                        // InternalKim.g:6969:12: (lv_currency_11_0= ruleCurrency )
                        // InternalKim.g:6970:13: lv_currency_11_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_4_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_11_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:6990:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
                {
                // InternalKim.g:6990:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
                // InternalKim.g:6991:10: otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) )
                {
                otherlv_12=(Token)match(input,113,FOLLOW_195); if (state.failed) return ;
                // InternalKim.g:6995:10: ( (lv_unit_13_0= ruleUnit ) )
                // InternalKim.g:6996:11: (lv_unit_13_0= ruleUnit )
                {
                // InternalKim.g:6996:11: (lv_unit_13_0= ruleUnit )
                // InternalKim.g:6997:12: lv_unit_13_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_13_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred279_InternalKim

    // $ANTLR start synpred280_InternalKim
    public final void synpred280_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_15_0 = null;


        // InternalKim.g:7046:10: ( (lv_valueOperators_15_0= ruleValueOperator ) )
        // InternalKim.g:7046:10: (lv_valueOperators_15_0= ruleValueOperator )
        {
        // InternalKim.g:7046:10: (lv_valueOperators_15_0= ruleValueOperator )
        // InternalKim.g:7047:11: lv_valueOperators_15_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_15_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred280_InternalKim

    // $ANTLR start synpred281_InternalKim
    public final void synpred281_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_14_0 = null;

        EObject lv_valueOperators_15_0 = null;


        // InternalKim.g:7021:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:7021:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:7021:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:7022:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred281_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2)");
        }
        // InternalKim.g:7022:125: ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:7023:6: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2);
        // InternalKim.g:7026:9: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
        // InternalKim.g:7026:10: {...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred281_InternalKim", "true");
        }
        // InternalKim.g:7026:19: ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
        // InternalKim.g:7026:20: ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )*
        {
        // InternalKim.g:7026:20: ( (lv_valueOperators_14_0= ruleValueOperator ) )
        // InternalKim.g:7027:10: (lv_valueOperators_14_0= ruleValueOperator )
        {
        // InternalKim.g:7027:10: (lv_valueOperators_14_0= ruleValueOperator )
        // InternalKim.g:7028:11: lv_valueOperators_14_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_0_0());
          										
        }
        pushFollow(FOLLOW_196);
        lv_valueOperators_14_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:7045:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*
        loop482:
        do {
            int alt482=2;
            int LA482_0 = input.LA(1);

            if ( (LA482_0==55||(LA482_0>=76 && LA482_0<=88)||(LA482_0>=117 && LA482_0<=120)) ) {
                alt482=1;
            }


            switch (alt482) {
        	case 1 :
        	    // InternalKim.g:7046:10: (lv_valueOperators_15_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:7046:10: (lv_valueOperators_15_0= ruleValueOperator )
        	    // InternalKim.g:7047:11: lv_valueOperators_15_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_196);
        	    lv_valueOperators_15_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop482;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred281_InternalKim

    // $ANTLR start synpred283_InternalKim
    public final void synpred283_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_16_0=null;
        Token otherlv_17=null;

        // InternalKim.g:7070:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) )
        // InternalKim.g:7070:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
        {
        // InternalKim.g:7070:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
        // InternalKim.g:7071:5: {...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred283_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3)");
        }
        // InternalKim.g:7071:125: ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
        // InternalKim.g:7072:6: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3);
        // InternalKim.g:7075:9: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
        // InternalKim.g:7075:10: {...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred283_InternalKim", "true");
        }
        // InternalKim.g:7075:19: ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
        int alt483=2;
        int LA483_0 = input.LA(1);

        if ( (LA483_0==114) ) {
            alt483=1;
        }
        else if ( (LA483_0==115) ) {
            alt483=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 483, 0, input);

            throw nvae;
        }
        switch (alt483) {
            case 1 :
                // InternalKim.g:7075:20: ( (lv_optional_16_0= 'optional' ) )
                {
                // InternalKim.g:7075:20: ( (lv_optional_16_0= 'optional' ) )
                // InternalKim.g:7076:10: (lv_optional_16_0= 'optional' )
                {
                // InternalKim.g:7076:10: (lv_optional_16_0= 'optional' )
                // InternalKim.g:7077:11: lv_optional_16_0= 'optional'
                {
                lv_optional_16_0=(Token)match(input,114,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7090:9: otherlv_17= 'required'
                {
                otherlv_17=(Token)match(input,115,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred283_InternalKim

    // $ANTLR start synpred284_InternalKim
    public final void synpred284_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        EObject lv_from_18_0 = null;

        EObject lv_to_20_0 = null;


        // InternalKim.g:7100:4: ( ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:7100:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:7100:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:7101:5: {...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred284_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4)");
        }
        // InternalKim.g:7101:125: ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
        // InternalKim.g:7102:6: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4);
        // InternalKim.g:7105:9: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
        // InternalKim.g:7105:10: {...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred284_InternalKim", "true");
        }
        // InternalKim.g:7105:19: ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
        // InternalKim.g:7105:20: ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) )
        {
        // InternalKim.g:7105:20: ( (lv_from_18_0= ruleNumber ) )
        // InternalKim.g:7106:10: (lv_from_18_0= ruleNumber )
        {
        // InternalKim.g:7106:10: (lv_from_18_0= ruleNumber )
        // InternalKim.g:7107:11: lv_from_18_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getFromNumberParserRuleCall_4_4_0_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_from_18_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_19=(Token)match(input,36,FOLLOW_37); if (state.failed) return ;
        // InternalKim.g:7128:9: ( (lv_to_20_0= ruleNumber ) )
        // InternalKim.g:7129:10: (lv_to_20_0= ruleNumber )
        {
        // InternalKim.g:7129:10: (lv_to_20_0= ruleNumber )
        // InternalKim.g:7130:11: lv_to_20_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getToNumberParserRuleCall_4_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_20_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred284_InternalKim

    // $ANTLR start synpred286_InternalKim
    public final void synpred286_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_21=null;
        Token lv_name_22_1=null;
        Token lv_name_22_2=null;

        // InternalKim.g:7153:4: ( ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:7153:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:7153:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:7154:5: {...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred286_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5)");
        }
        // InternalKim.g:7154:125: ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:7155:6: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5);
        // InternalKim.g:7158:9: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:7158:10: {...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred286_InternalKim", "true");
        }
        // InternalKim.g:7158:19: (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
        // InternalKim.g:7158:20: otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
        {
        otherlv_21=(Token)match(input,116,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:7162:9: ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
        // InternalKim.g:7163:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
        {
        // InternalKim.g:7163:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
        // InternalKim.g:7164:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
        {
        // InternalKim.g:7164:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
        int alt484=2;
        int LA484_0 = input.LA(1);

        if ( (LA484_0==RULE_LOWERCASE_ID) ) {
            alt484=1;
        }
        else if ( (LA484_0==RULE_STRING) ) {
            alt484=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 484, 0, input);

            throw nvae;
        }
        switch (alt484) {
            case 1 :
                // InternalKim.g:7165:12: lv_name_22_1= RULE_LOWERCASE_ID
                {
                lv_name_22_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:7180:12: lv_name_22_2= RULE_STRING
                {
                lv_name_22_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred286_InternalKim

    // $ANTLR start synpred288_InternalKim
    public final void synpred288_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_1_1=null;

        // InternalKim.g:7266:8: (lv_modelReference_1_1= RULE_LOWERCASE_ID )
        // InternalKim.g:7266:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
        {
        lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred288_InternalKim

    // $ANTLR start synpred289_InternalKim
    public final void synpred289_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;


        // InternalKim.g:7281:8: (lv_modelReference_1_2= rulePathName )
        // InternalKim.g:7281:8: lv_modelReference_1_2= rulePathName
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_1_0_0_0_1());
          							
        }
        pushFollow(FOLLOW_2);
        lv_modelReference_1_2=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred289_InternalKim

    // $ANTLR start synpred292_InternalKim
    public final void synpred292_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_1_1=null;
        Token lv_modelReference_1_4=null;
        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_3 = null;

        EObject lv_observable_2_0 = null;


        // InternalKim.g:7262:4: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) )
        // InternalKim.g:7262:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
        {
        // InternalKim.g:7262:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
        int alt487=2;
        alt487 = dfa487.predict(input);
        switch (alt487) {
            case 1 :
                // InternalKim.g:7263:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                {
                // InternalKim.g:7263:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                // InternalKim.g:7264:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                {
                // InternalKim.g:7264:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                // InternalKim.g:7265:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                {
                // InternalKim.g:7265:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                int alt486=4;
                alt486 = dfa486.predict(input);
                switch (alt486) {
                    case 1 :
                        // InternalKim.g:7266:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
                        {
                        lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:7281:8: lv_modelReference_1_2= rulePathName
                        {
                        pushFollow(FOLLOW_2);
                        lv_modelReference_1_2=rulePathName();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:7297:8: lv_modelReference_1_3= ruleUrnId
                        {
                        pushFollow(FOLLOW_2);
                        lv_modelReference_1_3=ruleUrnId();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // InternalKim.g:7313:8: lv_modelReference_1_4= RULE_STRING
                        {
                        lv_modelReference_1_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7331:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                {
                // InternalKim.g:7331:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                // InternalKim.g:7332:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                {
                // InternalKim.g:7332:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                // InternalKim.g:7333:7: lv_observable_2_0= ruleDependencyObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getDependencyAccess().getObservableDependencyObservableSemanticsParserRuleCall_1_0_1_0());
                  						
                }
                pushFollow(FOLLOW_2);
                lv_observable_2_0=ruleDependencyObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred292_InternalKim

    // $ANTLR start synpred296_InternalKim
    public final void synpred296_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_optional_9_0=null;
        Token otherlv_10=null;
        EObject lv_alternativeObservables_5_0 = null;

        EObject lv_alternativeObservables_7_0 = null;


        // InternalKim.g:7359:5: ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) )
        // InternalKim.g:7359:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
        {
        // InternalKim.g:7359:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
        // InternalKim.g:7360:6: {...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred296_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0)");
        }
        // InternalKim.g:7360:110: ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
        // InternalKim.g:7361:7: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0);
        // InternalKim.g:7364:10: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
        // InternalKim.g:7364:11: {...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred296_InternalKim", "true");
        }
        // InternalKim.g:7364:20: (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
        // InternalKim.g:7364:21: otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
        {
        otherlv_4=(Token)match(input,38,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:7368:10: ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) )
        // InternalKim.g:7369:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
        {
        // InternalKim.g:7369:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
        // InternalKim.g:7370:12: lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_1_0());
          											
        }
        pushFollow(FOLLOW_28);
        lv_alternativeObservables_5_0=ruleAlternativeDependencyObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:7387:10: (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )*
        loop488:
        do {
            int alt488=2;
            int LA488_0 = input.LA(1);

            if ( (LA488_0==27) ) {
                alt488=1;
            }


            switch (alt488) {
        	case 1 :
        	    // InternalKim.g:7388:11: otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
        	    {
        	    otherlv_6=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:7392:11: ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
        	    // InternalKim.g:7393:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
        	    {
        	    // InternalKim.g:7393:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
        	    // InternalKim.g:7394:13: lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_28);
        	    lv_alternativeObservables_7_0=ruleAlternativeDependencyObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop488;
            }
        } while (true);

        otherlv_8=(Token)match(input,41,FOLLOW_197); if (state.failed) return ;
        // InternalKim.g:7416:10: ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
        int alt489=3;
        int LA489_0 = input.LA(1);

        if ( (LA489_0==114) ) {
            alt489=1;
        }
        else if ( (LA489_0==115) ) {
            alt489=2;
        }
        switch (alt489) {
            case 1 :
                // InternalKim.g:7417:11: ( (lv_optional_9_0= 'optional' ) )
                {
                // InternalKim.g:7417:11: ( (lv_optional_9_0= 'optional' ) )
                // InternalKim.g:7418:12: (lv_optional_9_0= 'optional' )
                {
                // InternalKim.g:7418:12: (lv_optional_9_0= 'optional' )
                // InternalKim.g:7419:13: lv_optional_9_0= 'optional'
                {
                lv_optional_9_0=(Token)match(input,114,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7432:11: otherlv_10= 'required'
                {
                otherlv_10=(Token)match(input,115,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred296_InternalKim

    // $ANTLR start synpred298_InternalKim
    public final void synpred298_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        Token lv_name_12_1=null;
        Token lv_name_12_2=null;

        // InternalKim.g:7443:5: ( ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:7443:5: ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:7443:5: ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:7444:6: {...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred298_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1)");
        }
        // InternalKim.g:7444:110: ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:7445:7: ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1);
        // InternalKim.g:7448:10: ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:7448:11: {...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred298_InternalKim", "true");
        }
        // InternalKim.g:7448:20: (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) )
        // InternalKim.g:7448:21: otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) )
        {
        otherlv_11=(Token)match(input,116,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:7452:10: ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) )
        // InternalKim.g:7453:11: ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) )
        {
        // InternalKim.g:7453:11: ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) )
        // InternalKim.g:7454:12: (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING )
        {
        // InternalKim.g:7454:12: (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING )
        int alt490=2;
        int LA490_0 = input.LA(1);

        if ( (LA490_0==RULE_LOWERCASE_ID) ) {
            alt490=1;
        }
        else if ( (LA490_0==RULE_STRING) ) {
            alt490=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 490, 0, input);

            throw nvae;
        }
        switch (alt490) {
            case 1 :
                // InternalKim.g:7455:13: lv_name_12_1= RULE_LOWERCASE_ID
                {
                lv_name_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:7470:13: lv_name_12_2= RULE_STRING
                {
                lv_name_12_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred298_InternalKim

    // $ANTLR start synpred299_InternalKim
    public final void synpred299_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_0_0 = null;


        // InternalKim.g:7535:4: ( (lv_main_0_0= ruleConcept ) )
        // InternalKim.g:7535:4: (lv_main_0_0= ruleConcept )
        {
        // InternalKim.g:7535:4: (lv_main_0_0= ruleConcept )
        // InternalKim.g:7536:5: lv_main_0_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_0_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred299_InternalKim

    // $ANTLR start synpred301_InternalKim
    public final void synpred301_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        EObject lv_inherency_4_0 = null;


        // InternalKim.g:7560:4: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:7560:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:7560:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7561:5: {...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred301_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:7561:115: ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7562:6: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:7565:9: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7565:10: {...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred301_InternalKim", "true");
        }
        // InternalKim.g:7565:19: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7565:20: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_2=(Token)match(input,121,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:7569:9: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7570:10: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:7570:10: ( (lv_distributedOfInherency_3_0= 'each' ) )?
        int alt491=2;
        int LA491_0 = input.LA(1);

        if ( (LA491_0==26) ) {
            alt491=1;
        }
        switch (alt491) {
            case 1 :
                // InternalKim.g:7571:11: (lv_distributedOfInherency_3_0= 'each' )
                {
                // InternalKim.g:7571:11: (lv_distributedOfInherency_3_0= 'each' )
                // InternalKim.g:7572:12: lv_distributedOfInherency_3_0= 'each'
                {
                lv_distributedOfInherency_3_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:7584:10: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7585:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7585:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7586:12: lv_inherency_4_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_inherency_4_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred301_InternalKim

    // $ANTLR start synpred303_InternalKim
    public final void synpred303_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        EObject lv_motivation_7_0 = null;


        // InternalKim.g:7610:4: ( ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:7610:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:7610:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7611:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred303_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:7611:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7612:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:7615:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7615:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred303_InternalKim", "true");
        }
        // InternalKim.g:7615:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7615:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_5=(Token)match(input,69,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:7619:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7620:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:7620:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
        int alt492=2;
        int LA492_0 = input.LA(1);

        if ( (LA492_0==26) ) {
            alt492=1;
        }
        switch (alt492) {
            case 1 :
                // InternalKim.g:7621:11: (lv_distributedForInherency_6_0= 'each' )
                {
                // InternalKim.g:7621:11: (lv_distributedForInherency_6_0= 'each' )
                // InternalKim.g:7622:12: lv_distributedForInherency_6_0= 'each'
                {
                lv_distributedForInherency_6_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:7634:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7635:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7635:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7636:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_motivation_7_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred303_InternalKim

    // $ANTLR start synpred304_InternalKim
    public final void synpred304_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        EObject lv_compresent_9_0 = null;


        // InternalKim.g:7660:4: ( ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7660:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7660:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7661:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred304_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:7661:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7662:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:7665:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7665:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred304_InternalKim", "true");
        }
        // InternalKim.g:7665:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7665:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_8=(Token)match(input,98,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:7669:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7670:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7670:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7671:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_compresent_9_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred304_InternalKim

    // $ANTLR start synpred305_InternalKim
    public final void synpred305_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_causant_12_0 = null;


        // InternalKim.g:7694:4: ( ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7694:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7694:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7695:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred305_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:7695:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7696:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:7699:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7699:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred305_InternalKim", "true");
        }
        // InternalKim.g:7699:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7699:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_10=(Token)match(input,122,FOLLOW_100); if (state.failed) return ;
        otherlv_11=(Token)match(input,88,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:7707:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7708:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7708:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7709:11: lv_causant_12_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_causant_12_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred305_InternalKim

    // $ANTLR start synpred306_InternalKim
    public final void synpred306_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        Token otherlv_14=null;
        EObject lv_adjacent_15_0 = null;


        // InternalKim.g:7732:4: ( ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7732:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7732:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7733:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred306_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
        }
        // InternalKim.g:7733:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7734:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
        // InternalKim.g:7737:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7737:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred306_InternalKim", "true");
        }
        // InternalKim.g:7737:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7737:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_13=(Token)match(input,123,FOLLOW_24); if (state.failed) return ;
        otherlv_14=(Token)match(input,36,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:7745:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7746:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7746:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7747:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_adjacent_15_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred306_InternalKim

    // $ANTLR start synpred307_InternalKim
    public final void synpred307_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_16=null;
        Token otherlv_17=null;
        EObject lv_container_18_0 = null;


        // InternalKim.g:7770:4: ( ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7770:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7770:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7771:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred307_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
        }
        // InternalKim.g:7771:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7772:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
        // InternalKim.g:7775:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7775:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred307_InternalKim", "true");
        }
        // InternalKim.g:7775:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7775:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_16=(Token)match(input,124,FOLLOW_101); if (state.failed) return ;
        otherlv_17=(Token)match(input,48,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:7783:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7784:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7784:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7785:11: lv_container_18_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_container_18_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred307_InternalKim

    // $ANTLR start synpred308_InternalKim
    public final void synpred308_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        EObject lv_contained_20_0 = null;


        // InternalKim.g:7808:4: ( ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7808:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7808:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7809:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred308_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
        }
        // InternalKim.g:7809:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7810:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
        // InternalKim.g:7813:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7813:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred308_InternalKim", "true");
        }
        // InternalKim.g:7813:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7813:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_19=(Token)match(input,125,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:7817:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7818:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7818:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7819:11: lv_contained_20_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_contained_20_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred308_InternalKim

    // $ANTLR start synpred309_InternalKim
    public final void synpred309_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_21=null;
        EObject lv_caused_22_0 = null;


        // InternalKim.g:7842:4: ( ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7842:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7842:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7843:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred309_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
        }
        // InternalKim.g:7843:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7844:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
        // InternalKim.g:7847:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7847:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred309_InternalKim", "true");
        }
        // InternalKim.g:7847:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7847:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_21=(Token)match(input,126,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:7851:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7852:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7852:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7853:11: lv_caused_22_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_caused_22_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred309_InternalKim

    // $ANTLR start synpred310_InternalKim
    public final void synpred310_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        EObject lv_during_24_0 = null;


        // InternalKim.g:7876:4: ( ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7876:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7876:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7877:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred310_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
        }
        // InternalKim.g:7877:115: ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7878:6: ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
        // InternalKim.g:7881:9: ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7881:10: {...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred310_InternalKim", "true");
        }
        // InternalKim.g:7881:19: (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7881:20: otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_23=(Token)match(input,127,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:7885:9: ( (lv_during_24_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7886:10: (lv_during_24_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7886:10: (lv_during_24_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7887:11: lv_during_24_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_during_24_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred310_InternalKim

    // $ANTLR start synpred312_InternalKim
    public final void synpred312_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_25=null;
        Token lv_distributedWithinInherency_26_0=null;
        EObject lv_context_27_0 = null;


        // InternalKim.g:7910:4: ( ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:7910:4: ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:7910:4: ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7911:5: {...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred312_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
        }
        // InternalKim.g:7911:115: ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7912:6: ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
        // InternalKim.g:7915:9: ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7915:10: {...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred312_InternalKim", "true");
        }
        // InternalKim.g:7915:19: (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7915:20: otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_25=(Token)match(input,128,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:7919:9: ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7920:10: ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:7920:10: ( (lv_distributedWithinInherency_26_0= 'each' ) )?
        int alt493=2;
        int LA493_0 = input.LA(1);

        if ( (LA493_0==26) ) {
            alt493=1;
        }
        switch (alt493) {
            case 1 :
                // InternalKim.g:7921:11: (lv_distributedWithinInherency_26_0= 'each' )
                {
                // InternalKim.g:7921:11: (lv_distributedWithinInherency_26_0= 'each' )
                // InternalKim.g:7922:12: lv_distributedWithinInherency_26_0= 'each'
                {
                lv_distributedWithinInherency_26_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:7934:10: ( (lv_context_27_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7935:11: (lv_context_27_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7935:11: (lv_context_27_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7936:12: lv_context_27_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_context_27_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred312_InternalKim

    // $ANTLR start synpred313_InternalKim
    public final void synpred313_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_28=null;
        Token otherlv_30=null;
        EObject lv_relationshipSource_29_0 = null;

        EObject lv_relationshipTarget_31_0 = null;


        // InternalKim.g:7960:4: ( ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7960:4: ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:7960:4: ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7961:5: {...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred313_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
        }
        // InternalKim.g:7961:116: ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7962:6: ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
        // InternalKim.g:7965:9: ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7965:10: {...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred313_InternalKim", "true");
        }
        // InternalKim.g:7965:19: (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7965:20: otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_28=(Token)match(input,129,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:7969:9: ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7970:10: (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7970:10: (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7971:11: lv_relationshipSource_29_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_relationshipSource_29_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_30=(Token)match(input,36,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:7992:9: ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7993:10: (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7993:10: (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7994:11: lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_relationshipTarget_31_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred313_InternalKim

    // $ANTLR start synpred314_InternalKim
    public final void synpred314_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token lv_distributedWithinInherency_26_0=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        EObject lv_inherency_4_0 = null;

        EObject lv_motivation_7_0 = null;

        EObject lv_compresent_9_0 = null;

        EObject lv_causant_12_0 = null;

        EObject lv_adjacent_15_0 = null;

        EObject lv_container_18_0 = null;

        EObject lv_contained_20_0 = null;

        EObject lv_caused_22_0 = null;

        EObject lv_during_24_0 = null;

        EObject lv_context_27_0 = null;

        EObject lv_relationshipSource_29_0 = null;

        EObject lv_relationshipTarget_31_0 = null;


        // InternalKim.g:7554:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )
        // InternalKim.g:7554:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
        {
        // InternalKim.g:7554:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
        // InternalKim.g:7555:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
        // InternalKim.g:7558:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
        // InternalKim.g:7559:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
        {
        // InternalKim.g:7559:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
        loop497:
        do {
            int alt497=12;
            alt497 = dfa497.predict(input);
            switch (alt497) {
        	case 1 :
        	    // InternalKim.g:7560:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7560:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:7561:5: {...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
        	    }
        	    // InternalKim.g:7561:115: ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7562:6: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
        	    // InternalKim.g:7565:9: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7565:10: {...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "true");
        	    }
        	    // InternalKim.g:7565:19: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7565:20: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_2=(Token)match(input,121,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:7569:9: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7570:10: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:7570:10: ( (lv_distributedOfInherency_3_0= 'each' ) )?
        	    int alt494=2;
        	    int LA494_0 = input.LA(1);

        	    if ( (LA494_0==26) ) {
        	        alt494=1;
        	    }
        	    switch (alt494) {
        	        case 1 :
        	            // InternalKim.g:7571:11: (lv_distributedOfInherency_3_0= 'each' )
        	            {
        	            // InternalKim.g:7571:11: (lv_distributedOfInherency_3_0= 'each' )
        	            // InternalKim.g:7572:12: lv_distributedOfInherency_3_0= 'each'
        	            {
        	            lv_distributedOfInherency_3_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:7584:10: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7585:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7585:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7586:12: lv_inherency_4_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_99);
        	    lv_inherency_4_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:7610:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7610:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:7611:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
        	    }
        	    // InternalKim.g:7611:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7612:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
        	    // InternalKim.g:7615:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7615:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "true");
        	    }
        	    // InternalKim.g:7615:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7615:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_5=(Token)match(input,69,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:7619:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7620:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:7620:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
        	    int alt495=2;
        	    int LA495_0 = input.LA(1);

        	    if ( (LA495_0==26) ) {
        	        alt495=1;
        	    }
        	    switch (alt495) {
        	        case 1 :
        	            // InternalKim.g:7621:11: (lv_distributedForInherency_6_0= 'each' )
        	            {
        	            // InternalKim.g:7621:11: (lv_distributedForInherency_6_0= 'each' )
        	            // InternalKim.g:7622:12: lv_distributedForInherency_6_0= 'each'
        	            {
        	            lv_distributedForInherency_6_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:7634:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7635:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7635:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7636:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_99);
        	    lv_motivation_7_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:7660:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7660:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7661:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
        	    }
        	    // InternalKim.g:7661:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7662:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
        	    // InternalKim.g:7665:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7665:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "true");
        	    }
        	    // InternalKim.g:7665:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7665:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_8=(Token)match(input,98,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:7669:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7670:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7670:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7671:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_99);
        	    lv_compresent_9_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 4 :
        	    // InternalKim.g:7694:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7694:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7695:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
        	    }
        	    // InternalKim.g:7695:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7696:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
        	    // InternalKim.g:7699:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7699:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "true");
        	    }
        	    // InternalKim.g:7699:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7699:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_10=(Token)match(input,122,FOLLOW_100); if (state.failed) return ;
        	    otherlv_11=(Token)match(input,88,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:7707:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7708:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7708:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7709:11: lv_causant_12_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_99);
        	    lv_causant_12_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 5 :
        	    // InternalKim.g:7732:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7732:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7733:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
        	    }
        	    // InternalKim.g:7733:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7734:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
        	    // InternalKim.g:7737:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7737:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "true");
        	    }
        	    // InternalKim.g:7737:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7737:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_13=(Token)match(input,123,FOLLOW_24); if (state.failed) return ;
        	    otherlv_14=(Token)match(input,36,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:7745:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7746:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7746:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7747:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_99);
        	    lv_adjacent_15_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 6 :
        	    // InternalKim.g:7770:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7770:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7771:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
        	    }
        	    // InternalKim.g:7771:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7772:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
        	    // InternalKim.g:7775:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7775:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "true");
        	    }
        	    // InternalKim.g:7775:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7775:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_16=(Token)match(input,124,FOLLOW_101); if (state.failed) return ;
        	    otherlv_17=(Token)match(input,48,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:7783:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7784:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7784:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7785:11: lv_container_18_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_99);
        	    lv_container_18_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 7 :
        	    // InternalKim.g:7808:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7808:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7809:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
        	    }
        	    // InternalKim.g:7809:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7810:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
        	    // InternalKim.g:7813:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7813:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "true");
        	    }
        	    // InternalKim.g:7813:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7813:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_19=(Token)match(input,125,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:7817:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7818:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7818:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7819:11: lv_contained_20_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_99);
        	    lv_contained_20_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 8 :
        	    // InternalKim.g:7842:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7842:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7843:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
        	    }
        	    // InternalKim.g:7843:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7844:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
        	    // InternalKim.g:7847:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7847:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "true");
        	    }
        	    // InternalKim.g:7847:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7847:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_21=(Token)match(input,126,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:7851:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7852:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7852:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7853:11: lv_caused_22_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_99);
        	    lv_caused_22_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 9 :
        	    // InternalKim.g:7876:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7876:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7877:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
        	    }
        	    // InternalKim.g:7877:115: ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7878:6: ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
        	    // InternalKim.g:7881:9: ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7881:10: {...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "true");
        	    }
        	    // InternalKim.g:7881:19: (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7881:20: otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_23=(Token)match(input,127,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:7885:9: ( (lv_during_24_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7886:10: (lv_during_24_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7886:10: (lv_during_24_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7887:11: lv_during_24_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_99);
        	    lv_during_24_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 10 :
        	    // InternalKim.g:7910:4: ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7910:4: ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:7911:5: {...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
        	    }
        	    // InternalKim.g:7911:115: ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7912:6: ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
        	    // InternalKim.g:7915:9: ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7915:10: {...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "true");
        	    }
        	    // InternalKim.g:7915:19: (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7915:20: otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_25=(Token)match(input,128,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:7919:9: ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7920:10: ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:7920:10: ( (lv_distributedWithinInherency_26_0= 'each' ) )?
        	    int alt496=2;
        	    int LA496_0 = input.LA(1);

        	    if ( (LA496_0==26) ) {
        	        alt496=1;
        	    }
        	    switch (alt496) {
        	        case 1 :
        	            // InternalKim.g:7921:11: (lv_distributedWithinInherency_26_0= 'each' )
        	            {
        	            // InternalKim.g:7921:11: (lv_distributedWithinInherency_26_0= 'each' )
        	            // InternalKim.g:7922:12: lv_distributedWithinInherency_26_0= 'each'
        	            {
        	            lv_distributedWithinInherency_26_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:7934:10: ( (lv_context_27_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7935:11: (lv_context_27_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7935:11: (lv_context_27_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7936:12: lv_context_27_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_99);
        	    lv_context_27_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 11 :
        	    // InternalKim.g:7960:4: ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7960:4: ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7961:5: {...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
        	    }
        	    // InternalKim.g:7961:116: ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7962:6: ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
        	    // InternalKim.g:7965:9: ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7965:10: {...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred314_InternalKim", "true");
        	    }
        	    // InternalKim.g:7965:19: (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7965:20: otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_28=(Token)match(input,129,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:7969:9: ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7970:10: (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7970:10: (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7971:11: lv_relationshipSource_29_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_relationshipSource_29_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_30=(Token)match(input,36,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:7992:9: ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7993:10: (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7993:10: (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7994:11: lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_99);
        	    lv_relationshipTarget_31_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop497;
            }
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred314_InternalKim

    // $ANTLR start synpred369_InternalKim
    public final void synpred369_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_46=null;
        EObject lv_other_47_0 = null;


        // InternalKim.g:9565:5: ( ( ( 'in' )=>otherlv_46= 'in' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9565:5: ( ( 'in' )=>otherlv_46= 'in' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:9565:5: ( ( 'in' )=>otherlv_46= 'in' )
        // InternalKim.g:9566:6: ( 'in' )=>otherlv_46= 'in'
        {
        otherlv_46=(Token)match(input,48,FOLLOW_8); if (state.failed) return ;

        }

        // InternalKim.g:9572:5: ( (lv_other_47_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9573:6: (lv_other_47_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9573:6: (lv_other_47_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9574:7: lv_other_47_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_12_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_47_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred369_InternalKim

    // $ANTLR start synpred372_InternalKim
    public final void synpred372_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_51=null;
        EObject lv_other_52_0 = null;


        // InternalKim.g:9633:5: ( ( ( 'in' )=>otherlv_51= 'in' ) ( (lv_other_52_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9633:5: ( ( 'in' )=>otherlv_51= 'in' ) ( (lv_other_52_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:9633:5: ( ( 'in' )=>otherlv_51= 'in' )
        // InternalKim.g:9634:6: ( 'in' )=>otherlv_51= 'in'
        {
        otherlv_51=(Token)match(input,48,FOLLOW_8); if (state.failed) return ;

        }

        // InternalKim.g:9640:5: ( (lv_other_52_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9641:6: (lv_other_52_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9641:6: (lv_other_52_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9642:7: lv_other_52_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_13_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_52_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred372_InternalKim

    // $ANTLR start synpred378_InternalKim
    public final void synpred378_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_62=null;
        EObject lv_other_63_0 = null;


        // InternalKim.g:9781:5: ( ( ( 'over' )=>otherlv_62= 'over' ) ( (lv_other_63_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9781:5: ( ( 'over' )=>otherlv_62= 'over' ) ( (lv_other_63_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:9781:5: ( ( 'over' )=>otherlv_62= 'over' )
        // InternalKim.g:9782:6: ( 'over' )=>otherlv_62= 'over'
        {
        otherlv_62=(Token)match(input,55,FOLLOW_8); if (state.failed) return ;

        }

        // InternalKim.g:9788:5: ( (lv_other_63_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9789:6: (lv_other_63_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9789:6: (lv_other_63_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9790:7: lv_other_63_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_15_4_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_63_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred378_InternalKim

    // $ANTLR start synpred387_InternalKim
    public final void synpred387_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_0=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:10080:4: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )
        // InternalKim.g:10080:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
        {
        // InternalKim.g:10080:4: ( (lv_operators_1_0= 'or' ) )
        // InternalKim.g:10081:5: (lv_operators_1_0= 'or' )
        {
        // InternalKim.g:10081:5: (lv_operators_1_0= 'or' )
        // InternalKim.g:10082:6: lv_operators_1_0= 'or'
        {
        lv_operators_1_0=(Token)match(input,161,FOLLOW_8); if (state.failed) return ;

        }


        }

        // InternalKim.g:10094:4: ( (lv_operands_2_0= ruleFactor ) )
        // InternalKim.g:10095:5: (lv_operands_2_0= ruleFactor )
        {
        // InternalKim.g:10095:5: (lv_operands_2_0= ruleFactor )
        // InternalKim.g:10096:6: lv_operands_2_0= ruleFactor
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleFactor();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred387_InternalKim

    // $ANTLR start synpred389_InternalKim
    public final void synpred389_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:10145:4: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )
        // InternalKim.g:10145:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
        {
        // InternalKim.g:10145:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
        // InternalKim.g:10146:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        {
        // InternalKim.g:10146:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        // InternalKim.g:10147:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        {
        // InternalKim.g:10147:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        int alt528=2;
        int LA528_0 = input.LA(1);

        if ( (LA528_0==162) ) {
            alt528=1;
        }
        else if ( (LA528_0==163) ) {
            alt528=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 528, 0, input);

            throw nvae;
        }
        switch (alt528) {
            case 1 :
                // InternalKim.g:10148:7: lv_operators_1_1= 'and'
                {
                lv_operators_1_1=(Token)match(input,162,FOLLOW_8); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:10159:7: lv_operators_1_2= 'follows'
                {
                lv_operators_1_2=(Token)match(input,163,FOLLOW_8); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalKim.g:10172:4: ( (lv_operands_2_0= ruleTerm ) )
        // InternalKim.g:10173:5: (lv_operands_2_0= ruleTerm )
        {
        // InternalKim.g:10173:5: (lv_operands_2_0= ruleTerm )
        // InternalKim.g:10174:6: lv_operands_2_0= ruleTerm
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleTerm();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred389_InternalKim

    // $ANTLR start synpred391_InternalKim
    public final void synpred391_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_1_0 = null;


        // InternalKim.g:10230:4: ( (lv_main_1_0= ruleConcept ) )
        // InternalKim.g:10230:4: (lv_main_1_0= ruleConcept )
        {
        // InternalKim.g:10230:4: (lv_main_1_0= ruleConcept )
        // InternalKim.g:10231:5: lv_main_1_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_1_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred391_InternalKim

    // $ANTLR start synpred401_InternalKim
    public final void synpred401_InternalKim_fragment() throws RecognitionException {   
        Token lv_abstract_2_0=null;

        // InternalKim.g:10545:4: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) )
        // InternalKim.g:10545:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        {
        // InternalKim.g:10545:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        // InternalKim.g:10546:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred401_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:10546:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        // InternalKim.g:10547:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:10550:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        // InternalKim.g:10550:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred401_InternalKim", "true");
        }
        // InternalKim.g:10550:19: ( (lv_abstract_2_0= 'abstract' ) )
        // InternalKim.g:10550:20: (lv_abstract_2_0= 'abstract' )
        {
        // InternalKim.g:10550:20: (lv_abstract_2_0= 'abstract' )
        // InternalKim.g:10551:10: lv_abstract_2_0= 'abstract'
        {
        lv_abstract_2_0=(Token)match(input,169,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred401_InternalKim

    // $ANTLR start synpred402_InternalKim
    public final void synpred402_InternalKim_fragment() throws RecognitionException {   
        Token lv_deniable_3_0=null;

        // InternalKim.g:10568:4: ( ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) )
        // InternalKim.g:10568:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        {
        // InternalKim.g:10568:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        // InternalKim.g:10569:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred402_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:10569:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        // InternalKim.g:10570:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:10573:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        // InternalKim.g:10573:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred402_InternalKim", "true");
        }
        // InternalKim.g:10573:19: ( (lv_deniable_3_0= 'deniable' ) )
        // InternalKim.g:10573:20: (lv_deniable_3_0= 'deniable' )
        {
        // InternalKim.g:10573:20: (lv_deniable_3_0= 'deniable' )
        // InternalKim.g:10574:10: lv_deniable_3_0= 'deniable'
        {
        lv_deniable_3_0=(Token)match(input,170,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred402_InternalKim

    // $ANTLR start synpred403_InternalKim
    public final void synpred403_InternalKim_fragment() throws RecognitionException {   
        Token lv_subjective_4_0=null;

        // InternalKim.g:10591:4: ( ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) )
        // InternalKim.g:10591:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        {
        // InternalKim.g:10591:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        // InternalKim.g:10592:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred403_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:10592:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        // InternalKim.g:10593:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:10596:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        // InternalKim.g:10596:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred403_InternalKim", "true");
        }
        // InternalKim.g:10596:19: ( (lv_subjective_4_0= 'subjective' ) )
        // InternalKim.g:10596:20: (lv_subjective_4_0= 'subjective' )
        {
        // InternalKim.g:10596:20: (lv_subjective_4_0= 'subjective' )
        // InternalKim.g:10597:10: lv_subjective_4_0= 'subjective'
        {
        lv_subjective_4_0=(Token)match(input,171,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred403_InternalKim

    // $ANTLR start synpred407_InternalKim
    public final void synpred407_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:10679:11: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )
        // InternalKim.g:10679:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        {
        // InternalKim.g:10679:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        // InternalKim.g:10680:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred407_InternalKim

    // $ANTLR start synpred409_InternalKim
    public final void synpred409_InternalKim_fragment() throws RecognitionException {   
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token lv_attributeSpecifier_8_0=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:10614:4: ( ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )
        // InternalKim.g:10614:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
        {
        // InternalKim.g:10614:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
        // InternalKim.g:10615:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred409_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:10615:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
        // InternalKim.g:10616:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:10619:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
        // InternalKim.g:10619:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred409_InternalKim", "true");
        }
        // InternalKim.g:10619:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
        int alt540=3;
        switch ( input.LA(1) ) {
        case 164:
        case 165:
        case 166:
            {
            alt540=1;
            }
            break;
        case 248:
        case 249:
            {
            alt540=2;
            }
            break;
        case 172:
            {
            alt540=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 540, 0, input);

            throw nvae;
        }

        switch (alt540) {
            case 1 :
                // InternalKim.g:10619:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                {
                // InternalKim.g:10619:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                // InternalKim.g:10620:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                {
                // InternalKim.g:10620:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                // InternalKim.g:10621:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                {
                // InternalKim.g:10621:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                int alt538=3;
                switch ( input.LA(1) ) {
                case 164:
                    {
                    alt538=1;
                    }
                    break;
                case 165:
                    {
                    alt538=2;
                    }
                    break;
                case 166:
                    {
                    alt538=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 538, 0, input);

                    throw nvae;
                }

                switch (alt538) {
                    case 1 :
                        // InternalKim.g:10622:12: lv_agentSpecifier_5_1= 'deliberative'
                        {
                        lv_agentSpecifier_5_1=(Token)match(input,164,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:10633:12: lv_agentSpecifier_5_2= 'interactive'
                        {
                        lv_agentSpecifier_5_2=(Token)match(input,165,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:10644:12: lv_agentSpecifier_5_3= 'reactive'
                        {
                        lv_agentSpecifier_5_3=(Token)match(input,166,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:10658:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                {
                // InternalKim.g:10658:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                // InternalKim.g:10659:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                {
                // InternalKim.g:10659:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
                // InternalKim.g:10660:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                {
                // InternalKim.g:10660:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                // InternalKim.g:10661:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
                  											
                }
                pushFollow(FOLLOW_198);
                lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:10678:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                loop539:
                do {
                    int alt539=2;
                    int LA539_0 = input.LA(1);

                    if ( ((LA539_0>=248 && LA539_0<=249)) ) {
                        alt539=1;
                    }


                    switch (alt539) {
                	case 1 :
                	    // InternalKim.g:10679:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    {
                	    // InternalKim.g:10679:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    // InternalKim.g:10680:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_198);
                	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop539;
                    }
                } while (true);


                }


                }
                break;
            case 3 :
                // InternalKim.g:10699:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
                {
                // InternalKim.g:10699:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
                // InternalKim.g:10700:10: (lv_attributeSpecifier_8_0= 'rescaling' )
                {
                // InternalKim.g:10700:10: (lv_attributeSpecifier_8_0= 'rescaling' )
                // InternalKim.g:10701:11: lv_attributeSpecifier_8_0= 'rescaling'
                {
                lv_attributeSpecifier_8_0=(Token)match(input,172,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred409_InternalKim

    // $ANTLR start synpred418_InternalKim
    public final void synpred418_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_11_0=null;

        // InternalKim.g:11003:4: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:11003:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        {
        // InternalKim.g:11003:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        // InternalKim.g:11004:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred418_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:11004:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        // InternalKim.g:11005:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:11008:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        // InternalKim.g:11008:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred418_InternalKim", "true");
        }
        // InternalKim.g:11008:19: ( (lv_docstring_11_0= RULE_STRING ) )
        // InternalKim.g:11008:20: (lv_docstring_11_0= RULE_STRING )
        {
        // InternalKim.g:11008:20: (lv_docstring_11_0= RULE_STRING )
        // InternalKim.g:11009:10: lv_docstring_11_0= RULE_STRING
        {
        lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred418_InternalKim

    // $ANTLR start synpred425_InternalKim
    public final void synpred425_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token lv_alias_13_0=null;
        Token lv_coreConcept_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;


        // InternalKim.g:11030:4: ( ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) )
        // InternalKim.g:11030:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        {
        // InternalKim.g:11030:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:11031:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred425_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:11031:117: ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:11032:6: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:11035:9: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:11035:10: {...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred425_InternalKim", "true");
        }
        // InternalKim.g:11035:19: ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:11035:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        {
        // InternalKim.g:11035:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? )
        // InternalKim.g:11036:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )?
        {
        // InternalKim.g:11036:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) )
        int alt546=2;
        int LA546_0 = input.LA(1);

        if ( (LA546_0==173) ) {
            alt546=1;
        }
        else if ( (LA546_0==174) ) {
            alt546=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 546, 0, input);

            throw nvae;
        }
        switch (alt546) {
            case 1 :
                // InternalKim.g:11037:11: otherlv_12= 'is'
                {
                otherlv_12=(Token)match(input,173,FOLLOW_127); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:11042:11: ( (lv_alias_13_0= 'equals' ) )
                {
                // InternalKim.g:11042:11: ( (lv_alias_13_0= 'equals' ) )
                // InternalKim.g:11043:12: (lv_alias_13_0= 'equals' )
                {
                // InternalKim.g:11043:12: (lv_alias_13_0= 'equals' )
                // InternalKim.g:11044:13: lv_alias_13_0= 'equals'
                {
                lv_alias_13_0=(Token)match(input,174,FOLLOW_127); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:11057:10: ( (lv_coreConcept_14_0= 'core' ) )?
        int alt547=2;
        int LA547_0 = input.LA(1);

        if ( (LA547_0==175) ) {
            alt547=1;
        }
        switch (alt547) {
            case 1 :
                // InternalKim.g:11058:11: (lv_coreConcept_14_0= 'core' )
                {
                // InternalKim.g:11058:11: (lv_coreConcept_14_0= 'core' )
                // InternalKim.g:11059:12: lv_coreConcept_14_0= 'core'
                {
                lv_coreConcept_14_0=(Token)match(input,175,FOLLOW_128); if (state.failed) return ;

                }


                }
                break;

        }


        }

        // InternalKim.g:11072:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        int alt550=2;
        int LA550_0 = input.LA(1);

        if ( (LA550_0==176) ) {
            alt550=1;
        }
        else if ( ((LA550_0>=RULE_UPPERCASE_ID && LA550_0<=RULE_LOWERCASE_ID)||LA550_0==RULE_CAMELCASE_ID||LA550_0==RULE_LOWERCASE_DASHID||LA550_0==38||(LA550_0>=130 && LA550_0<=131)||(LA550_0>=139 && LA550_0<=140)||(LA550_0>=142 && LA550_0<=160)) ) {
            alt550=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 550, 0, input);

            throw nvae;
        }
        switch (alt550) {
            case 1 :
                // InternalKim.g:11073:10: ( (lv_nothing_15_0= 'nothing' ) )
                {
                // InternalKim.g:11073:10: ( (lv_nothing_15_0= 'nothing' ) )
                // InternalKim.g:11074:11: (lv_nothing_15_0= 'nothing' )
                {
                // InternalKim.g:11074:11: (lv_nothing_15_0= 'nothing' )
                // InternalKim.g:11075:12: lv_nothing_15_0= 'nothing'
                {
                lv_nothing_15_0=(Token)match(input,176,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:11088:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:11088:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:11089:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:11089:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
                // InternalKim.g:11090:12: (lv_parents_16_0= ruleConceptDeclaration )
                {
                // InternalKim.g:11090:12: (lv_parents_16_0= ruleConceptDeclaration )
                // InternalKim.g:11091:13: lv_parents_16_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
                  												
                }
                pushFollow(FOLLOW_199);
                lv_parents_16_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11108:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                loop549:
                do {
                    int alt549=2;
                    int LA549_0 = input.LA(1);

                    if ( (LA549_0==27||(LA549_0>=161 && LA549_0<=162)) ) {
                        alt549=1;
                    }


                    switch (alt549) {
                	case 1 :
                	    // InternalKim.g:11109:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    {
                	    // InternalKim.g:11109:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
                	    // InternalKim.g:11110:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    {
                	    // InternalKim.g:11110:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    // InternalKim.g:11111:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    {
                	    // InternalKim.g:11111:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    int alt548=3;
                	    switch ( input.LA(1) ) {
                	    case 27:
                	        {
                	        alt548=1;
                	        }
                	        break;
                	    case 161:
                	        {
                	        alt548=2;
                	        }
                	        break;
                	    case 162:
                	        {
                	        alt548=3;
                	        }
                	        break;
                	    default:
                	        if (state.backtracking>0) {state.failed=true; return ;}
                	        NoViableAltException nvae =
                	            new NoViableAltException("", 548, 0, input);

                	        throw nvae;
                	    }

                	    switch (alt548) {
                	        case 1 :
                	            // InternalKim.g:11112:15: lv_connectors_17_1= ','
                	            {
                	            lv_connectors_17_1=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;

                	            }
                	            break;
                	        case 2 :
                	            // InternalKim.g:11123:15: lv_connectors_17_2= 'or'
                	            {
                	            lv_connectors_17_2=(Token)match(input,161,FOLLOW_8); if (state.failed) return ;

                	            }
                	            break;
                	        case 3 :
                	            // InternalKim.g:11134:15: lv_connectors_17_3= 'and'
                	            {
                	            lv_connectors_17_3=(Token)match(input,162,FOLLOW_8); if (state.failed) return ;

                	            }
                	            break;

                	    }


                	    }


                	    }

                	    // InternalKim.g:11147:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:11148:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:11148:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    // InternalKim.g:11149:14: lv_parents_18_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
                	      													
                	    }
                	    pushFollow(FOLLOW_199);
                	    lv_parents_18_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop549;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred425_InternalKim

    // $ANTLR start synpred429_InternalKim
    public final void synpred429_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;


        // InternalKim.g:11175:4: ( ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:11175:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:11175:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:11176:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred429_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:11176:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:11177:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:11180:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:11180:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred429_InternalKim", "true");
        }
        // InternalKim.g:11180:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        int alt554=2;
        int LA554_0 = input.LA(1);

        if ( (LA554_0==177) ) {
            alt554=1;
        }
        else if ( (LA554_0==178) ) {
            alt554=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 554, 0, input);

            throw nvae;
        }
        switch (alt554) {
            case 1 :
                // InternalKim.g:11180:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                {
                // InternalKim.g:11180:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                // InternalKim.g:11181:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                {
                otherlv_19=(Token)match(input,177,FOLLOW_8); if (state.failed) return ;
                // InternalKim.g:11185:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
                // InternalKim.g:11186:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                {
                // InternalKim.g:11186:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                // InternalKim.g:11187:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
                  											
                }
                pushFollow(FOLLOW_33);
                lv_contextualizedTraits_20_0=ruleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11204:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                loop552:
                do {
                    int alt552=2;
                    int LA552_0 = input.LA(1);

                    if ( (LA552_0==27) ) {
                        alt552=1;
                    }


                    switch (alt552) {
                	case 1 :
                	    // InternalKim.g:11205:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    {
                	    otherlv_21=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
                	    // InternalKim.g:11209:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    // InternalKim.g:11210:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    {
                	    // InternalKim.g:11210:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    // InternalKim.g:11211:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_33);
                	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop552;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:11231:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:11231:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:11232:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:11232:10: ( (lv_specific_23_0= 'exposing' ) )
                // InternalKim.g:11233:11: (lv_specific_23_0= 'exposing' )
                {
                // InternalKim.g:11233:11: (lv_specific_23_0= 'exposing' )
                // InternalKim.g:11234:12: lv_specific_23_0= 'exposing'
                {
                lv_specific_23_0=(Token)match(input,178,FOLLOW_8); if (state.failed) return ;

                }


                }

                // InternalKim.g:11246:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
                // InternalKim.g:11247:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                {
                // InternalKim.g:11247:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                // InternalKim.g:11248:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
                  											
                }
                pushFollow(FOLLOW_33);
                lv_contextualizesTraits_24_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11265:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                loop553:
                do {
                    int alt553=2;
                    int LA553_0 = input.LA(1);

                    if ( (LA553_0==27) ) {
                        alt553=1;
                    }


                    switch (alt553) {
                	case 1 :
                	    // InternalKim.g:11266:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_25=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
                	    // InternalKim.g:11270:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:11271:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:11271:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    // InternalKim.g:11272:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_33);
                	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop553;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred429_InternalKim

    // $ANTLR start synpred431_InternalKim
    public final void synpred431_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_0=null;
        EObject lv_upperConcept_30_0 = null;


        // InternalKim.g:11297:4: ( ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:11297:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:11297:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:11298:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred431_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:11298:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:11299:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:11302:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        // InternalKim.g:11302:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred431_InternalKim", "true");
        }
        // InternalKim.g:11302:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        // InternalKim.g:11302:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        {
        otherlv_27=(Token)match(input,179,FOLLOW_131); if (state.failed) return ;
        // InternalKim.g:11306:9: ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        int alt555=2;
        int LA555_0 = input.LA(1);

        if ( (LA555_0==180) ) {
            alt555=1;
        }
        else if ( ((LA555_0>=RULE_UPPERCASE_ID && LA555_0<=RULE_LOWERCASE_ID)||LA555_0==RULE_CAMELCASE_ID||LA555_0==RULE_LOWERCASE_DASHID||LA555_0==38||(LA555_0>=130 && LA555_0<=131)||(LA555_0>=139 && LA555_0<=140)||(LA555_0>=142 && LA555_0<=160)) ) {
            alt555=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 555, 0, input);

            throw nvae;
        }
        switch (alt555) {
            case 1 :
                // InternalKim.g:11307:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
                {
                // InternalKim.g:11307:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
                // InternalKim.g:11308:11: otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
                {
                otherlv_28=(Token)match(input,180,FOLLOW_132); if (state.failed) return ;
                // InternalKim.g:11312:11: ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
                // InternalKim.g:11313:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
                {
                // InternalKim.g:11313:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
                // InternalKim.g:11314:13: lv_definedAuthority_29_0= RULE_UPPERCASE_PATH
                {
                lv_definedAuthority_29_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:11332:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                {
                // InternalKim.g:11332:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                // InternalKim.g:11333:11: (lv_upperConcept_30_0= ruleConcept )
                {
                // InternalKim.g:11333:11: (lv_upperConcept_30_0= ruleConcept )
                // InternalKim.g:11334:12: lv_upperConcept_30_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_upperConcept_30_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred431_InternalKim

    // $ANTLR start synpred433_InternalKim
    public final void synpred433_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_33=null;
        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;


        // InternalKim.g:11358:4: ( ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) )
        // InternalKim.g:11358:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        {
        // InternalKim.g:11358:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        // InternalKim.g:11359:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred433_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:11359:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        // InternalKim.g:11360:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:11363:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        // InternalKim.g:11363:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred433_InternalKim", "true");
        }
        // InternalKim.g:11363:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        // InternalKim.g:11363:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        {
        otherlv_31=(Token)match(input,181,FOLLOW_133); if (state.failed) return ;
        // InternalKim.g:11367:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
        // InternalKim.g:11368:10: (lv_requirements_32_0= ruleIdentityRequirement )
        {
        // InternalKim.g:11368:10: (lv_requirements_32_0= ruleIdentityRequirement )
        // InternalKim.g:11369:11: lv_requirements_32_0= ruleIdentityRequirement
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
          										
        }
        pushFollow(FOLLOW_33);
        lv_requirements_32_0=ruleIdentityRequirement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11386:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        loop556:
        do {
            int alt556=2;
            int LA556_0 = input.LA(1);

            if ( (LA556_0==27) ) {
                alt556=1;
            }


            switch (alt556) {
        	case 1 :
        	    // InternalKim.g:11387:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    {
        	    otherlv_33=(Token)match(input,27,FOLLOW_133); if (state.failed) return ;
        	    // InternalKim.g:11391:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    // InternalKim.g:11392:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    {
        	    // InternalKim.g:11392:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    // InternalKim.g:11393:12: lv_requirements_34_0= ruleIdentityRequirement
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_requirements_34_0=ruleIdentityRequirement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop556;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred433_InternalKim

    // $ANTLR start synpred434_InternalKim
    public final void synpred434_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_35=null;
        EObject lv_describedQuality_36_0 = null;


        // InternalKim.g:11417:4: ( ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11417:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11417:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11418:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred434_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:11418:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11419:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:11422:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11422:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred434_InternalKim", "true");
        }
        // InternalKim.g:11422:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11422:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        {
        otherlv_35=(Token)match(input,182,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:11426:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        // InternalKim.g:11427:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11427:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        // InternalKim.g:11428:11: lv_describedQuality_36_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedQuality_36_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred434_InternalKim

    // $ANTLR start synpred435_InternalKim
    public final void synpred435_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_37=null;
        Token otherlv_38=null;
        EObject lv_describedProportionality_39_0 = null;


        // InternalKim.g:11451:4: ( ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11451:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11451:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11452:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred435_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:11452:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11453:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:11456:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11456:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred435_InternalKim", "true");
        }
        // InternalKim.g:11456:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11456:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        {
        otherlv_37=(Token)match(input,183,FOLLOW_72); if (state.failed) return ;
        otherlv_38=(Token)match(input,98,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:11464:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        // InternalKim.g:11465:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11465:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        // InternalKim.g:11466:11: lv_describedProportionality_39_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedProportionality_39_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred435_InternalKim

    // $ANTLR start synpred436_InternalKim
    public final void synpred436_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_40=null;
        Token otherlv_41=null;
        EObject lv_describedInverseProportionalityQuality_42_0 = null;


        // InternalKim.g:11489:4: ( ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11489:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11489:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11490:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred436_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
        }
        // InternalKim.g:11490:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11491:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
        // InternalKim.g:11494:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11494:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred436_InternalKim", "true");
        }
        // InternalKim.g:11494:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11494:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        {
        otherlv_40=(Token)match(input,184,FOLLOW_72); if (state.failed) return ;
        otherlv_41=(Token)match(input,98,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:11502:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        // InternalKim.g:11503:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11503:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        // InternalKim.g:11504:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred436_InternalKim

    // $ANTLR start synpred437_InternalKim
    public final void synpred437_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_43=null;
        EObject lv_describedNonzeroQuality_44_0 = null;


        // InternalKim.g:11527:4: ( ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11527:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11527:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11528:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred437_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
        }
        // InternalKim.g:11528:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11529:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
        // InternalKim.g:11532:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11532:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred437_InternalKim", "true");
        }
        // InternalKim.g:11532:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11532:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        {
        otherlv_43=(Token)match(input,185,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:11536:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        // InternalKim.g:11537:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11537:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        // InternalKim.g:11538:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred437_InternalKim

    // $ANTLR start synpred438_InternalKim
    public final void synpred438_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_45=null;
        EObject lv_classifiesQuality_46_0 = null;


        // InternalKim.g:11561:4: ( ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11561:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11561:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11562:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred438_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
        }
        // InternalKim.g:11562:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11563:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
        // InternalKim.g:11566:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11566:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred438_InternalKim", "true");
        }
        // InternalKim.g:11566:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11566:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        {
        otherlv_45=(Token)match(input,186,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:11570:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        // InternalKim.g:11571:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11571:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        // InternalKim.g:11572:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_classifiesQuality_46_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred438_InternalKim

    // $ANTLR start synpred439_InternalKim
    public final void synpred439_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_47=null;
        EObject lv_discretizesQuality_48_0 = null;


        // InternalKim.g:11595:4: ( ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11595:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11595:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11596:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred439_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
        }
        // InternalKim.g:11596:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11597:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
        // InternalKim.g:11600:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11600:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred439_InternalKim", "true");
        }
        // InternalKim.g:11600:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11600:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        {
        otherlv_47=(Token)match(input,187,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:11604:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        // InternalKim.g:11605:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11605:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        // InternalKim.g:11606:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_discretizesQuality_48_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred439_InternalKim

    // $ANTLR start synpred441_InternalKim
    public final void synpred441_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_49=null;
        Token otherlv_51=null;
        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;


        // InternalKim.g:11629:4: ( ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:11629:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:11629:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:11630:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred441_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
        }
        // InternalKim.g:11630:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:11631:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
        // InternalKim.g:11634:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:11634:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred441_InternalKim", "true");
        }
        // InternalKim.g:11634:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:11634:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_49=(Token)match(input,188,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:11638:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
        // InternalKim.g:11639:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11639:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        // InternalKim.g:11640:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
          										
        }
        pushFollow(FOLLOW_33);
        lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11657:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        loop557:
        do {
            int alt557=2;
            int LA557_0 = input.LA(1);

            if ( (LA557_0==27) ) {
                alt557=1;
            }


            switch (alt557) {
        	case 1 :
        	    // InternalKim.g:11658:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_51=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:11662:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:11663:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:11663:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    // InternalKim.g:11664:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop557;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred441_InternalKim

    // $ANTLR start synpred446_InternalKim
    public final void synpred446_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;


        // InternalKim.g:11688:4: ( ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:11688:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:11688:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:11689:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred446_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
        }
        // InternalKim.g:11689:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:11690:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
        // InternalKim.g:11693:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:11693:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred446_InternalKim", "true");
        }
        // InternalKim.g:11693:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:11693:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        {
        otherlv_53=(Token)match(input,189,FOLLOW_134); if (state.failed) return ;
        otherlv_54=(Token)match(input,190,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:11701:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
        // InternalKim.g:11702:10: (lv_roles_55_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11702:10: (lv_roles_55_0= ruleConceptDeclaration )
        // InternalKim.g:11703:11: lv_roles_55_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
          										
        }
        pushFollow(FOLLOW_135);
        lv_roles_55_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11720:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
        loop559:
        do {
            int alt559=2;
            int LA559_0 = input.LA(1);

            if ( (LA559_0==27) ) {
                alt559=1;
            }


            switch (alt559) {
        	case 1 :
        	    // InternalKim.g:11721:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_56=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:11725:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:11726:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:11726:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    // InternalKim.g:11727:12: lv_roles_57_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_135);
        	    lv_roles_57_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop559;
            }
        } while (true);

        // InternalKim.g:11745:9: (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
        int alt561=2;
        int LA561_0 = input.LA(1);

        if ( (LA561_0==191) ) {
            alt561=1;
        }
        switch (alt561) {
            case 1 :
                // InternalKim.g:11746:10: otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_58=(Token)match(input,191,FOLLOW_8); if (state.failed) return ;
                // InternalKim.g:11750:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
                // InternalKim.g:11751:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                {
                // InternalKim.g:11751:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                // InternalKim.g:11752:12: lv_targetObservables_59_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
                  											
                }
                pushFollow(FOLLOW_136);
                lv_targetObservables_59_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11769:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                loop560:
                do {
                    int alt560=2;
                    int LA560_0 = input.LA(1);

                    if ( (LA560_0==27) ) {
                        alt560=1;
                    }


                    switch (alt560) {
                	case 1 :
                	    // InternalKim.g:11770:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_60=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
                	    // InternalKim.g:11774:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:11775:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:11775:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    // InternalKim.g:11776:13: lv_targetObservables_61_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_136);
                	    lv_targetObservables_61_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop560;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:11795:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:11796:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_62=(Token)match(input,48,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:11800:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
        // InternalKim.g:11801:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11801:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        // InternalKim.g:11802:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
          											
        }
        pushFollow(FOLLOW_33);
        lv_restrictedObservables_63_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11819:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        loop562:
        do {
            int alt562=2;
            int LA562_0 = input.LA(1);

            if ( (LA562_0==27) ) {
                alt562=1;
            }


            switch (alt562) {
        	case 1 :
        	    // InternalKim.g:11820:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_64=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:11824:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:11825:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:11825:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    // InternalKim.g:11826:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop562;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred446_InternalKim

    // $ANTLR start synpred450_InternalKim
    public final void synpred450_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;


        // InternalKim.g:11851:4: ( ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) )
        // InternalKim.g:11851:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        {
        // InternalKim.g:11851:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        // InternalKim.g:11852:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred450_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
        }
        // InternalKim.g:11852:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        // InternalKim.g:11853:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
        // InternalKim.g:11856:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        // InternalKim.g:11856:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred450_InternalKim", "true");
        }
        // InternalKim.g:11856:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        // InternalKim.g:11856:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        {
        otherlv_66=(Token)match(input,192,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:11860:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
        // InternalKim.g:11861:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11861:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        // InternalKim.g:11862:11: lv_conferredTraits_67_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
          										
        }
        pushFollow(FOLLOW_200);
        lv_conferredTraits_67_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11879:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
        loop564:
        do {
            int alt564=2;
            int LA564_0 = input.LA(1);

            if ( (LA564_0==27) ) {
                alt564=1;
            }


            switch (alt564) {
        	case 1 :
        	    // InternalKim.g:11880:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_68=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:11884:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:11885:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:11885:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    // InternalKim.g:11886:12: lv_conferredTraits_69_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_200);
        	    lv_conferredTraits_69_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop564;
            }
        } while (true);

        // InternalKim.g:11904:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        int alt566=2;
        int LA566_0 = input.LA(1);

        if ( (LA566_0==36) ) {
            alt566=1;
        }
        switch (alt566) {
            case 1 :
                // InternalKim.g:11905:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_70=(Token)match(input,36,FOLLOW_8); if (state.failed) return ;
                // InternalKim.g:11909:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
                // InternalKim.g:11910:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                {
                // InternalKim.g:11910:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                // InternalKim.g:11911:12: lv_conferredTargets_71_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
                  											
                }
                pushFollow(FOLLOW_33);
                lv_conferredTargets_71_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11928:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                loop565:
                do {
                    int alt565=2;
                    int LA565_0 = input.LA(1);

                    if ( (LA565_0==27) ) {
                        alt565=1;
                    }


                    switch (alt565) {
                	case 1 :
                	    // InternalKim.g:11929:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_72=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
                	    // InternalKim.g:11933:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:11934:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:11934:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    // InternalKim.g:11935:13: lv_conferredTargets_73_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_33);
                	    lv_conferredTargets_73_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop565;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred450_InternalKim

    // $ANTLR start synpred453_InternalKim
    public final void synpred453_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        EObject lv_whole_78_0 = null;


        // InternalKim.g:11960:4: ( ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11960:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11960:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11961:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred453_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
        }
        // InternalKim.g:11961:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11962:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
        // InternalKim.g:11965:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11965:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred453_InternalKim", "true");
        }
        // InternalKim.g:11965:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11965:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:11965:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
        int alt567=3;
        switch ( input.LA(1) ) {
        case 193:
            {
            alt567=1;
            }
            break;
        case 194:
            {
            alt567=2;
            }
            break;
        case 195:
            {
            alt567=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 567, 0, input);

            throw nvae;
        }

        switch (alt567) {
            case 1 :
                // InternalKim.g:11966:10: otherlv_74= 'part'
                {
                otherlv_74=(Token)match(input,193,FOLLOW_109); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:11971:10: ( (lv_constituent_75_0= 'constituent' ) )
                {
                // InternalKim.g:11971:10: ( (lv_constituent_75_0= 'constituent' ) )
                // InternalKim.g:11972:11: (lv_constituent_75_0= 'constituent' )
                {
                // InternalKim.g:11972:11: (lv_constituent_75_0= 'constituent' )
                // InternalKim.g:11973:12: lv_constituent_75_0= 'constituent'
                {
                lv_constituent_75_0=(Token)match(input,194,FOLLOW_109); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:11986:10: ( (lv_constitutes_76_0= 'consists' ) )
                {
                // InternalKim.g:11986:10: ( (lv_constitutes_76_0= 'consists' ) )
                // InternalKim.g:11987:11: (lv_constitutes_76_0= 'consists' )
                {
                // InternalKim.g:11987:11: (lv_constitutes_76_0= 'consists' )
                // InternalKim.g:11988:12: lv_constitutes_76_0= 'consists'
                {
                lv_constitutes_76_0=(Token)match(input,195,FOLLOW_109); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:12001:9: ( (lv_partOf_77_0= 'of' ) )
        // InternalKim.g:12002:10: (lv_partOf_77_0= 'of' )
        {
        // InternalKim.g:12002:10: (lv_partOf_77_0= 'of' )
        // InternalKim.g:12003:11: lv_partOf_77_0= 'of'
        {
        lv_partOf_77_0=(Token)match(input,121,FOLLOW_8); if (state.failed) return ;

        }


        }

        // InternalKim.g:12015:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
        // InternalKim.g:12016:10: (lv_whole_78_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12016:10: (lv_whole_78_0= ruleConceptDeclaration )
        // InternalKim.g:12017:11: lv_whole_78_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_whole_78_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred453_InternalKim

    // $ANTLR start synpred455_InternalKim
    public final void synpred455_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_79=null;
        Token otherlv_81=null;
        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;


        // InternalKim.g:12040:4: ( ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12040:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12040:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12041:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred455_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
        }
        // InternalKim.g:12041:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12042:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
        // InternalKim.g:12045:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12045:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred455_InternalKim", "true");
        }
        // InternalKim.g:12045:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12045:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_79=(Token)match(input,196,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:12049:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
        // InternalKim.g:12050:10: (lv_creates_80_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12050:10: (lv_creates_80_0= ruleConceptDeclaration )
        // InternalKim.g:12051:11: lv_creates_80_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
          										
        }
        pushFollow(FOLLOW_33);
        lv_creates_80_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12068:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        loop568:
        do {
            int alt568=2;
            int LA568_0 = input.LA(1);

            if ( (LA568_0==27) ) {
                alt568=1;
            }


            switch (alt568) {
        	case 1 :
        	    // InternalKim.g:12069:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_81=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:12073:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12074:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12074:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    // InternalKim.g:12075:12: lv_creates_82_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_creates_82_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop568;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred455_InternalKim

    // $ANTLR start synpred457_InternalKim
    public final void synpred457_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;


        // InternalKim.g:12099:4: ( ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) )
        // InternalKim.g:12099:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        {
        // InternalKim.g:12099:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        // InternalKim.g:12100:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred457_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
        }
        // InternalKim.g:12100:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        // InternalKim.g:12101:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
        // InternalKim.g:12104:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        // InternalKim.g:12104:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred457_InternalKim", "true");
        }
        // InternalKim.g:12104:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        // InternalKim.g:12104:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        {
        otherlv_83=(Token)match(input,197,FOLLOW_24); if (state.failed) return ;
        otherlv_84=(Token)match(input,36,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:12112:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
        // InternalKim.g:12113:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        {
        // InternalKim.g:12113:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        // InternalKim.g:12114:11: lv_traitTargets_85_0= ruleApplicableTarget
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
          										
        }
        pushFollow(FOLLOW_33);
        lv_traitTargets_85_0=ruleApplicableTarget();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12131:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        loop569:
        do {
            int alt569=2;
            int LA569_0 = input.LA(1);

            if ( (LA569_0==27) ) {
                alt569=1;
            }


            switch (alt569) {
        	case 1 :
        	    // InternalKim.g:12132:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    {
        	    otherlv_86=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:12136:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    // InternalKim.g:12137:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    {
        	    // InternalKim.g:12137:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    // InternalKim.g:12138:12: lv_traitTargets_87_0= ruleApplicableTarget
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_traitTargets_87_0=ruleApplicableTarget();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop569;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred457_InternalKim

    // $ANTLR start synpred461_InternalKim
    public final void synpred461_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;


        // InternalKim.g:12162:4: ( ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12162:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12162:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12163:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred461_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
        }
        // InternalKim.g:12163:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12164:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
        // InternalKim.g:12167:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12167:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred461_InternalKim", "true");
        }
        // InternalKim.g:12167:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        // InternalKim.g:12167:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        {
        otherlv_88=(Token)match(input,198,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:12171:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:12172:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:12172:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:12173:11: lv_domains_89_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_domains_89_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12190:9: ( ( 'to' )=>otherlv_90= 'to' )
        // InternalKim.g:12191:10: ( 'to' )=>otherlv_90= 'to'
        {
        otherlv_90=(Token)match(input,36,FOLLOW_8); if (state.failed) return ;

        }

        // InternalKim.g:12197:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:12198:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:12198:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:12199:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
          										
        }
        pushFollow(FOLLOW_33);
        lv_ranges_91_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12216:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        loop570:
        do {
            int alt570=2;
            int LA570_0 = input.LA(1);

            if ( (LA570_0==27) ) {
                alt570=1;
            }


            switch (alt570) {
        	case 1 :
        	    // InternalKim.g:12217:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_92=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:12221:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:12222:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:12222:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:12223:12: lv_domains_93_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_domains_93_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:12240:10: ( ( 'to' )=>otherlv_94= 'to' )
        	    // InternalKim.g:12241:11: ( 'to' )=>otherlv_94= 'to'
        	    {
        	    otherlv_94=(Token)match(input,36,FOLLOW_8); if (state.failed) return ;

        	    }

        	    // InternalKim.g:12247:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:12248:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:12248:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:12249:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop570;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred461_InternalKim

    // $ANTLR start synpred462_InternalKim
    public final void synpred462_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_96=null;
        Token otherlv_97=null;
        EObject lv_inverse_98_0 = null;


        // InternalKim.g:12273:4: ( ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12273:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12273:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12274:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred462_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
        }
        // InternalKim.g:12274:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12275:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
        // InternalKim.g:12278:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12278:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred462_InternalKim", "true");
        }
        // InternalKim.g:12278:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12278:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        {
        otherlv_96=(Token)match(input,199,FOLLOW_109); if (state.failed) return ;
        otherlv_97=(Token)match(input,121,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:12286:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        // InternalKim.g:12287:10: (lv_inverse_98_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12287:10: (lv_inverse_98_0= ruleConceptDeclaration )
        // InternalKim.g:12288:11: lv_inverse_98_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_inverse_98_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred462_InternalKim

    // $ANTLR start synpred464_InternalKim
    public final void synpred464_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_99=null;
        Token otherlv_101=null;
        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;


        // InternalKim.g:12311:4: ( ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12311:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12311:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12312:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred464_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
        }
        // InternalKim.g:12312:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12313:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
        // InternalKim.g:12316:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12316:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred464_InternalKim", "true");
        }
        // InternalKim.g:12316:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12316:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_99=(Token)match(input,200,FOLLOW_8); if (state.failed) return ;
        // InternalKim.g:12320:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
        // InternalKim.g:12321:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12321:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        // InternalKim.g:12322:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
          										
        }
        pushFollow(FOLLOW_33);
        lv_qualitiesAffected_100_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12339:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        loop571:
        do {
            int alt571=2;
            int LA571_0 = input.LA(1);

            if ( (LA571_0==27) ) {
                alt571=1;
            }


            switch (alt571) {
        	case 1 :
        	    // InternalKim.g:12340:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_101=(Token)match(input,27,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:12344:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12345:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12345:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    // InternalKim.g:12346:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop571;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred464_InternalKim

    // $ANTLR start synpred467_InternalKim
    public final void synpred467_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;


        // InternalKim.g:12370:4: ( ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) )
        // InternalKim.g:12370:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        {
        // InternalKim.g:12370:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        // InternalKim.g:12371:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred467_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
        }
        // InternalKim.g:12371:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        // InternalKim.g:12372:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
        // InternalKim.g:12375:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        // InternalKim.g:12375:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred467_InternalKim", "true");
        }
        // InternalKim.g:12375:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        // InternalKim.g:12375:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        {
        otherlv_103=(Token)match(input,189,FOLLOW_138); if (state.failed) return ;
        // InternalKim.g:12379:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
        int alt572=2;
        int LA572_0 = input.LA(1);

        if ( (LA572_0==97) ) {
            alt572=1;
        }
        switch (alt572) {
            case 1 :
                // InternalKim.g:12380:10: (lv_disjoint_104_0= 'disjoint' )
                {
                // InternalKim.g:12380:10: (lv_disjoint_104_0= 'disjoint' )
                // InternalKim.g:12381:11: lv_disjoint_104_0= 'disjoint'
                {
                lv_disjoint_104_0=(Token)match(input,97,FOLLOW_139); if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_105=(Token)match(input,111,FOLLOW_140); if (state.failed) return ;
        // InternalKim.g:12397:9: ( (lv_children_106_0= ruleChildConcept ) )
        // InternalKim.g:12398:10: (lv_children_106_0= ruleChildConcept )
        {
        // InternalKim.g:12398:10: (lv_children_106_0= ruleChildConcept )
        // InternalKim.g:12399:11: lv_children_106_0= ruleChildConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
          										
        }
        pushFollow(FOLLOW_33);
        lv_children_106_0=ruleChildConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12416:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        loop573:
        do {
            int alt573=2;
            int LA573_0 = input.LA(1);

            if ( (LA573_0==27) ) {
                alt573=1;
            }


            switch (alt573) {
        	case 1 :
        	    // InternalKim.g:12417:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
        	    {
        	    otherlv_107=(Token)match(input,27,FOLLOW_140); if (state.failed) return ;
        	    // InternalKim.g:12421:10: ( (lv_children_108_0= ruleChildConcept ) )
        	    // InternalKim.g:12422:11: (lv_children_108_0= ruleChildConcept )
        	    {
        	    // InternalKim.g:12422:11: (lv_children_108_0= ruleChildConcept )
        	    // InternalKim.g:12423:12: lv_children_108_0= ruleChildConcept
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_children_108_0=ruleChildConcept();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop573;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred467_InternalKim

    // $ANTLR start synpred469_InternalKim
    public final void synpred469_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_109=null;
        Token otherlv_111=null;
        EObject lv_implications_110_0 = null;

        EObject lv_implications_112_0 = null;


        // InternalKim.g:12447:4: ( ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) )
        // InternalKim.g:12447:4: ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) )
        {
        // InternalKim.g:12447:4: ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) )
        // InternalKim.g:12448:5: {...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred469_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
        }
        // InternalKim.g:12448:118: ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) )
        // InternalKim.g:12449:6: ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
        // InternalKim.g:12452:9: ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) )
        // InternalKim.g:12452:10: {...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred469_InternalKim", "true");
        }
        // InternalKim.g:12452:19: (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* )
        // InternalKim.g:12452:20: otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )*
        {
        otherlv_109=(Token)match(input,201,FOLLOW_141); if (state.failed) return ;
        // InternalKim.g:12456:9: ( (lv_implications_110_0= ruleImplication ) )
        // InternalKim.g:12457:10: (lv_implications_110_0= ruleImplication )
        {
        // InternalKim.g:12457:10: (lv_implications_110_0= ruleImplication )
        // InternalKim.g:12458:11: lv_implications_110_0= ruleImplication
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_21_1_0());
          										
        }
        pushFollow(FOLLOW_33);
        lv_implications_110_0=ruleImplication();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12475:9: (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )*
        loop574:
        do {
            int alt574=2;
            int LA574_0 = input.LA(1);

            if ( (LA574_0==27) ) {
                alt574=1;
            }


            switch (alt574) {
        	case 1 :
        	    // InternalKim.g:12476:10: otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) )
        	    {
        	    otherlv_111=(Token)match(input,27,FOLLOW_141); if (state.failed) return ;
        	    // InternalKim.g:12480:10: ( (lv_implications_112_0= ruleImplication ) )
        	    // InternalKim.g:12481:11: (lv_implications_112_0= ruleImplication )
        	    {
        	    // InternalKim.g:12481:11: (lv_implications_112_0= ruleImplication )
        	    // InternalKim.g:12482:12: lv_implications_112_0= ruleImplication
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_21_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_33);
        	    lv_implications_112_0=ruleImplication();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop574;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred469_InternalKim

    // $ANTLR start synpred471_InternalKim
    public final void synpred471_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_113=null;
        Token otherlv_114=null;
        Token lv_authorities_115_1=null;
        Token lv_authorities_115_2=null;

        // InternalKim.g:12506:4: ( ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) )
        // InternalKim.g:12506:4: ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
        {
        // InternalKim.g:12506:4: ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
        // InternalKim.g:12507:5: {...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred471_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
        }
        // InternalKim.g:12507:118: ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
        // InternalKim.g:12508:6: ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
        // InternalKim.g:12511:9: ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) )
        // InternalKim.g:12511:10: {...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred471_InternalKim", "true");
        }
        // InternalKim.g:12511:19: (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) )
        // InternalKim.g:12511:20: otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) )
        {
        otherlv_113=(Token)match(input,202,FOLLOW_142); if (state.failed) return ;
        otherlv_114=(Token)match(input,180,FOLLOW_108); if (state.failed) return ;
        // InternalKim.g:12519:9: ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) )
        // InternalKim.g:12520:10: ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) )
        {
        // InternalKim.g:12520:10: ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) )
        // InternalKim.g:12521:11: (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH )
        {
        // InternalKim.g:12521:11: (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH )
        int alt575=2;
        int LA575_0 = input.LA(1);

        if ( (LA575_0==RULE_UPPERCASE_ID) ) {
            alt575=1;
        }
        else if ( (LA575_0==RULE_UPPERCASE_PATH) ) {
            alt575=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 575, 0, input);

            throw nvae;
        }
        switch (alt575) {
            case 1 :
                // InternalKim.g:12522:12: lv_authorities_115_1= RULE_UPPERCASE_ID
                {
                lv_authorities_115_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:12537:12: lv_authorities_115_2= RULE_UPPERCASE_PATH
                {
                lv_authorities_115_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred471_InternalKim

    // $ANTLR start synpred472_InternalKim
    public final void synpred472_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_116=null;
        EObject lv_metadata_117_0 = null;


        // InternalKim.g:12560:4: ( ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:12560:4: ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:12560:4: ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:12561:5: {...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred472_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23)");
        }
        // InternalKim.g:12561:118: ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:12562:6: ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23);
        // InternalKim.g:12565:9: ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) )
        // InternalKim.g:12565:10: {...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred472_InternalKim", "true");
        }
        // InternalKim.g:12565:19: (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) )
        // InternalKim.g:12565:20: otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) )
        {
        otherlv_116=(Token)match(input,42,FOLLOW_32); if (state.failed) return ;
        // InternalKim.g:12569:9: ( (lv_metadata_117_0= ruleMetadata ) )
        // InternalKim.g:12570:10: (lv_metadata_117_0= ruleMetadata )
        {
        // InternalKim.g:12570:10: (lv_metadata_117_0= ruleMetadata )
        // InternalKim.g:12571:11: lv_metadata_117_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMetadataParserRuleCall_3_23_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_metadata_117_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred472_InternalKim

    // $ANTLR start synpred473_InternalKim
    public final void synpred473_InternalKim_fragment() throws RecognitionException {   
        EObject lv_properties_118_0 = null;


        // InternalKim.g:12599:10: ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )
        // InternalKim.g:12599:10: {...}? => ( (lv_properties_118_0= rulePropertyStatement ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred473_InternalKim", "true");
        }
        // InternalKim.g:12599:19: ( (lv_properties_118_0= rulePropertyStatement ) )
        // InternalKim.g:12599:20: (lv_properties_118_0= rulePropertyStatement )
        {
        // InternalKim.g:12599:20: (lv_properties_118_0= rulePropertyStatement )
        // InternalKim.g:12600:10: lv_properties_118_0= rulePropertyStatement
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_24_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_properties_118_0=rulePropertyStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred473_InternalKim

    // $ANTLR start synpred474_InternalKim
    public final void synpred474_InternalKim_fragment() throws RecognitionException {   
        EObject lv_properties_118_0 = null;


        // InternalKim.g:12594:4: ( ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )
        // InternalKim.g:12594:4: ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) )
        {
        // InternalKim.g:12594:4: ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) )
        // InternalKim.g:12595:5: {...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred474_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24)");
        }
        // InternalKim.g:12595:118: ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ )
        // InternalKim.g:12596:6: ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24);
        // InternalKim.g:12599:9: ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+
        int cnt576=0;
        loop576:
        do {
            int alt576=2;
            int LA576_0 = input.LA(1);

            if ( (LA576_0==RULE_LOWERCASE_ID) && ((true))) {
                alt576=1;
            }
            else if ( (LA576_0==RULE_UPPERCASE_ID) && ((true))) {
                alt576=1;
            }
            else if ( (LA576_0==RULE_LOWERCASE_DASHID) && ((true))) {
                alt576=1;
            }
            else if ( (LA576_0==RULE_BACKCASE_ID) && ((true))) {
                alt576=1;
            }
            else if ( (LA576_0==189) && ((true))) {
                alt576=1;
            }
            else if ( (LA576_0==209) && ((true))) {
                alt576=1;
            }
            else if ( (LA576_0==202) && ((true))) {
                alt576=1;
            }


            switch (alt576) {
        	case 1 :
        	    // InternalKim.g:12599:10: {...}? => ( (lv_properties_118_0= rulePropertyStatement ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred474_InternalKim", "true");
        	    }
        	    // InternalKim.g:12599:19: ( (lv_properties_118_0= rulePropertyStatement ) )
        	    // InternalKim.g:12599:20: (lv_properties_118_0= rulePropertyStatement )
        	    {
        	    // InternalKim.g:12599:20: (lv_properties_118_0= rulePropertyStatement )
        	    // InternalKim.g:12600:10: lv_properties_118_0= rulePropertyStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_24_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_124);
        	    lv_properties_118_0=rulePropertyStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt576 >= 1 ) break loop576;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(576, input);
                    throw eee;
            }
            cnt576++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred474_InternalKim

    // $ANTLR start synpred475_InternalKim
    public final void synpred475_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantifier_0_0 = null;


        // InternalKim.g:12652:4: ( (lv_quantifier_0_0= ruleQuantification ) )
        // InternalKim.g:12652:4: (lv_quantifier_0_0= ruleQuantification )
        {
        // InternalKim.g:12652:4: (lv_quantifier_0_0= ruleQuantification )
        // InternalKim.g:12653:5: lv_quantifier_0_0= ruleQuantification
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getImplicationAccess().getQuantifierQuantificationParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantifier_0_0=ruleQuantification();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred475_InternalKim

    // $ANTLR start synpred503_InternalKim
    public final void synpred503_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;


        // InternalKim.g:13413:4: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
        // InternalKim.g:13413:4: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
        {
        otherlv_1=(Token)match(input,38,FOLLOW_151); if (state.failed) return ;
        // InternalKim.g:13417:4: ( (lv_parameters_2_0= ruleParameterList ) )?
        int alt589=2;
        int LA589_0 = input.LA(1);

        if ( ((LA589_0>=RULE_UPPERCASE_ID && LA589_0<=RULE_STRING)||(LA589_0>=RULE_EXPR && LA589_0<=RULE_LOWERCASE_DASHID)||(LA589_0>=28 && LA589_0<=29)||LA589_0==38||(LA589_0>=49 && LA589_0<=50)||(LA589_0>=130 && LA589_0<=131)||(LA589_0>=139 && LA589_0<=140)||(LA589_0>=142 && LA589_0<=160)||LA589_0==214||(LA589_0>=251 && LA589_0<=252)) ) {
            alt589=1;
        }
        switch (alt589) {
            case 1 :
                // InternalKim.g:13418:5: (lv_parameters_2_0= ruleParameterList )
                {
                // InternalKim.g:13418:5: (lv_parameters_2_0= ruleParameterList )
                // InternalKim.g:13419:6: lv_parameters_2_0= ruleParameterList
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                  					
                }
                pushFollow(FOLLOW_91);
                lv_parameters_2_0=ruleParameterList();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred503_InternalKim

    // $ANTLR start synpred523_InternalKim
    public final void synpred523_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_ids_2_1 = null;


        // InternalKim.g:13946:7: (lv_ids_2_1= rulePathName )
        // InternalKim.g:13946:7: lv_ids_2_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPathNameParserRuleCall_2_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_ids_2_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred523_InternalKim

    // $ANTLR start synpred524_InternalKim
    public final void synpred524_InternalKim_fragment() throws RecognitionException {   
        Token lv_ids_2_2=null;

        // InternalKim.g:13962:7: (lv_ids_2_2= RULE_LOWERCASE_ID )
        // InternalKim.g:13962:7: lv_ids_2_2= RULE_LOWERCASE_ID
        {
        lv_ids_2_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred524_InternalKim

    // $ANTLR start synpred536_InternalKim
    public final void synpred536_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_name_0_1 = null;


        // InternalKim.g:14344:6: (lv_name_0_1= rulePathName )
        // InternalKim.g:14344:6: lv_name_0_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_name_0_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred536_InternalKim

    // $ANTLR start synpred537_InternalKim
    public final void synpred537_InternalKim_fragment() throws RecognitionException {   
        Token lv_name_0_2=null;

        // InternalKim.g:14360:6: (lv_name_0_2= RULE_LOWERCASE_ID )
        // InternalKim.g:14360:6: lv_name_0_2= RULE_LOWERCASE_ID
        {
        lv_name_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred537_InternalKim

    // $ANTLR start synpred544_InternalKim
    public final void synpred544_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_0_0 = null;


        // InternalKim.g:14565:3: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:14565:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:14565:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
        // InternalKim.g:14566:4: (lv_concept_0_0= ruleConceptDeclaration )
        {
        // InternalKim.g:14566:4: (lv_concept_0_0= ruleConceptDeclaration )
        // InternalKim.g:14567:5: lv_concept_0_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptConceptDeclarationParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_0_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred544_InternalKim

    // $ANTLR start synpred545_InternalKim
    public final void synpred545_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:14585:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:14585:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:14585:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:14586:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:14586:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:14587:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred545_InternalKim

    // $ANTLR start synpred546_InternalKim
    public final void synpred546_InternalKim_fragment() throws RecognitionException {   
        EObject lv_literal_2_0 = null;


        // InternalKim.g:14605:3: ( ( (lv_literal_2_0= ruleLiteral ) ) )
        // InternalKim.g:14605:3: ( (lv_literal_2_0= ruleLiteral ) )
        {
        // InternalKim.g:14605:3: ( (lv_literal_2_0= ruleLiteral ) )
        // InternalKim.g:14606:4: (lv_literal_2_0= ruleLiteral )
        {
        // InternalKim.g:14606:4: (lv_literal_2_0= ruleLiteral )
        // InternalKim.g:14607:5: lv_literal_2_0= ruleLiteral
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_2_0=ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred546_InternalKim

    // $ANTLR start synpred548_InternalKim
    public final void synpred548_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_id_4_1 = null;


        // InternalKim.g:14647:6: (lv_id_4_1= rulePathName )
        // InternalKim.g:14647:6: lv_id_4_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_id_4_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred548_InternalKim

    // $ANTLR start synpred549_InternalKim
    public final void synpred549_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_4_2=null;

        // InternalKim.g:14663:6: (lv_id_4_2= RULE_LOWERCASE_ID )
        // InternalKim.g:14663:6: lv_id_4_2= RULE_LOWERCASE_ID
        {
        lv_id_4_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred549_InternalKim

    // $ANTLR start synpred550_InternalKim
    public final void synpred550_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_4_3=null;

        // InternalKim.g:14678:6: (lv_id_4_3= RULE_UPPERCASE_ID )
        // InternalKim.g:14678:6: lv_id_4_3= RULE_UPPERCASE_ID
        {
        lv_id_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred550_InternalKim

    // $ANTLR start synpred551_InternalKim
    public final void synpred551_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_4_2=null;
        Token lv_id_4_3=null;
        Token lv_id_4_4=null;
        AntlrDatatypeRuleToken lv_id_4_1 = null;


        // InternalKim.g:14644:3: ( ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:14644:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:14644:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:14645:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:14645:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
        // InternalKim.g:14646:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:14646:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
        int alt596=4;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            int LA596_1 = input.LA(2);

            if ( (synpred548_InternalKim()) ) {
                alt596=1;
            }
            else if ( (synpred549_InternalKim()) ) {
                alt596=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 596, 1, input);

                throw nvae;
            }
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            int LA596_2 = input.LA(2);

            if ( (synpred548_InternalKim()) ) {
                alt596=1;
            }
            else if ( (synpred550_InternalKim()) ) {
                alt596=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 596, 2, input);

                throw nvae;
            }
            }
            break;
        case RULE_LOWERCASE_DASHID:
            {
            alt596=1;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt596=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 596, 0, input);

            throw nvae;
        }

        switch (alt596) {
            case 1 :
                // InternalKim.g:14647:6: lv_id_4_1= rulePathName
                {
                pushFollow(FOLLOW_2);
                lv_id_4_1=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:14663:6: lv_id_4_2= RULE_LOWERCASE_ID
                {
                lv_id_4_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:14678:6: lv_id_4_3= RULE_UPPERCASE_ID
                {
                lv_id_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 4 :
                // InternalKim.g:14693:6: lv_id_4_4= RULE_CAMELCASE_ID
                {
                lv_id_4_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred551_InternalKim

    // $ANTLR start synpred552_InternalKim
    public final void synpred552_InternalKim_fragment() throws RecognitionException {   
        EObject lv_list_5_0 = null;


        // InternalKim.g:14711:3: ( ( (lv_list_5_0= ruleList ) ) )
        // InternalKim.g:14711:3: ( (lv_list_5_0= ruleList ) )
        {
        // InternalKim.g:14711:3: ( (lv_list_5_0= ruleList ) )
        // InternalKim.g:14712:4: (lv_list_5_0= ruleList )
        {
        // InternalKim.g:14712:4: (lv_list_5_0= ruleList )
        // InternalKim.g:14713:5: lv_list_5_0= ruleList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_list_5_0=ruleList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred552_InternalKim

    // $ANTLR start synpred554_InternalKim
    public final void synpred554_InternalKim_fragment() throws RecognitionException {   
        EObject lv_date_7_0 = null;


        // InternalKim.g:14751:3: ( ( (lv_date_7_0= ruleDate ) ) )
        // InternalKim.g:14751:3: ( (lv_date_7_0= ruleDate ) )
        {
        // InternalKim.g:14751:3: ( (lv_date_7_0= ruleDate ) )
        // InternalKim.g:14752:4: (lv_date_7_0= ruleDate )
        {
        // InternalKim.g:14752:4: (lv_date_7_0= ruleDate )
        // InternalKim.g:14753:5: lv_date_7_0= ruleDate
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getDateDateParserRuleCall_7_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_date_7_0=ruleDate();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred554_InternalKim

    // $ANTLR start synpred556_InternalKim
    public final void synpred556_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantity_9_0 = null;


        // InternalKim.g:14791:3: ( ( (lv_quantity_9_0= ruleQuantity ) ) )
        // InternalKim.g:14791:3: ( (lv_quantity_9_0= ruleQuantity ) )
        {
        // InternalKim.g:14791:3: ( (lv_quantity_9_0= ruleQuantity ) )
        // InternalKim.g:14792:4: (lv_quantity_9_0= ruleQuantity )
        {
        // InternalKim.g:14792:4: (lv_quantity_9_0= ruleQuantity )
        // InternalKim.g:14793:5: lv_quantity_9_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getQuantityQuantityParserRuleCall_9_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantity_9_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred556_InternalKim

    // $ANTLR start synpred557_InternalKim
    public final void synpred557_InternalKim_fragment() throws RecognitionException {   
        EObject lv_literal_0_0 = null;


        // InternalKim.g:14844:3: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) )
        // InternalKim.g:14844:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
        {
        // InternalKim.g:14844:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
        // InternalKim.g:14845:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
        {
        // InternalKim.g:14845:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
        // InternalKim.g:14846:5: lv_literal_0_0= ruleLiteralOrIdOrComma
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_0_0=ruleLiteralOrIdOrComma();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred557_InternalKim

    // $ANTLR start synpred558_InternalKim
    public final void synpred558_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:14864:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:14864:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:14864:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:14865:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:14865:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:14866:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred558_InternalKim

    // $ANTLR start synpred563_InternalKim
    public final void synpred563_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:14929:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:14929:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:14929:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:14930:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:14930:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:14931:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:14931:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt598=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt598=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt598=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt598=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 598, 0, input);

            throw nvae;
        }

        switch (alt598) {
            case 1 :
                // InternalKim.g:14932:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:14947:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:14962:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred563_InternalKim

    // $ANTLR start synpred566_InternalKim
    public final void synpred566_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantity_8_0 = null;


        // InternalKim.g:15020:3: ( ( (lv_quantity_8_0= ruleQuantity ) ) )
        // InternalKim.g:15020:3: ( (lv_quantity_8_0= ruleQuantity ) )
        {
        // InternalKim.g:15020:3: ( (lv_quantity_8_0= ruleQuantity ) )
        // InternalKim.g:15021:4: (lv_quantity_8_0= ruleQuantity )
        {
        // InternalKim.g:15021:4: (lv_quantity_8_0= ruleQuantity )
        // InternalKim.g:15022:5: lv_quantity_8_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getQuantityQuantityParserRuleCall_6_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantity_8_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred566_InternalKim

    // $ANTLR start synpred567_InternalKim
    public final void synpred567_InternalKim_fragment() throws RecognitionException {   
        EObject lv_date_9_0 = null;


        // InternalKim.g:15040:3: ( ( (lv_date_9_0= ruleDate ) ) )
        // InternalKim.g:15040:3: ( (lv_date_9_0= ruleDate ) )
        {
        // InternalKim.g:15040:3: ( (lv_date_9_0= ruleDate ) )
        // InternalKim.g:15041:4: (lv_date_9_0= ruleDate )
        {
        // InternalKim.g:15041:4: (lv_date_9_0= ruleDate )
        // InternalKim.g:15042:5: lv_date_9_0= ruleDate
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getDateDateParserRuleCall_7_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_date_9_0=ruleDate();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred567_InternalKim

    // $ANTLR start synpred570_InternalKim
    public final void synpred570_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_1_0 = null;


        // InternalKim.g:15133:3: ( ( (lv_concept_1_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:15133:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:15133:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
        // InternalKim.g:15134:4: (lv_concept_1_0= ruleConceptDeclaration )
        {
        // InternalKim.g:15134:4: (lv_concept_1_0= ruleConceptDeclaration )
        // InternalKim.g:15135:5: lv_concept_1_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getConceptConceptDeclarationParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_1_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred570_InternalKim

    // $ANTLR start synpred616_InternalKim
    public final void synpred616_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:15798:4: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )
        // InternalKim.g:15798:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
        {
        // InternalKim.g:15798:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
        // InternalKim.g:15799:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        {
        // InternalKim.g:15799:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        // InternalKim.g:15800:6: lv_value_0_0= ruleLiteralValueWithConcept
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleLiteralValueWithConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred616_InternalKim

    // $ANTLR start synpred618_InternalKim
    public final void synpred618_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:15862:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:15862:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:15862:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:15863:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred618_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:15863:126: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:15864:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:15867:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:15867:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred618_InternalKim", "true");
        }
        // InternalKim.g:15867:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:15867:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,35,FOLLOW_24); if (state.failed) return ;
        otherlv_6=(Token)match(input,36,FOLLOW_25); if (state.failed) return ;
        // InternalKim.g:15875:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:15876:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:15876:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:15877:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred618_InternalKim

    // $ANTLR start synpred621_InternalKim
    public final void synpred621_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:15900:4: ( ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:15900:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:15900:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:15901:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred621_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:15901:126: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:15902:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:15905:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:15905:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred621_InternalKim", "true");
        }
        // InternalKim.g:15905:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt601=2;
        int LA601_0 = input.LA(1);

        if ( (LA601_0==48) ) {
            alt601=1;
        }
        else if ( (LA601_0==113) ) {
            alt601=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 601, 0, input);

            throw nvae;
        }
        switch (alt601) {
            case 1 :
                // InternalKim.g:15905:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:15905:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:15906:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                otherlv_8=(Token)match(input,48,FOLLOW_95); if (state.failed) return ;
                // InternalKim.g:15910:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt600=2;
                int LA600_0 = input.LA(1);

                if ( (LA600_0==EOF||LA600_0==RULE_LOWERCASE_ID||LA600_0==RULE_CAMELCASE_ID||LA600_0==RULE_BACKCASE_ID||LA600_0==38||LA600_0==40||LA600_0==107||LA600_0==259) ) {
                    alt600=1;
                }
                else if ( (LA600_0==RULE_UPPERCASE_ID) ) {
                    int LA600_2 = input.LA(2);

                    if ( (LA600_2==EOF||LA600_2==40||LA600_2==107||LA600_2==259) ) {
                        alt600=1;
                    }
                    else if ( (LA600_2==250) ) {
                        alt600=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 600, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 600, 0, input);

                    throw nvae;
                }
                switch (alt600) {
                    case 1 :
                        // InternalKim.g:15911:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:15911:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:15912:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:15912:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:15913:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:15931:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:15931:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:15932:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:15932:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:15933:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:15953:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:15953:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:15954:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
                {
                otherlv_11=(Token)match(input,113,FOLLOW_195); if (state.failed) return ;
                // InternalKim.g:15958:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:15959:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:15959:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:15960:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred621_InternalKim

    // $ANTLR start synpred622_InternalKim
    public final void synpred622_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;


        // InternalKim.g:15984:4: ( ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:15984:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:15984:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:15985:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred622_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:15985:126: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        // InternalKim.g:15986:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:15989:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        // InternalKim.g:15989:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred622_InternalKim", "true");
        }
        // InternalKim.g:15989:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        // InternalKim.g:15989:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
        {
        // InternalKim.g:15989:20: ( (lv_from_13_0= ruleNumber ) )
        // InternalKim.g:15990:10: (lv_from_13_0= ruleNumber )
        {
        // InternalKim.g:15990:10: (lv_from_13_0= ruleNumber )
        // InternalKim.g:15991:11: lv_from_13_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_from_13_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_14=(Token)match(input,36,FOLLOW_37); if (state.failed) return ;
        // InternalKim.g:16012:9: ( (lv_to_15_0= ruleNumber ) )
        // InternalKim.g:16013:10: (lv_to_15_0= ruleNumber )
        {
        // InternalKim.g:16013:10: (lv_to_15_0= ruleNumber )
        // InternalKim.g:16014:11: lv_to_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred622_InternalKim

    // $ANTLR start synpred623_InternalKim
    public final void synpred623_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16062:10: ( (lv_valueOperators_17_0= ruleValueOperator ) )
        // InternalKim.g:16062:10: (lv_valueOperators_17_0= ruleValueOperator )
        {
        // InternalKim.g:16062:10: (lv_valueOperators_17_0= ruleValueOperator )
        // InternalKim.g:16063:11: lv_valueOperators_17_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_17_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred623_InternalKim

    // $ANTLR start synpred624_InternalKim
    public final void synpred624_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16037:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:16037:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:16037:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:16038:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred624_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:16038:126: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:16039:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:16042:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        // InternalKim.g:16042:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred624_InternalKim", "true");
        }
        // InternalKim.g:16042:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        // InternalKim.g:16042:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        {
        // InternalKim.g:16042:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
        // InternalKim.g:16043:10: (lv_valueOperators_16_0= ruleValueOperator )
        {
        // InternalKim.g:16043:10: (lv_valueOperators_16_0= ruleValueOperator )
        // InternalKim.g:16044:11: lv_valueOperators_16_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
          										
        }
        pushFollow(FOLLOW_196);
        lv_valueOperators_16_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:16061:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        loop602:
        do {
            int alt602=2;
            int LA602_0 = input.LA(1);

            if ( (LA602_0==55||(LA602_0>=76 && LA602_0<=88)||(LA602_0>=117 && LA602_0<=120)) ) {
                alt602=1;
            }


            switch (alt602) {
        	case 1 :
        	    // InternalKim.g:16062:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:16062:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    // InternalKim.g:16063:11: lv_valueOperators_17_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_196);
        	    lv_valueOperators_17_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop602;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred624_InternalKim

    // $ANTLR start synpred626_InternalKim
    public final void synpred626_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_18_0=null;
        Token otherlv_19=null;

        // InternalKim.g:16086:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) )
        // InternalKim.g:16086:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
        {
        // InternalKim.g:16086:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
        // InternalKim.g:16087:5: {...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred626_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:16087:126: ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
        // InternalKim.g:16088:6: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:16091:9: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
        // InternalKim.g:16091:10: {...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred626_InternalKim", "true");
        }
        // InternalKim.g:16091:19: ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
        int alt603=2;
        int LA603_0 = input.LA(1);

        if ( (LA603_0==114) ) {
            alt603=1;
        }
        else if ( (LA603_0==115) ) {
            alt603=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 603, 0, input);

            throw nvae;
        }
        switch (alt603) {
            case 1 :
                // InternalKim.g:16091:20: ( (lv_optional_18_0= 'optional' ) )
                {
                // InternalKim.g:16091:20: ( (lv_optional_18_0= 'optional' ) )
                // InternalKim.g:16092:10: (lv_optional_18_0= 'optional' )
                {
                // InternalKim.g:16092:10: (lv_optional_18_0= 'optional' )
                // InternalKim.g:16093:11: lv_optional_18_0= 'optional'
                {
                lv_optional_18_0=(Token)match(input,114,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:16106:9: otherlv_19= 'required'
                {
                otherlv_19=(Token)match(input,115,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred626_InternalKim

    // $ANTLR start synpred628_InternalKim
    public final void synpred628_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;

        // InternalKim.g:16116:4: ( ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:16116:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:16116:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:16117:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred628_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:16117:126: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:16118:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:16121:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:16121:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred628_InternalKim", "true");
        }
        // InternalKim.g:16121:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        // InternalKim.g:16121:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        {
        otherlv_20=(Token)match(input,116,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:16125:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        // InternalKim.g:16126:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        {
        // InternalKim.g:16126:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        // InternalKim.g:16127:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        {
        // InternalKim.g:16127:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        int alt604=2;
        int LA604_0 = input.LA(1);

        if ( (LA604_0==RULE_LOWERCASE_ID) ) {
            alt604=1;
        }
        else if ( (LA604_0==RULE_STRING) ) {
            alt604=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 604, 0, input);

            throw nvae;
        }
        switch (alt604) {
            case 1 :
                // InternalKim.g:16128:12: lv_name_21_1= RULE_LOWERCASE_ID
                {
                lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:16143:12: lv_name_21_2= RULE_STRING
                {
                lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred628_InternalKim

    // $ANTLR start synpred629_InternalKim
    public final void synpred629_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:16206:4: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )
        // InternalKim.g:16206:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
        {
        // InternalKim.g:16206:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
        // InternalKim.g:16207:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        {
        // InternalKim.g:16207:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        // InternalKim.g:16208:6: lv_value_0_0= ruleLiteralValueWithConcept
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleLiteralValueWithConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred629_InternalKim

    // $ANTLR start synpred631_InternalKim
    public final void synpred631_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:16270:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:16270:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:16270:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:16271:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred631_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:16271:137: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:16272:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:16275:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:16275:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred631_InternalKim", "true");
        }
        // InternalKim.g:16275:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:16275:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,35,FOLLOW_24); if (state.failed) return ;
        otherlv_6=(Token)match(input,36,FOLLOW_25); if (state.failed) return ;
        // InternalKim.g:16283:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:16284:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:16284:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:16285:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred631_InternalKim

    // $ANTLR start synpred634_InternalKim
    public final void synpred634_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:16308:4: ( ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:16308:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:16308:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:16309:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred634_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:16309:137: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:16310:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:16313:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:16313:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred634_InternalKim", "true");
        }
        // InternalKim.g:16313:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt607=2;
        int LA607_0 = input.LA(1);

        if ( (LA607_0==48) ) {
            alt607=1;
        }
        else if ( (LA607_0==113) ) {
            alt607=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 607, 0, input);

            throw nvae;
        }
        switch (alt607) {
            case 1 :
                // InternalKim.g:16313:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:16313:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:16314:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                otherlv_8=(Token)match(input,48,FOLLOW_95); if (state.failed) return ;
                // InternalKim.g:16318:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt606=2;
                int LA606_0 = input.LA(1);

                if ( (LA606_0==EOF||LA606_0==RULE_LOWERCASE_ID||LA606_0==RULE_CAMELCASE_ID||LA606_0==RULE_BACKCASE_ID||LA606_0==38||LA606_0==40||LA606_0==107||LA606_0==259) ) {
                    alt606=1;
                }
                else if ( (LA606_0==RULE_UPPERCASE_ID) ) {
                    int LA606_2 = input.LA(2);

                    if ( (LA606_2==250) ) {
                        alt606=2;
                    }
                    else if ( (LA606_2==EOF||LA606_2==40||LA606_2==107||LA606_2==259) ) {
                        alt606=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 606, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 606, 0, input);

                    throw nvae;
                }
                switch (alt606) {
                    case 1 :
                        // InternalKim.g:16319:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:16319:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:16320:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:16320:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:16321:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:16339:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:16339:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:16340:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:16340:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:16341:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:16361:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:16361:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:16362:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
                {
                otherlv_11=(Token)match(input,113,FOLLOW_195); if (state.failed) return ;
                // InternalKim.g:16366:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:16367:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:16367:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:16368:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred634_InternalKim

    // $ANTLR start synpred635_InternalKim
    public final void synpred635_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;


        // InternalKim.g:16392:4: ( ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:16392:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:16392:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:16393:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred635_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:16393:137: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        // InternalKim.g:16394:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:16397:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        // InternalKim.g:16397:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred635_InternalKim", "true");
        }
        // InternalKim.g:16397:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        // InternalKim.g:16397:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
        {
        // InternalKim.g:16397:20: ( (lv_from_13_0= ruleNumber ) )
        // InternalKim.g:16398:10: (lv_from_13_0= ruleNumber )
        {
        // InternalKim.g:16398:10: (lv_from_13_0= ruleNumber )
        // InternalKim.g:16399:11: lv_from_13_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_from_13_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_14=(Token)match(input,36,FOLLOW_37); if (state.failed) return ;
        // InternalKim.g:16420:9: ( (lv_to_15_0= ruleNumber ) )
        // InternalKim.g:16421:10: (lv_to_15_0= ruleNumber )
        {
        // InternalKim.g:16421:10: (lv_to_15_0= ruleNumber )
        // InternalKim.g:16422:11: lv_to_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred635_InternalKim

    // $ANTLR start synpred636_InternalKim
    public final void synpred636_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16470:10: ( (lv_valueOperators_17_0= ruleValueOperator ) )
        // InternalKim.g:16470:10: (lv_valueOperators_17_0= ruleValueOperator )
        {
        // InternalKim.g:16470:10: (lv_valueOperators_17_0= ruleValueOperator )
        // InternalKim.g:16471:11: lv_valueOperators_17_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_17_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred636_InternalKim

    // $ANTLR start synpred637_InternalKim
    public final void synpred637_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16445:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:16445:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:16445:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:16446:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred637_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:16446:137: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:16447:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:16450:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        // InternalKim.g:16450:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred637_InternalKim", "true");
        }
        // InternalKim.g:16450:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        // InternalKim.g:16450:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        {
        // InternalKim.g:16450:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
        // InternalKim.g:16451:10: (lv_valueOperators_16_0= ruleValueOperator )
        {
        // InternalKim.g:16451:10: (lv_valueOperators_16_0= ruleValueOperator )
        // InternalKim.g:16452:11: lv_valueOperators_16_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
          										
        }
        pushFollow(FOLLOW_196);
        lv_valueOperators_16_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:16469:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        loop608:
        do {
            int alt608=2;
            int LA608_0 = input.LA(1);

            if ( (LA608_0==55||(LA608_0>=76 && LA608_0<=88)||(LA608_0>=117 && LA608_0<=120)) ) {
                alt608=1;
            }


            switch (alt608) {
        	case 1 :
        	    // InternalKim.g:16470:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:16470:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    // InternalKim.g:16471:11: lv_valueOperators_17_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_196);
        	    lv_valueOperators_17_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop608;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred637_InternalKim

    // $ANTLR start synpred650_InternalKim
    public final void synpred650_InternalKim_fragment() throws RecognitionException {   
        EObject lv_root_1_0 = null;


        // InternalKim.g:16872:4: ( (lv_root_1_0= ruleUnitElement ) )
        // InternalKim.g:16872:4: (lv_root_1_0= ruleUnitElement )
        {
        // InternalKim.g:16872:4: (lv_root_1_0= ruleUnitElement )
        // InternalKim.g:16873:5: lv_root_1_0= ruleUnitElement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_root_1_0=ruleUnitElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred650_InternalKim

    // $ANTLR start synpred657_InternalKim
    public final void synpred657_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17068:4: ( ( RULE_INT ) )
        // InternalKim.g:17068:5: ( RULE_INT )
        {
        // InternalKim.g:17068:5: ( RULE_INT )
        // InternalKim.g:17069:5: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred657_InternalKim

    // $ANTLR start synpred658_InternalKim
    public final void synpred658_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17090:4: ( ( 'l' ) )
        // InternalKim.g:17090:5: ( 'l' )
        {
        // InternalKim.g:17090:5: ( 'l' )
        // InternalKim.g:17091:5: 'l'
        {
        match(input,253,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred658_InternalKim

    // $ANTLR start synpred659_InternalKim
    public final void synpred659_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17108:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )
        // InternalKim.g:17108:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        {
        // InternalKim.g:17108:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        // InternalKim.g:17109:5: ( ( '.' ) ) ( ( RULE_INT ) )
        {
        // InternalKim.g:17109:5: ( ( '.' ) )
        // InternalKim.g:17110:6: ( '.' )
        {
        // InternalKim.g:17110:6: ( '.' )
        // InternalKim.g:17111:7: '.'
        {
        match(input,108,FOLLOW_75); if (state.failed) return ;

        }


        }

        // InternalKim.g:17114:5: ( ( RULE_INT ) )
        // InternalKim.g:17115:6: ( RULE_INT )
        {
        // InternalKim.g:17115:6: ( RULE_INT )
        // InternalKim.g:17116:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred659_InternalKim

    // $ANTLR start synpred663_InternalKim
    public final void synpred663_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17157:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )
        // InternalKim.g:17157:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        {
        // InternalKim.g:17157:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        // InternalKim.g:17158:5: ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) )
        {
        // InternalKim.g:17158:5: ( ( ( 'e' | 'E' ) ) )
        // InternalKim.g:17159:6: ( ( 'e' | 'E' ) )
        {
        // InternalKim.g:17159:6: ( ( 'e' | 'E' ) )
        // InternalKim.g:17160:7: ( 'e' | 'E' )
        {
        if ( (input.LA(1)>=254 && input.LA(1)<=255) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalKim.g:17167:5: ( '+' | ( ( '-' ) ) )?
        int alt610=3;
        int LA610_0 = input.LA(1);

        if ( (LA610_0==251) ) {
            alt610=1;
        }
        else if ( (LA610_0==252) ) {
            alt610=2;
        }
        switch (alt610) {
            case 1 :
                // InternalKim.g:17168:6: '+'
                {
                match(input,251,FOLLOW_75); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:17170:6: ( ( '-' ) )
                {
                // InternalKim.g:17170:6: ( ( '-' ) )
                // InternalKim.g:17171:7: ( '-' )
                {
                // InternalKim.g:17171:7: ( '-' )
                // InternalKim.g:17172:8: '-'
                {
                match(input,252,FOLLOW_75); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:17176:5: ( ( RULE_INT ) )
        // InternalKim.g:17177:6: ( RULE_INT )
        {
        // InternalKim.g:17177:6: ( RULE_INT )
        // InternalKim.g:17178:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred663_InternalKim

    // $ANTLR start synpred686_InternalKim
    public final void synpred686_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_PathName_0 = null;


        // InternalKim.g:17770:4: (this_PathName_0= rulePathName )
        // InternalKim.g:17770:4: this_PathName_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
          			
        }
        pushFollow(FOLLOW_2);
        this_PathName_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred686_InternalKim

    // $ANTLR start synpred692_InternalKim
    public final void synpred692_InternalKim_fragment() throws RecognitionException {   
        Token this_LOWERCASE_ID_6=null;

        // InternalKim.g:17881:4: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID )
        // InternalKim.g:17881:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
        {
        this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred692_InternalKim

    // $ANTLR start synpred693_InternalKim
    public final void synpred693_InternalKim_fragment() throws RecognitionException {   
        Token this_UPPERCASE_ID_7=null;

        // InternalKim.g:17889:4: (this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )
        // InternalKim.g:17889:4: this_UPPERCASE_ID_7= RULE_UPPERCASE_ID
        {
        this_UPPERCASE_ID_7=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred693_InternalKim

    // Delegated rules

    public final boolean synpred314_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred314_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred313_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred313_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred161_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred161_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred312_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred312_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred310_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred310_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred622_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred622_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred623_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred623_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred544_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred544_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred391_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred391_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred624_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred624_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred626_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred626_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred629_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred629_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred435_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred435_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred628_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred628_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred436_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred436_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred438_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred438_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred286_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred286_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred437_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred437_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred439_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred439_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred201_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred201_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred283_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred283_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred276_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred284_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred284_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred429_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred429_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred274_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred274_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred545_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred545_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred503_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred503_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred556_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred556_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred557_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred557_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred546_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred546_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred558_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred558_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred621_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred621_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred198_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred198_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred281_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred281_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred663_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred663_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred154_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred154_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred549_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred549_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred548_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred548_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred193_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred193_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred194_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred194_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred389_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred389_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred304_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred304_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred369_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred369_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred387_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred387_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred171_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred171_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred301_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred301_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred305_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred305_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred306_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred306_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred308_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred308_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred307_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred307_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred634_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred634_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred657_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred657_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred635_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred635_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred637_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred637_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred658_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred658_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred269_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred269_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred309_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred309_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred402_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred402_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred636_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred636_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred247_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred247_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred289_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred289_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred618_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred618_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred203_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred203_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred268_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred268_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred403_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred403_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred446_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred446_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred245_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred245_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred659_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred659_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred288_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred288_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred425_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred425_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred616_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred616_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred469_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred469_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred267_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred267_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred467_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred467_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred401_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred401_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred249_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred249_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred464_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred464_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred206_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred206_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred462_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred462_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred208_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred208_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred441_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred441_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred461_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred461_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred303_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred303_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred378_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred378_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred566_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred566_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred372_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred372_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred563_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred563_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred258_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred258_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred457_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred457_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred299_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred299_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred296_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred296_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred407_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred407_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred418_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred418_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred210_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred253_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred253_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred255_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred255_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred298_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred298_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred211_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred211_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred265_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred265_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred409_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred409_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred251_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred251_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred262_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred262_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred252_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred252_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred263_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred263_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred523_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred523_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred524_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred524_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred567_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred567_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred686_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred686_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred292_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred292_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred537_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred537_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred536_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred536_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred260_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred260_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred631_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred631_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred692_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred692_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred650_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred650_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred693_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred693_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred554_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred554_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred552_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred552_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred550_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred550_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred551_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred551_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred570_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred570_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred434_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred434_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred433_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred433_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred259_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred259_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred455_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred455_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred475_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred475_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred473_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred473_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred472_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred472_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred431_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred431_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred453_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred453_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred474_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred474_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred471_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred471_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred450_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred450_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA16 dfa16 = new DFA16(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA116 dfa116 = new DFA116(this);
    protected DFA124 dfa124 = new DFA124(this);
    protected DFA125 dfa125 = new DFA125(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA136 dfa136 = new DFA136(this);
    protected DFA144 dfa144 = new DFA144(this);
    protected DFA146 dfa146 = new DFA146(this);
    protected DFA153 dfa153 = new DFA153(this);
    protected DFA150 dfa150 = new DFA150(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA158 dfa158 = new DFA158(this);
    protected DFA165 dfa165 = new DFA165(this);
    protected DFA162 dfa162 = new DFA162(this);
    protected DFA173 dfa173 = new DFA173(this);
    protected DFA168 dfa168 = new DFA168(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA174 dfa174 = new DFA174(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA178 dfa178 = new DFA178(this);
    protected DFA214 dfa214 = new DFA214(this);
    protected DFA219 dfa219 = new DFA219(this);
    protected DFA220 dfa220 = new DFA220(this);
    protected DFA226 dfa226 = new DFA226(this);
    protected DFA263 dfa263 = new DFA263(this);
    protected DFA262 dfa262 = new DFA262(this);
    protected DFA264 dfa264 = new DFA264(this);
    protected DFA284 dfa284 = new DFA284(this);
    protected DFA287 dfa287 = new DFA287(this);
    protected DFA291 dfa291 = new DFA291(this);
    protected DFA292 dfa292 = new DFA292(this);
    protected DFA303 dfa303 = new DFA303(this);
    protected DFA305 dfa305 = new DFA305(this);
    protected DFA308 dfa308 = new DFA308(this);
    protected DFA310 dfa310 = new DFA310(this);
    protected DFA319 dfa319 = new DFA319(this);
    protected DFA326 dfa326 = new DFA326(this);
    protected DFA323 dfa323 = new DFA323(this);
    protected DFA327 dfa327 = new DFA327(this);
    protected DFA332 dfa332 = new DFA332(this);
    protected DFA331 dfa331 = new DFA331(this);
    protected DFA338 dfa338 = new DFA338(this);
    protected DFA462 dfa462 = new DFA462(this);
    protected DFA487 dfa487 = new DFA487(this);
    protected DFA486 dfa486 = new DFA486(this);
    protected DFA497 dfa497 = new DFA497(this);
    static final String dfa_1s = "\100\uffff";
    static final String dfa_2s = "\1\10\77\uffff";
    static final String dfa_3s = "\1\17\4\0\73\uffff";
    static final String dfa_4s = "\1\u00f9\4\0\73\uffff";
    static final String dfa_5s = "\5\uffff\1\1\2\uffff\1\2\67\uffff";
    static final String dfa_6s = "\1\uffff\1\0\1\1\1\2\1\3\73\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\5\uffff\1\4\1\2\1\3\1\10\55\uffff\6\10\15\uffff\3\5\3\uffff\1\10\15\uffff\1\10\62\uffff\1\10\3\uffff\11\10\21\uffff\1\10\24\uffff\3\10\4\uffff\40\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "109:4: ( (lv_namespace_1_0= ruleNamespace ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_1 = input.LA(1);

                         
                        int index1_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_2 = input.LA(1);

                         
                        int index1_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_4 = input.LA(1);

                         
                        int index1_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\75\uffff";
    static final String dfa_9s = "\1\17\1\0\62\uffff\1\0\10\uffff";
    static final String dfa_10s = "\1\u00f9\1\0\62\uffff\1\0\10\uffff";
    static final String dfa_11s = "\2\uffff\1\1\56\uffff\1\2\10\uffff\1\4\1\5\1\3";
    static final String dfa_12s = "\1\uffff\1\0\62\uffff\1\1\10\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\5\uffff\3\61\1\72\55\uffff\1\64\5\61\23\uffff\1\2\15\uffff\1\73\62\uffff\1\2\3\uffff\11\2\21\uffff\1\2\24\uffff\3\2\4\uffff\40\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_1 = input.LA(1);

                         
                        int index4_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalKim()) ) {s = 2;}

                        else if ( (synpred5_InternalKim()) ) {s = 49;}

                        else if ( (synpred7_InternalKim()) ) {s = 58;}

                        else if ( (true) ) {s = 59;}

                         
                        input.seek(index4_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_52 = input.LA(1);

                         
                        int index4_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalKim()) ) {s = 49;}

                        else if ( (synpred6_InternalKim()) ) {s = 60;}

                         
                        input.seek(index4_52);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\54\uffff";
    static final String dfa_15s = "\1\4\3\0\1\uffff\7\0\40\uffff";
    static final String dfa_16s = "\1\u00fc\3\0\1\uffff\7\0\40\uffff";
    static final String dfa_17s = "\4\uffff\1\1\7\uffff\1\2\37\uffff";
    static final String dfa_18s = "\1\uffff\1\0\1\1\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\40\uffff}>";
    static final String[] dfa_19s = {
            "\1\2\1\1\1\5\1\uffff\1\14\1\6\1\11\1\3\1\14\2\uffff\1\14\13\uffff\1\14\1\12\1\13\10\uffff\1\14\12\uffff\2\14\65\uffff\1\4\7\uffff\1\14\21\uffff\2\14\7\uffff\2\14\1\uffff\23\14\65\uffff\1\14\44\uffff\1\7\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA16 extends DFA {

        public DFA16(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 16;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "657:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) otherlv_6= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA16_1 = input.LA(1);

                         
                        int index16_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index16_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA16_2 = input.LA(1);

                         
                        int index16_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index16_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA16_3 = input.LA(1);

                         
                        int index16_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index16_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA16_5 = input.LA(1);

                         
                        int index16_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index16_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA16_6 = input.LA(1);

                         
                        int index16_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index16_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA16_7 = input.LA(1);

                         
                        int index16_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index16_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA16_8 = input.LA(1);

                         
                        int index16_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index16_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA16_9 = input.LA(1);

                         
                        int index16_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index16_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA16_10 = input.LA(1);

                         
                        int index16_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index16_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA16_11 = input.LA(1);

                         
                        int index16_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index16_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 16, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\57\uffff";
    static final String dfa_21s = "\1\4\2\uffff\3\0\35\uffff\1\0\13\uffff";
    static final String dfa_22s = "\1\u00fc\2\uffff\3\0\35\uffff\1\0\13\uffff";
    static final String dfa_23s = "\1\uffff\1\1\4\uffff\1\4\1\5\1\6\33\uffff\1\10\5\uffff\1\11\1\12\1\2\1\3\1\7";
    static final String dfa_24s = "\3\uffff\1\0\1\1\1\2\35\uffff\1\3\13\uffff}>";
    static final String[] dfa_25s = {
            "\2\10\1\7\2\uffff\1\10\1\5\1\10\20\uffff\2\1\10\uffff\1\43\1\uffff\1\53\7\uffff\1\6\1\52\32\uffff\4\44\2\uffff\1\44\1\uffff\1\44\55\uffff\2\10\7\uffff\2\10\1\uffff\23\10\132\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "1399:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA42_3 = input.LA(1);

                         
                        int index42_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalKim()) ) {s = 44;}

                        else if ( (synpred56_InternalKim()) ) {s = 45;}

                         
                        input.seek(index42_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA42_4 = input.LA(1);

                         
                        int index42_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalKim()) ) {s = 44;}

                        else if ( (synpred56_InternalKim()) ) {s = 45;}

                         
                        input.seek(index42_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA42_5 = input.LA(1);

                         
                        int index42_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalKim()) ) {s = 44;}

                        else if ( (synpred56_InternalKim()) ) {s = 45;}

                         
                        input.seek(index42_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA42_35 = input.LA(1);

                         
                        int index42_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred59_InternalKim()) ) {s = 8;}

                        else if ( (synpred62_InternalKim()) ) {s = 46;}

                         
                        input.seek(index42_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 42, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\1\4\2\uffff\3\0\5\uffff\3\0\41\uffff";
    static final String dfa_27s = "\1\u00fc\2\uffff\3\0\5\uffff\3\0\41\uffff";
    static final String dfa_28s = "\3\uffff\1\0\1\1\1\2\5\uffff\1\3\1\4\1\5\41\uffff}>";
    static final String[] dfa_29s = {
            "\1\14\1\13\1\7\2\uffff\1\10\1\5\1\15\20\uffff\2\1\10\uffff\1\10\1\uffff\1\53\7\uffff\1\6\1\52\32\uffff\4\44\2\uffff\1\44\1\uffff\1\44\55\uffff\2\10\7\uffff\2\10\1\uffff\23\10\132\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[][] dfa_29 = unpackEncodedStringArray(dfa_29s);

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_23;
            this.special = dfa_28;
            this.transition = dfa_29;
        }
        public String getDescription() {
            return "1757:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA47_3 = input.LA(1);

                         
                        int index47_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred73_InternalKim()) ) {s = 44;}

                        else if ( (synpred74_InternalKim()) ) {s = 45;}

                         
                        input.seek(index47_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA47_4 = input.LA(1);

                         
                        int index47_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred73_InternalKim()) ) {s = 44;}

                        else if ( (synpred74_InternalKim()) ) {s = 45;}

                         
                        input.seek(index47_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA47_5 = input.LA(1);

                         
                        int index47_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred73_InternalKim()) ) {s = 44;}

                        else if ( (synpred74_InternalKim()) ) {s = 45;}

                         
                        input.seek(index47_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA47_11 = input.LA(1);

                         
                        int index47_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalKim()) ) {s = 8;}

                        else if ( (synpred79_InternalKim()) ) {s = 46;}

                         
                        input.seek(index47_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA47_12 = input.LA(1);

                         
                        int index47_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalKim()) ) {s = 8;}

                        else if ( (synpred79_InternalKim()) ) {s = 46;}

                         
                        input.seek(index47_12);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA47_13 = input.LA(1);

                         
                        int index47_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalKim()) ) {s = 8;}

                        else if ( (synpred79_InternalKim()) ) {s = 46;}

                         
                        input.seek(index47_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 47, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_30s = "\13\uffff";
    static final String dfa_31s = "\1\uffff\1\4\3\uffff\2\7\1\11\3\uffff";
    static final String dfa_32s = "\1\4\1\151\1\uffff\1\4\1\uffff\2\33\1\0\1\4\1\uffff\1\0";
    static final String dfa_33s = "\1\13\1\154\1\uffff\1\u00fc\1\uffff\2\u008a\1\0\1\u00fc\1\uffff\1\0";
    static final String dfa_34s = "\2\uffff\1\2\1\uffff\1\1\4\uffff\1\1\1\uffff";
    static final String dfa_35s = "\12\uffff\1\0}>";
    static final String[] dfa_36s = {
            "\1\2\1\1\5\uffff\1\2",
            "\1\3\2\uffff\1\2",
            "",
            "\1\4\1\5\1\4\1\uffff\3\4\1\6\2\uffff\1\2\15\uffff\2\4\10\uffff\1\4\12\uffff\2\4\117\uffff\2\4\7\uffff\2\4\1\uffff\23\4\65\uffff\1\4\44\uffff\2\4",
            "",
            "\1\4\12\uffff\1\4\102\uffff\1\10\2\uffff\1\4\35\uffff\1\4",
            "\1\4\12\uffff\1\4\102\uffff\1\10\2\uffff\1\4\35\uffff\1\4",
            "\1\uffff",
            "\3\2\1\uffff\1\2\1\12\2\2\20\uffff\2\2\10\uffff\1\2\12\uffff\2\2\117\uffff\2\2\7\uffff\2\2\1\uffff\23\2\65\uffff\1\2\44\uffff\2\2",
            "",
            "\1\uffff"
    };

    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = dfa_30;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "1971:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_10 = input.LA(1);

                         
                        int index46_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalKim()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index46_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_37s = "\14\uffff";
    static final String dfa_38s = "\2\uffff\1\7\6\uffff\3\7";
    static final String dfa_39s = "\1\4\1\151\1\31\1\151\4\uffff\1\4\3\31";
    static final String dfa_40s = "\1\150\3\154\4\uffff\1\13\3\154";
    static final String dfa_41s = "\4\uffff\1\2\1\3\1\4\1\1\4\uffff";
    static final String dfa_42s = "\1\uffff\1\0\1\uffff\1\1\10\uffff}>";
    static final String[] dfa_43s = {
            "\1\2\1\1\1\5\2\uffff\1\6\1\uffff\1\3\134\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\7\1\uffff\1\7\115\uffff\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\4",
            "",
            "",
            "",
            "",
            "\1\12\1\11\5\uffff\1\13",
            "\1\7\1\uffff\1\7\115\uffff\1\4\2\uffff\1\10",
            "\1\7\1\uffff\1\7\115\uffff\1\4\2\uffff\1\10",
            "\1\7\1\uffff\1\7\115\uffff\1\4\2\uffff\1\10"
    };

    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_37;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "2096:4: (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= RULE_STRING | lv_name_0_4= ruleLocalFilePath )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_1 = input.LA(1);

                         
                        int index48_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA48_1==105||LA48_1==108) ) {s = 4;}

                        else if ( (synpred82_InternalKim()) ) {s = 7;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index48_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA48_3 = input.LA(1);

                         
                        int index48_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA48_3==105||LA48_3==108) ) {s = 4;}

                        else if ( (synpred82_InternalKim()) ) {s = 7;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index48_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_44s = "\10\uffff";
    static final String dfa_45s = "\2\uffff\1\3\4\uffff\1\3";
    static final String dfa_46s = "\1\4\2\7\2\uffff\1\4\2\7";
    static final String dfa_47s = "\1\u00fc\1\154\1\103\2\uffff\1\u00fc\1\154\1\103";
    static final String dfa_48s = "\3\uffff\1\2\1\1\3\uffff";
    static final String dfa_49s = "\10\uffff}>";
    static final String[] dfa_50s = {
            "\1\3\1\1\1\2\1\uffff\4\3\20\uffff\2\3\10\uffff\1\3\1\uffff\1\3\7\uffff\2\3\3\uffff\1\3\26\uffff\4\3\2\uffff\1\3\1\uffff\1\3\55\uffff\2\3\7\uffff\2\3\1\uffff\23\3\132\uffff\2\3",
            "\1\4\54\uffff\1\4\64\uffff\1\3\2\uffff\1\3",
            "\1\4\14\uffff\1\3\6\uffff\1\3\16\uffff\1\3\10\uffff\1\3\1\5\1\uffff\3\3\5\uffff\6\3",
            "",
            "",
            "\1\3\1\6\1\7\1\uffff\4\3\20\uffff\2\3\10\uffff\1\3\1\uffff\1\3\7\uffff\2\3\3\uffff\1\3\26\uffff\4\3\2\uffff\1\3\1\uffff\1\3\55\uffff\2\3\7\uffff\2\3\1\uffff\23\3\132\uffff\2\3",
            "\1\4\54\uffff\1\4\64\uffff\1\3\2\uffff\1\3",
            "\1\4\14\uffff\1\3\6\uffff\1\3\16\uffff\1\3\10\uffff\1\3\1\5\1\uffff\3\3\5\uffff\6\3"
    };

    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_44;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "2236:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?";
        }
    }
    static final String dfa_51s = "\32\uffff";
    static final String dfa_52s = "\4\uffff\1\25\10\uffff\2\25\1\23\6\uffff\1\25\2\uffff\1\25";
    static final String dfa_53s = "\1\4\1\uffff\2\12\1\24\10\uffff\2\24\1\4\2\12\4\uffff\1\24\2\12\1\24";
    static final String dfa_54s = "\1\u00fc\1\uffff\2\12\1\u0102\10\uffff\2\u00ff\1\u0103\2\u00fc\4\uffff\1\u00ff\2\12\1\154";
    static final String dfa_55s = "\1\uffff\1\1\3\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\5\uffff\1\2\1\4\1\5\1\3\4\uffff";
    static final String dfa_56s = "\32\uffff}>";
    static final String[] dfa_57s = {
            "\2\7\1\6\1\uffff\1\11\1\7\1\4\1\7\20\uffff\2\1\10\uffff\1\7\1\uffff\1\13\7\uffff\1\5\1\12\3\uffff\1\14\26\uffff\4\10\2\uffff\1\10\1\uffff\1\10\55\uffff\2\7\7\uffff\2\7\1\uffff\23\7\132\uffff\1\2\1\3",
            "",
            "\1\15",
            "\1\15",
            "\1\25\6\uffff\1\25\10\uffff\1\22\5\uffff\1\25\3\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\1\23\1\17\u008f\uffff\1\24\1\16\1\20\1\21\3\24",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\25\6\uffff\1\25\10\uffff\1\22\5\uffff\1\25\3\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\1\23\1\17\u0090\uffff\1\16\1\20\1\21",
            "\1\25\6\uffff\1\25\10\uffff\1\22\5\uffff\1\25\3\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\1\23\1\17\u0091\uffff\1\20\1\21",
            "\2\23\3\uffff\1\23\1\26\3\uffff\1\23\5\uffff\1\23\6\uffff\1\23\12\uffff\1\23\1\uffff\1\23\1\uffff\1\23\10\uffff\2\23\1\uffff\3\23\5\uffff\6\23\47\uffff\1\23\u0097\uffff\1\23",
            "\1\31\u00f0\uffff\1\27\1\30",
            "\1\31\u00f0\uffff\1\27\1\30",
            "",
            "",
            "",
            "",
            "\1\25\6\uffff\1\25\10\uffff\1\22\5\uffff\1\25\3\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\2\23\u0091\uffff\1\20\1\21",
            "\1\31",
            "\1\31",
            "\1\25\6\uffff\1\25\10\uffff\1\22\5\uffff\1\25\3\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\2\23"
    };

    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "2481:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) )";
        }
    }
    static final String dfa_58s = "\56\uffff";
    static final String dfa_59s = "\1\7\55\uffff";
    static final String dfa_60s = "\1\4\6\0\47\uffff";
    static final String dfa_61s = "\1\u00a0\6\0\47\uffff";
    static final String dfa_62s = "\7\uffff\1\2\45\uffff\1\1";
    static final String dfa_63s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\47\uffff}>";
    static final String[] dfa_64s = {
            "\3\7\2\uffff\1\7\1\uffff\1\7\10\uffff\1\7\12\uffff\1\7\6\uffff\1\7\2\uffff\2\7\13\uffff\3\7\5\uffff\1\1\1\2\1\3\1\4\1\5\1\6\44\uffff\1\7\31\uffff\2\7\7\uffff\2\7\1\uffff\23\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_58;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "2932:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA63_1 = input.LA(1);

                         
                        int index63_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index63_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA63_2 = input.LA(1);

                         
                        int index63_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index63_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA63_3 = input.LA(1);

                         
                        int index63_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index63_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA63_4 = input.LA(1);

                         
                        int index63_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index63_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA63_5 = input.LA(1);

                         
                        int index63_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index63_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA63_6 = input.LA(1);

                         
                        int index63_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index63_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 63, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\70\uffff";
    static final String dfa_66s = "\1\22\67\uffff";
    static final String dfa_67s = "\1\4\3\uffff\1\0\3\uffff\4\0\1\uffff\2\0\51\uffff";
    static final String dfa_68s = "\1\u00fc\3\uffff\1\0\3\uffff\4\0\1\uffff\2\0\51\uffff";
    static final String dfa_69s = "\1\uffff\3\1\1\uffff\3\1\4\uffff\1\1\2\uffff\3\1\1\2\45\uffff";
    static final String dfa_70s = "\1\0\3\uffff\1\1\3\uffff\1\2\1\3\1\4\1\5\1\uffff\1\6\1\7\51\uffff}>";
    static final String[] dfa_71s = {
            "\1\12\1\11\1\4\1\uffff\1\14\1\15\1\3\1\13\1\7\7\uffff\1\22\6\uffff\1\10\1\5\1\6\1\uffff\1\22\6\uffff\1\16\2\uffff\2\22\6\uffff\1\21\1\17\3\uffff\3\22\5\uffff\6\22\44\uffff\1\22\31\uffff\2\22\7\uffff\2\22\1\uffff\23\22\65\uffff\1\20\44\uffff\1\1\1\2",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_65;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "3705:4: ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA84_0 = input.LA(1);

                         
                        int index84_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA84_0==251) && (synpred150_InternalKim())) {s = 1;}

                        else if ( (LA84_0==252) && (synpred150_InternalKim())) {s = 2;}

                        else if ( (LA84_0==RULE_INT) && (synpred150_InternalKim())) {s = 3;}

                        else if ( (LA84_0==RULE_STRING) ) {s = 4;}

                        else if ( (LA84_0==28) && (synpred150_InternalKim())) {s = 5;}

                        else if ( (LA84_0==29) && (synpred150_InternalKim())) {s = 6;}

                        else if ( (LA84_0==RULE_ID) && (synpred150_InternalKim())) {s = 7;}

                        else if ( (LA84_0==27) ) {s = 8;}

                        else if ( (LA84_0==RULE_LOWERCASE_ID) ) {s = 9;}

                        else if ( (LA84_0==RULE_UPPERCASE_ID) ) {s = 10;}

                        else if ( (LA84_0==RULE_LOWERCASE_DASHID) ) {s = 11;}

                        else if ( (LA84_0==RULE_EXPR) && (synpred150_InternalKim())) {s = 12;}

                        else if ( (LA84_0==RULE_CAMELCASE_ID) ) {s = 13;}

                        else if ( (LA84_0==38) ) {s = 14;}

                        else if ( (LA84_0==50) && (synpred150_InternalKim())) {s = 15;}

                        else if ( (LA84_0==214) && (synpred150_InternalKim())) {s = 16;}

                        else if ( (LA84_0==49) && (synpred150_InternalKim())) {s = 17;}

                        else if ( (LA84_0==EOF||LA84_0==20||LA84_0==31||(LA84_0>=41 && LA84_0<=42)||(LA84_0>=54 && LA84_0<=56)||(LA84_0>=62 && LA84_0<=67)||LA84_0==104||(LA84_0>=130 && LA84_0<=131)||(LA84_0>=139 && LA84_0<=140)||(LA84_0>=142 && LA84_0<=160)) ) {s = 18;}

                         
                        input.seek(index84_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA84_4 = input.LA(1);

                         
                        int index84_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA84_8 = input.LA(1);

                         
                        int index84_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA84_9 = input.LA(1);

                         
                        int index84_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA84_10 = input.LA(1);

                         
                        int index84_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA84_11 = input.LA(1);

                         
                        int index84_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA84_13 = input.LA(1);

                         
                        int index84_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA84_14 = input.LA(1);

                         
                        int index84_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index84_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 84, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_72s = "\20\uffff";
    static final String dfa_73s = "\1\4\10\uffff\2\0\5\uffff";
    static final String dfa_74s = "\1\u00fc\10\uffff\2\0\5\uffff";
    static final String dfa_75s = "\1\uffff\1\1\11\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_76s = "\11\uffff\1\0\1\1\5\uffff}>";
    static final String[] dfa_77s = {
            "\1\12\1\11\1\1\1\uffff\1\14\1\15\1\1\1\13\1\1\16\uffff\3\1\10\uffff\1\16\12\uffff\1\17\u00c9\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[][] dfa_77 = unpackEncodedStringArray(dfa_77s);

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_72;
            this.eof = dfa_72;
            this.min = dfa_73;
            this.max = dfa_74;
            this.accept = dfa_75;
            this.special = dfa_76;
            this.transition = dfa_77;
        }
        public String getDescription() {
            return "3809:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_9 = input.LA(1);

                         
                        int index91_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalKim()) ) {s = 11;}

                        else if ( (synpred161_InternalKim()) ) {s = 13;}

                         
                        input.seek(index91_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA91_10 = input.LA(1);

                         
                        int index91_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalKim()) ) {s = 11;}

                        else if ( (synpred161_InternalKim()) ) {s = 13;}

                         
                        input.seek(index91_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_78s = "\1\4\3\46\2\uffff\1\4\1\uffff\3\46";
    static final String dfa_79s = "\1\150\3\154\2\uffff\1\13\1\uffff\3\154";
    static final String dfa_80s = "\4\uffff\1\2\1\3\1\uffff\1\1\3\uffff";
    static final String dfa_81s = "\13\uffff}>";
    static final String[] dfa_82s = {
            "\1\2\1\1\1\5\1\uffff\1\4\2\uffff\1\3\134\uffff\1\5",
            "\1\7\102\uffff\1\5\2\uffff\1\6",
            "\1\7\102\uffff\1\5\2\uffff\1\6",
            "\1\7\102\uffff\1\5\2\uffff\1\6",
            "",
            "",
            "\1\11\1\10\5\uffff\1\12",
            "",
            "\1\7\102\uffff\1\5\2\uffff\1\6",
            "\1\7\102\uffff\1\5\2\uffff\1\6",
            "\1\7\102\uffff\1\5\2\uffff\1\6"
    };
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_82s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_30;
            this.eof = dfa_30;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "4093:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) )";
        }
    }
    static final String dfa_83s = "\65\uffff";
    static final String dfa_84s = "\1\3\64\uffff";
    static final String dfa_85s = "\1\4\2\0\62\uffff";
    static final String dfa_86s = "\1\u00a0\2\0\62\uffff";
    static final String dfa_87s = "\3\uffff\1\2\60\uffff\1\1";
    static final String dfa_88s = "\1\uffff\1\0\1\1\62\uffff}>";
    static final String[] dfa_89s = {
            "\3\3\2\uffff\1\3\1\uffff\1\3\10\uffff\1\3\6\uffff\1\3\3\uffff\3\3\3\uffff\2\3\2\uffff\2\3\1\uffff\1\1\1\2\10\uffff\3\3\5\uffff\6\3\1\uffff\1\3\42\uffff\1\3\31\uffff\2\3\7\uffff\2\3\1\uffff\23\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_83;
            this.eof = dfa_84;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "4228:3: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_1 = input.LA(1);

                         
                        int index98_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalKim()) ) {s = 52;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index98_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA98_2 = input.LA(1);

                         
                        int index98_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalKim()) ) {s = 52;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index98_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_90s = "\21\uffff";
    static final String dfa_91s = "\1\24\1\uffff\1\4\16\uffff";
    static final String dfa_92s = "\1\147\1\uffff\1\u00d6\16\uffff";
    static final String dfa_93s = "\1\uffff\1\11\1\uffff\1\3\1\4\1\5\1\6\1\7\2\10\1\1\1\10\5\2";
    static final String dfa_94s = "\1\0\1\uffff\1\1\16\uffff}>";
    static final String[] dfa_95s = {
            "\1\1\12\uffff\1\2\12\uffff\1\1\5\uffff\1\5\54\uffff\1\3\1\4\2\uffff\1\6\1\uffff\1\7\1\10\1\uffff\1\11\1\1",
            "",
            "\1\17\1\16\5\uffff\1\20\32\uffff\1\14\1\uffff\1\15\63\uffff\1\12\171\uffff\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA116 extends DFA {

        public DFA116(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 116;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "()* loopback of 4654:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA116_0 = input.LA(1);

                         
                        int index116_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA116_0==20||LA116_0==42||LA116_0==103) ) {s = 1;}

                        else if ( (LA116_0==31) ) {s = 2;}

                        else if ( LA116_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {s = 3;}

                        else if ( LA116_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {s = 4;}

                        else if ( LA116_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {s = 5;}

                        else if ( LA116_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {s = 6;}

                        else if ( LA116_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 7;}

                        else if ( LA116_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 8;}

                        else if ( LA116_0 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 9;}

                         
                        input.seek(index116_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA116_2 = input.LA(1);

                         
                        int index116_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA116_2 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 10;}

                        else if ( LA116_2 == 214 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 11;}

                        else if ( LA116_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 12;}

                        else if ( LA116_2 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 13;}

                        else if ( LA116_2 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 14;}

                        else if ( LA116_2 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 15;}

                        else if ( LA116_2 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 16;}

                         
                        input.seek(index116_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 116, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_96s = "\12\uffff";
    static final String dfa_97s = "\1\uffff\3\6\3\uffff\3\6";
    static final String dfa_98s = "\5\4\2\uffff\3\4";
    static final String dfa_99s = "\1\13\3\u00a0\1\13\2\uffff\3\u00a0";
    static final String dfa_100s = "\5\uffff\1\2\1\1\3\uffff";
    static final String dfa_101s = "\12\uffff}>";
    static final String[] dfa_102s = {
            "\1\2\1\1\5\uffff\1\3",
            "\3\6\2\uffff\1\6\1\uffff\1\6\10\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\2\6\2\uffff\2\6\1\uffff\2\6\10\uffff\3\6\5\uffff\6\6\1\uffff\1\6\14\uffff\1\5\25\uffff\1\6\1\uffff\2\6\1\4\25\uffff\2\6\7\uffff\2\6\1\uffff\23\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\10\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\2\6\2\uffff\2\6\1\uffff\2\6\10\uffff\3\6\5\uffff\6\6\1\uffff\1\6\14\uffff\1\5\25\uffff\1\6\1\uffff\2\6\1\4\25\uffff\2\6\7\uffff\2\6\1\uffff\23\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\10\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\2\6\2\uffff\2\6\1\uffff\2\6\10\uffff\3\6\5\uffff\6\6\1\uffff\1\6\14\uffff\1\5\25\uffff\1\6\1\uffff\2\6\1\4\25\uffff\2\6\7\uffff\2\6\1\uffff\23\6",
            "\1\10\1\7\5\uffff\1\11",
            "",
            "",
            "\3\6\2\uffff\1\6\1\uffff\1\6\10\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\2\6\2\uffff\2\6\1\uffff\2\6\10\uffff\3\6\5\uffff\6\6\1\uffff\1\6\14\uffff\1\5\25\uffff\1\6\1\uffff\2\6\1\4\25\uffff\2\6\7\uffff\2\6\1\uffff\23\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\10\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\2\6\2\uffff\2\6\1\uffff\2\6\10\uffff\3\6\5\uffff\6\6\1\uffff\1\6\14\uffff\1\5\25\uffff\1\6\1\uffff\2\6\1\4\25\uffff\2\6\7\uffff\2\6\1\uffff\23\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\10\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\2\6\2\uffff\2\6\1\uffff\2\6\10\uffff\3\6\5\uffff\6\6\1\uffff\1\6\14\uffff\1\5\25\uffff\1\6\1\uffff\2\6\1\4\25\uffff\2\6\7\uffff\2\6\1\uffff\23\6"
    };

    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[][] dfa_102 = unpackEncodedStringArray(dfa_102s);

    class DFA124 extends DFA {

        public DFA124(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 124;
            this.eot = dfa_96;
            this.eof = dfa_97;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_100;
            this.special = dfa_101;
            this.transition = dfa_102;
        }
        public String getDescription() {
            return "5478:4: (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp )";
        }
    }
    static final String dfa_103s = "\1\uffff\3\5\3\uffff\3\5";
    static final String dfa_104s = "\5\uffff\1\1\1\2\3\uffff";
    static final String[] dfa_105s = {
            "\1\2\1\1\5\uffff\1\3",
            "\3\5\2\uffff\1\5\1\uffff\1\5\10\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\25\uffff\1\5\1\uffff\2\5\1\4\25\uffff\2\5\7\uffff\2\5\1\uffff\23\5",
            "\3\5\2\uffff\1\5\1\uffff\1\5\10\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\25\uffff\1\5\1\uffff\2\5\1\4\25\uffff\2\5\7\uffff\2\5\1\uffff\23\5",
            "\3\5\2\uffff\1\5\1\uffff\1\5\10\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\25\uffff\1\5\1\uffff\2\5\1\4\25\uffff\2\5\7\uffff\2\5\1\uffff\23\5",
            "\1\10\1\7\5\uffff\1\11",
            "",
            "",
            "\3\5\2\uffff\1\5\1\uffff\1\5\10\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\25\uffff\1\5\1\uffff\2\5\1\4\25\uffff\2\5\7\uffff\2\5\1\uffff\23\5",
            "\3\5\2\uffff\1\5\1\uffff\1\5\10\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\25\uffff\1\5\1\uffff\2\5\1\4\25\uffff\2\5\7\uffff\2\5\1\uffff\23\5",
            "\3\5\2\uffff\1\5\1\uffff\1\5\10\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\25\uffff\1\5\1\uffff\2\5\1\4\25\uffff\2\5\7\uffff\2\5\1\uffff\23\5"
    };
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final short[][] dfa_105 = unpackEncodedStringArray(dfa_105s);

    class DFA125 extends DFA {

        public DFA125(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 125;
            this.eot = dfa_96;
            this.eof = dfa_103;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_104;
            this.special = dfa_101;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "5507:5: (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )";
        }
    }
    static final String dfa_106s = "\42\uffff";
    static final String dfa_107s = "\1\1\41\uffff";
    static final String dfa_108s = "\1\4\41\uffff";
    static final String dfa_109s = "\1\u00a0\41\uffff";
    static final String dfa_110s = "\1\uffff\1\4\36\1\1\2\1\3";
    static final String dfa_111s = "\1\0\41\uffff}>";
    static final String[] dfa_112s = {
            "\1\3\1\2\1\6\2\uffff\1\7\1\uffff\1\4\10\uffff\1\1\12\uffff\1\40\6\uffff\1\37\2\uffff\1\1\1\41\75\uffff\1\5\31\uffff\1\12\1\13\7\uffff\1\10\1\11\1\uffff\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final char[] dfa_108 = DFA.unpackEncodedStringToUnsignedChars(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[][] dfa_112 = unpackEncodedStringArray(dfa_112s);

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = dfa_106;
            this.eof = dfa_107;
            this.min = dfa_108;
            this.max = dfa_109;
            this.accept = dfa_110;
            this.special = dfa_111;
            this.transition = dfa_112;
        }
        public String getDescription() {
            return "()+ loopback of 5808:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMetadata ) ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA145_0 = input.LA(1);

                         
                        int index145_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA145_0==EOF||LA145_0==20||LA145_0==41) ) {s = 1;}

                        else if ( LA145_0 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 2;}

                        else if ( LA145_0 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 3;}

                        else if ( LA145_0 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 4;}

                        else if ( LA145_0 == 104 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 5;}

                        else if ( LA145_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 6;}

                        else if ( LA145_0 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 7;}

                        else if ( LA145_0 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 8;}

                        else if ( LA145_0 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 9;}

                        else if ( LA145_0 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 10;}

                        else if ( LA145_0 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 11;}

                        else if ( LA145_0 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 12;}

                        else if ( LA145_0 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 13;}

                        else if ( LA145_0 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 14;}

                        else if ( LA145_0 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 15;}

                        else if ( LA145_0 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 16;}

                        else if ( LA145_0 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 17;}

                        else if ( LA145_0 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 18;}

                        else if ( LA145_0 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 19;}

                        else if ( LA145_0 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 20;}

                        else if ( LA145_0 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 21;}

                        else if ( LA145_0 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 22;}

                        else if ( LA145_0 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 23;}

                        else if ( LA145_0 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 24;}

                        else if ( LA145_0 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 25;}

                        else if ( LA145_0 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 26;}

                        else if ( LA145_0 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 27;}

                        else if ( LA145_0 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 28;}

                        else if ( LA145_0 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( LA145_0 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 30;}

                        else if ( LA145_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( LA145_0 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 32;}

                        else if ( LA145_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {s = 33;}

                         
                        input.seek(index145_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 145, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_113s = "\16\uffff";
    static final String dfa_114s = "\1\4\3\31\1\uffff\1\4\1\uffff\3\4\4\31";
    static final String dfa_115s = "\1\u00a0\3\154\1\uffff\1\u00a0\1\uffff\3\13\4\154";
    static final String dfa_116s = "\4\uffff\1\1\1\uffff\1\2\7\uffff";
    static final String dfa_117s = "\16\uffff}>";
    static final String[] dfa_118s = {
            "\1\2\1\1\1\4\2\uffff\1\5\1\uffff\1\3\32\uffff\1\6\101\uffff\1\4\31\uffff\2\6\7\uffff\2\6\1\uffff\23\6",
            "\1\4\33\uffff\1\4\63\uffff\1\10\1\uffff\1\4\1\7",
            "\1\4\117\uffff\1\10\2\uffff\1\11",
            "\1\4\33\uffff\1\4\63\uffff\1\10\1\uffff\1\4\1\7",
            "",
            "\2\6\3\uffff\1\6\1\uffff\1\6\15\uffff\1\4\14\uffff\1\6\16\uffff\1\4\17\uffff\1\6\34\uffff\1\6\10\uffff\2\4\7\uffff\1\6\4\uffff\13\6\7\uffff\26\6",
            "",
            "\1\13\1\12\5\uffff\1\14",
            "\2\4\3\uffff\1\6\1\uffff\1\4",
            "\1\13\1\15\5\uffff\1\14",
            "\1\4\33\uffff\1\4\63\uffff\1\10\2\uffff\1\11",
            "\1\4\117\uffff\1\10\2\uffff\1\11",
            "\1\4\117\uffff\1\10\2\uffff\1\11",
            "\1\4\117\uffff\1\10\2\uffff\1\11"
    };

    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final short[][] dfa_118 = unpackEncodedStringArray(dfa_118s);

    class DFA136 extends DFA {

        public DFA136(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 136;
            this.eot = dfa_113;
            this.eof = dfa_113;
            this.min = dfa_114;
            this.max = dfa_115;
            this.accept = dfa_116;
            this.special = dfa_117;
            this.transition = dfa_118;
        }
        public String getDescription() {
            return "5814:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
    static final String dfa_119s = "\1\4\13\uffff";
    static final String dfa_120s = "\1\4\3\31\1\uffff\1\4\1\uffff\1\4\4\31";
    static final String dfa_121s = "\1\u00a0\3\154\1\uffff\1\13\1\uffff\1\13\4\154";
    static final String dfa_122s = "\4\uffff\1\2\1\uffff\1\1\5\uffff";
    static final String dfa_123s = "\14\uffff}>";
    static final String[] dfa_124s = {
            "\1\2\1\1\1\4\2\uffff\1\4\1\uffff\1\3\10\uffff\1\4\12\uffff\1\4\6\uffff\1\4\2\uffff\2\4\75\uffff\1\4\31\uffff\2\4\7\uffff\2\4\1\uffff\23\4",
            "\1\4\14\uffff\1\6\16\uffff\1\4\63\uffff\1\4\1\uffff\1\4\1\5",
            "\1\4\14\uffff\1\6\102\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\16\uffff\1\4\63\uffff\1\4\1\uffff\1\4\1\5",
            "",
            "\1\11\1\10\5\uffff\1\12",
            "",
            "\1\11\1\13\5\uffff\1\12",
            "\1\4\14\uffff\1\6\16\uffff\1\4\63\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\102\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\102\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\102\uffff\1\4\2\uffff\1\7"
    };
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final char[] dfa_120 = DFA.unpackEncodedStringToUnsignedChars(dfa_120s);
    static final char[] dfa_121 = DFA.unpackEncodedStringToUnsignedChars(dfa_121s);
    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final short[][] dfa_124 = unpackEncodedStringArray(dfa_124s);

    class DFA144 extends DFA {

        public DFA144(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 144;
            this.eot = dfa_37;
            this.eof = dfa_119;
            this.min = dfa_120;
            this.max = dfa_121;
            this.accept = dfa_122;
            this.special = dfa_123;
            this.transition = dfa_124;
        }
        public String getDescription() {
            return "6110:8: ( (lv_accessor_24_0= ruleFunction ) )?";
        }
    }
    static final String dfa_125s = "\52\uffff";
    static final String dfa_126s = "\1\4\10\uffff\3\0\1\uffff\2\0\33\uffff";
    static final String dfa_127s = "\1\u00fc\10\uffff\3\0\1\uffff\2\0\33\uffff";
    static final String dfa_128s = "\1\uffff\1\1\20\uffff\1\2\27\uffff";
    static final String dfa_129s = "\11\uffff\1\0\1\1\1\2\1\uffff\1\3\1\4\33\uffff}>";
    static final String[] dfa_130s = {
            "\1\12\1\11\1\1\1\uffff\1\1\1\15\1\1\1\13\1\1\16\uffff\3\1\10\uffff\1\16\12\uffff\2\1\75\uffff\1\22\21\uffff\2\22\7\uffff\2\22\1\uffff\23\22\65\uffff\1\1\44\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final char[] dfa_126 = DFA.unpackEncodedStringToUnsignedChars(dfa_126s);
    static final char[] dfa_127 = DFA.unpackEncodedStringToUnsignedChars(dfa_127s);
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[][] dfa_130 = unpackEncodedStringArray(dfa_130s);

    class DFA146 extends DFA {

        public DFA146(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 146;
            this.eot = dfa_125;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "6208:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA146_9 = input.LA(1);

                         
                        int index146_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred253_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index146_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA146_10 = input.LA(1);

                         
                        int index146_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred253_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index146_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA146_11 = input.LA(1);

                         
                        int index146_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred253_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index146_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA146_13 = input.LA(1);

                         
                        int index146_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred253_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index146_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA146_14 = input.LA(1);

                         
                        int index146_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred253_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index146_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 146, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_131s = "\u00a8\uffff";
    static final String dfa_132s = "\1\1\42\uffff\1\1\30\uffff\1\100\153\uffff";
    static final String dfa_133s = "\1\4\1\uffff\2\4\37\uffff\1\4\2\46\26\uffff\1\4\1\uffff\1\4\1\11\144\uffff\3\46\1\0";
    static final String dfa_134s = "\1\u00fc\1\uffff\1\u00fc\1\13\37\uffff\1\u00a0\2\154\26\uffff\1\u00fc\1\uffff\1\13\1\11\144\uffff\3\154\1\0";
    static final String dfa_135s = "\1\uffff\1\7\2\uffff\1\1\2\2\21\3\2\4\3\5\6\3\3\uffff\26\3\1\uffff\1\6\2\uffff\144\6\4\uffff";
    static final String dfa_136s = "\1\4\1\uffff\1\1\1\2\70\uffff\1\0\152\uffff\1\3}>";
    static final String[] dfa_137s = {
            "\3\1\2\uffff\1\1\1\34\1\1\2\uffff\1\1\5\uffff\1\1\6\uffff\1\1\2\uffff\2\1\3\uffff\1\4\2\uffff\1\1\2\uffff\2\1\5\uffff\1\5\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\17\uffff\1\1\6\uffff\1\1\1\uffff\1\6\1\30\1\31\1\3\1\24\1\25\1\26\1\27\11\uffff\2\1\7\uffff\2\1\1\uffff\23\1\14\uffff\2\1\2\uffff\3\1\1\uffff\11\1\2\uffff\13\1\6\uffff\1\1\51\uffff\1\32\1\33",
            "",
            "\1\44\1\43\3\uffff\1\42\1\37\1\45\32\uffff\1\73\133\uffff\1\46\1\47\7\uffff\1\40\1\41\1\uffff\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\132\uffff\1\35\1\36",
            "\1\1\1\74\1\75\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\3\1\2\uffff\1\1\1\uffff\1\1\10\uffff\1\1\6\uffff\1\1\3\uffff\1\1\6\uffff\1\1\2\uffff\2\1\13\uffff\3\1\5\uffff\6\1\44\uffff\1\1\1\77\2\uffff\1\76\25\uffff\2\1\7\uffff\2\1\1\uffff\23\1",
            "\1\1\102\uffff\1\77\2\uffff\1\76",
            "\1\1\102\uffff\1\77\2\uffff\1\76",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\116\1\115\1\121\2\uffff\1\122\1\u00a3\1\117\2\uffff\1\u0089\5\uffff\1\113\6\uffff\1\101\2\uffff\1\155\1\153\3\uffff\1\u008b\2\uffff\1\152\2\uffff\1\114\1\154\5\uffff\1\u008c\5\uffff\1\102\1\103\1\104\5\uffff\1\105\1\106\1\107\1\110\1\111\1\112\10\uffff\1\u008e\1\u008f\1\u0090\1\u0091\1\u0092\1\u0093\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\17\uffff\1\120\1\1\2\uffff\1\1\2\uffff\1\156\1\uffff\1\u008d\1\u009f\1\u00a0\1\157\1\u009b\1\u009c\1\u009d\1\u009e\11\uffff\1\125\1\126\7\uffff\1\123\1\124\1\uffff\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\14\uffff\1\160\1\161\2\uffff\1\162\1\163\1\164\1\uffff\1\165\1\166\1\167\1\170\1\171\1\172\1\173\1\174\1\175\2\uffff\1\176\1\177\1\u0080\1\u0081\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\6\uffff\1\u008a\51\uffff\1\u00a1\1\u00a2",
            "",
            "\1\u00a5\1\u00a4\5\uffff\1\u00a6",
            "\1\u00a7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\102\uffff\1\77\2\uffff\1\76",
            "\1\1\102\uffff\1\77\2\uffff\1\76",
            "\1\1\102\uffff\1\77\2\uffff\1\76",
            "\1\uffff"
    };

    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final char[] dfa_133 = DFA.unpackEncodedStringToUnsignedChars(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[][] dfa_137 = unpackEncodedStringArray(dfa_137s);

    class DFA153 extends DFA {

        public DFA153(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 153;
            this.eot = dfa_131;
            this.eof = dfa_132;
            this.min = dfa_133;
            this.max = dfa_134;
            this.accept = dfa_135;
            this.special = dfa_136;
            this.transition = dfa_137;
        }
        public String getDescription() {
            return "()* loopback of 6272:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA153_60 = input.LA(1);

                         
                        int index153_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA153_60==105||LA153_60==108) ) {s = 1;}

                        else if ( LA153_60 == EOF && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 64;}

                        else if ( LA153_60 == 27 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 65;}

                        else if ( LA153_60 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 66;}

                        else if ( LA153_60 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 67;}

                        else if ( LA153_60 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 68;}

                        else if ( LA153_60 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 69;}

                        else if ( LA153_60 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 70;}

                        else if ( LA153_60 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 71;}

                        else if ( LA153_60 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 72;}

                        else if ( LA153_60 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 73;}

                        else if ( LA153_60 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 74;}

                        else if ( LA153_60 == 20 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 75;}

                        else if ( LA153_60 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 76;}

                        else if ( LA153_60 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 77;}

                        else if ( LA153_60 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 78;}

                        else if ( LA153_60 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 79;}

                        else if ( LA153_60 == 104 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 80;}

                        else if ( LA153_60 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 81;}

                        else if ( LA153_60 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 82;}

                        else if ( LA153_60 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 83;}

                        else if ( LA153_60 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 84;}

                        else if ( LA153_60 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 85;}

                        else if ( LA153_60 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 86;}

                        else if ( LA153_60 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 87;}

                        else if ( LA153_60 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 88;}

                        else if ( LA153_60 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 89;}

                        else if ( LA153_60 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 90;}

                        else if ( LA153_60 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 91;}

                        else if ( LA153_60 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 92;}

                        else if ( LA153_60 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 93;}

                        else if ( LA153_60 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 94;}

                        else if ( LA153_60 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 95;}

                        else if ( LA153_60 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 96;}

                        else if ( LA153_60 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 97;}

                        else if ( LA153_60 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 98;}

                        else if ( LA153_60 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 99;}

                        else if ( LA153_60 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 100;}

                        else if ( LA153_60 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 101;}

                        else if ( LA153_60 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 102;}

                        else if ( LA153_60 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 103;}

                        else if ( LA153_60 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 104;}

                        else if ( LA153_60 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 105;}

                        else if ( LA153_60 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 106;}

                        else if ( LA153_60 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 107;}

                        else if ( LA153_60 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 108;}

                        else if ( LA153_60 == 30 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 109;}

                        else if ( LA153_60 == 111 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 110;}

                        else if ( LA153_60 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 111;}

                        else if ( LA153_60 == 173 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 112;}

                        else if ( LA153_60 == 174 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 113;}

                        else if ( LA153_60 == 177 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 114;}

                        else if ( LA153_60 == 178 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 115;}

                        else if ( LA153_60 == 179 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 116;}

                        else if ( LA153_60 == 181 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 117;}

                        else if ( LA153_60 == 182 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 118;}

                        else if ( LA153_60 == 183 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 119;}

                        else if ( LA153_60 == 184 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 120;}

                        else if ( LA153_60 == 185 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 121;}

                        else if ( LA153_60 == 186 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 122;}

                        else if ( LA153_60 == 187 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 123;}

                        else if ( LA153_60 == 188 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 124;}

                        else if ( LA153_60 == 189 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 125;}

                        else if ( LA153_60 == 192 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 126;}

                        else if ( LA153_60 == 193 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 127;}

                        else if ( LA153_60 == 194 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 128;}

                        else if ( LA153_60 == 195 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 129;}

                        else if ( LA153_60 == 196 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 130;}

                        else if ( LA153_60 == 197 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 131;}

                        else if ( LA153_60 == 198 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 132;}

                        else if ( LA153_60 == 199 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 133;}

                        else if ( LA153_60 == 200 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 134;}

                        else if ( LA153_60 == 201 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 135;}

                        else if ( LA153_60 == 202 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 136;}

                        else if ( LA153_60 == RULE_BACKCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 137;}

                        else if ( LA153_60 == 209 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 138;}

                        else if ( LA153_60 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 139;}

                        else if ( LA153_60 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 140;}

                        else if ( LA153_60 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 141;}

                        else if ( LA153_60 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 142;}

                        else if ( LA153_60 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 143;}

                        else if ( LA153_60 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 144;}

                        else if ( LA153_60 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 145;}

                        else if ( LA153_60 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 146;}

                        else if ( LA153_60 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 147;}

                        else if ( LA153_60 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 148;}

                        else if ( LA153_60 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 149;}

                        else if ( LA153_60 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 150;}

                        else if ( LA153_60 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 151;}

                        else if ( LA153_60 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 152;}

                        else if ( LA153_60 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 153;}

                        else if ( LA153_60 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 154;}

                        else if ( LA153_60 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 155;}

                        else if ( LA153_60 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 156;}

                        else if ( LA153_60 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 157;}

                        else if ( LA153_60 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 158;}

                        else if ( LA153_60 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 159;}

                        else if ( LA153_60 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 160;}

                        else if ( LA153_60 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 161;}

                        else if ( LA153_60 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 162;}

                        else if ( LA153_60 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 163;}

                         
                        input.seek(index153_60);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA153_2 = input.LA(1);

                         
                        int index153_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA153_2 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 29;}

                        else if ( LA153_2 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 30;}

                        else if ( LA153_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 31;}

                        else if ( LA153_2 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 32;}

                        else if ( LA153_2 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 33;}

                        else if ( LA153_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 34;}

                        else if ( (LA153_2==RULE_LOWERCASE_ID) ) {s = 35;}

                        else if ( (LA153_2==RULE_UPPERCASE_ID) ) {s = 36;}

                        else if ( (LA153_2==RULE_LOWERCASE_DASHID) ) {s = 37;}

                        else if ( LA153_2 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 38;}

                        else if ( LA153_2 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 39;}

                        else if ( LA153_2 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 40;}

                        else if ( LA153_2 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 41;}

                        else if ( LA153_2 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 42;}

                        else if ( LA153_2 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 43;}

                        else if ( LA153_2 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 44;}

                        else if ( LA153_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 45;}

                        else if ( LA153_2 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 46;}

                        else if ( LA153_2 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 47;}

                        else if ( LA153_2 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 48;}

                        else if ( LA153_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 49;}

                        else if ( LA153_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 50;}

                        else if ( LA153_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 51;}

                        else if ( LA153_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 52;}

                        else if ( LA153_2 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 53;}

                        else if ( LA153_2 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 54;}

                        else if ( LA153_2 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 55;}

                        else if ( LA153_2 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 56;}

                        else if ( LA153_2 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 57;}

                        else if ( LA153_2 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 58;}

                        else if ( LA153_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 59;}

                         
                        input.seek(index153_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA153_3 = input.LA(1);

                         
                        int index153_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA153_3==RULE_LOWERCASE_ID) ) {s = 60;}

                        else if ( LA153_3 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 61;}

                        else if ( (LA153_3==RULE_UPPERCASE_ID||LA153_3==RULE_LOWERCASE_DASHID) ) {s = 1;}

                         
                        input.seek(index153_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA153_167 = input.LA(1);

                         
                        int index153_167 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred260_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 59;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index153_167);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA153_0 = input.LA(1);

                         
                        int index153_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA153_0==EOF||(LA153_0>=RULE_UPPERCASE_ID && LA153_0<=RULE_STRING)||LA153_0==RULE_CAMELCASE_ID||LA153_0==RULE_LOWERCASE_DASHID||LA153_0==RULE_BACKCASE_ID||LA153_0==20||LA153_0==27||(LA153_0>=30 && LA153_0<=31)||LA153_0==38||(LA153_0>=41 && LA153_0<=42)||LA153_0==54||LA153_0==56||(LA153_0>=62 && LA153_0<=67)||LA153_0==104||LA153_0==111||(LA153_0>=130 && LA153_0<=131)||(LA153_0>=139 && LA153_0<=140)||(LA153_0>=142 && LA153_0<=160)||(LA153_0>=173 && LA153_0<=174)||(LA153_0>=177 && LA153_0<=179)||(LA153_0>=181 && LA153_0<=189)||(LA153_0>=192 && LA153_0<=202)||LA153_0==209) ) {s = 1;}

                        else if ( (LA153_0==55) ) {s = 2;}

                        else if ( (LA153_0==116) ) {s = 3;}

                        else if ( LA153_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 4;}

                        else if ( LA153_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA153_0 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 6;}

                        else if ( LA153_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA153_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 8;}

                        else if ( LA153_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 9;}

                        else if ( LA153_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 10;}

                        else if ( LA153_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 11;}

                        else if ( LA153_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 12;}

                        else if ( LA153_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 13;}

                        else if ( LA153_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 14;}

                        else if ( LA153_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 15;}

                        else if ( LA153_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 16;}

                        else if ( LA153_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 17;}

                        else if ( LA153_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 18;}

                        else if ( LA153_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 19;}

                        else if ( LA153_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 20;}

                        else if ( LA153_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 21;}

                        else if ( LA153_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 22;}

                        else if ( LA153_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 23;}

                        else if ( LA153_0 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 24;}

                        else if ( LA153_0 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 25;}

                        else if ( LA153_0 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 26;}

                        else if ( LA153_0 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 27;}

                        else if ( LA153_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 28;}

                         
                        input.seek(index153_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 153, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_138s = "\146\uffff";
    static final String dfa_139s = "\1\1\145\uffff";
    static final String dfa_140s = "\1\4\3\uffff\1\0\112\uffff\21\0\6\uffff";
    static final String dfa_141s = "\1\u00fc\3\uffff\1\0\112\uffff\21\0\6\uffff";
    static final String dfa_142s = "\1\uffff\1\2\143\uffff\1\1";
    static final String dfa_143s = "\4\uffff\1\0\112\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\6\uffff}>";
    static final String[] dfa_144s = {
            "\3\1\2\uffff\3\1\2\uffff\1\1\5\uffff\1\1\6\uffff\1\1\2\uffff\2\1\3\uffff\1\1\2\uffff\1\1\2\uffff\2\1\5\uffff\1\1\5\uffff\1\1\1\4\1\1\5\uffff\6\1\10\uffff\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\17\uffff\1\1\6\uffff\1\1\1\uffff\4\1\1\134\1\135\1\136\1\137\11\uffff\2\1\7\uffff\2\1\1\uffff\23\1\14\uffff\2\1\2\uffff\3\1\1\uffff\11\1\2\uffff\13\1\6\uffff\1\1\51\uffff\2\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final char[] dfa_140 = DFA.unpackEncodedStringToUnsignedChars(dfa_140s);
    static final char[] dfa_141 = DFA.unpackEncodedStringToUnsignedChars(dfa_141s);
    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final short[] dfa_143 = DFA.unpackEncodedString(dfa_143s);
    static final short[][] dfa_144 = unpackEncodedStringArray(dfa_144s);

    class DFA150 extends DFA {

        public DFA150(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 150;
            this.eot = dfa_138;
            this.eof = dfa_139;
            this.min = dfa_140;
            this.max = dfa_141;
            this.accept = dfa_142;
            this.special = dfa_143;
            this.transition = dfa_144;
        }
        public String getDescription() {
            return "()* loopback of 6419:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA150_4 = input.LA(1);

                         
                        int index150_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA150_79 = input.LA(1);

                         
                        int index150_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_79);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA150_80 = input.LA(1);

                         
                        int index150_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_80);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA150_81 = input.LA(1);

                         
                        int index150_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_81);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA150_82 = input.LA(1);

                         
                        int index150_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_82);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA150_83 = input.LA(1);

                         
                        int index150_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_83);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA150_84 = input.LA(1);

                         
                        int index150_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_84);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA150_85 = input.LA(1);

                         
                        int index150_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_85);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA150_86 = input.LA(1);

                         
                        int index150_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_86);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA150_87 = input.LA(1);

                         
                        int index150_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_87);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA150_88 = input.LA(1);

                         
                        int index150_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_88);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA150_89 = input.LA(1);

                         
                        int index150_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_89);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA150_90 = input.LA(1);

                         
                        int index150_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_90);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA150_91 = input.LA(1);

                         
                        int index150_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_91);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA150_92 = input.LA(1);

                         
                        int index150_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_92);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA150_93 = input.LA(1);

                         
                        int index150_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_93);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA150_94 = input.LA(1);

                         
                        int index150_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_94);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA150_95 = input.LA(1);

                         
                        int index150_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalKim()) ) {s = 101;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index150_95);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 150, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_145s = "\43\uffff";
    static final String dfa_146s = "\1\4\3\0\33\uffff\1\0\3\uffff";
    static final String dfa_147s = "\1\u00fc\3\0\33\uffff\1\0\3\uffff";
    static final String dfa_148s = "\4\uffff\1\3\33\uffff\1\1\1\2\1\4";
    static final String dfa_149s = "\1\uffff\1\0\1\1\1\2\33\uffff\1\3\3\uffff}>";
    static final String[] dfa_150s = {
            "\2\4\3\uffff\1\4\1\3\1\4\32\uffff\1\37\133\uffff\2\4\7\uffff\2\4\1\uffff\23\4\132\uffff\1\1\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);
    static final char[] dfa_146 = DFA.unpackEncodedStringToUnsignedChars(dfa_146s);
    static final char[] dfa_147 = DFA.unpackEncodedStringToUnsignedChars(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[] dfa_149 = DFA.unpackEncodedString(dfa_149s);
    static final short[][] dfa_150 = unpackEncodedStringArray(dfa_150s);

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = dfa_145;
            this.eof = dfa_145;
            this.min = dfa_146;
            this.max = dfa_147;
            this.accept = dfa_148;
            this.special = dfa_149;
            this.transition = dfa_150;
        }
        public String getDescription() {
            return "6649:4: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA155_1 = input.LA(1);

                         
                        int index155_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalKim()) ) {s = 32;}

                        else if ( (synpred268_InternalKim()) ) {s = 33;}

                         
                        input.seek(index155_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA155_2 = input.LA(1);

                         
                        int index155_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalKim()) ) {s = 32;}

                        else if ( (synpred268_InternalKim()) ) {s = 33;}

                         
                        input.seek(index155_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA155_3 = input.LA(1);

                         
                        int index155_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalKim()) ) {s = 32;}

                        else if ( (synpred268_InternalKim()) ) {s = 33;}

                         
                        input.seek(index155_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA155_31 = input.LA(1);

                         
                        int index155_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred269_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index155_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 155, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA158 extends DFA {

        public DFA158(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 158;
            this.eot = dfa_125;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "6834:3: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA158_9 = input.LA(1);

                         
                        int index158_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index158_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA158_10 = input.LA(1);

                         
                        int index158_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index158_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA158_11 = input.LA(1);

                         
                        int index158_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index158_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA158_13 = input.LA(1);

                         
                        int index158_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index158_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA158_14 = input.LA(1);

                         
                        int index158_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index158_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 158, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_151s = "\102\uffff";
    static final String dfa_152s = "\1\1\42\uffff\1\1\36\uffff";
    static final String dfa_153s = "\1\6\1\uffff\1\4\40\uffff\1\24\2\46\26\uffff\1\4\1\11\3\46\1\0";
    static final String dfa_154s = "\1\u00fc\1\uffff\1\u00fc\40\uffff\3\154\26\uffff\1\13\1\11\3\154\1\0";
    static final String dfa_155s = "\1\uffff\1\7\1\uffff\1\1\2\2\21\3\2\4\3\5\1\6\6\3\3\uffff\26\3\6\uffff";
    static final String dfa_156s = "\1\2\1\uffff\1\1\76\uffff\1\0}>";
    static final String[] dfa_157s = {
            "\1\1\3\uffff\1\33\11\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\3\1\uffff\1\1\4\uffff\1\1\5\uffff\1\4\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\30\uffff\1\5\1\27\1\30\1\34\1\23\1\24\1\25\1\26\u0082\uffff\1\31\1\32",
            "",
            "\1\44\1\43\3\uffff\1\42\1\37\1\45\32\uffff\1\73\133\uffff\1\46\1\47\7\uffff\1\40\1\41\1\uffff\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\132\uffff\1\35\1\36",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\6\uffff\1\1\12\uffff\1\1\3\uffff\1\1\13\uffff\3\1\5\uffff\6\1\45\uffff\1\75\2\uffff\1\74",
            "\1\1\102\uffff\1\75\2\uffff\1\74",
            "\1\1\102\uffff\1\75\2\uffff\1\74",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\77\1\76\5\uffff\1\100",
            "\1\101",
            "\1\1\102\uffff\1\75\2\uffff\1\74",
            "\1\1\102\uffff\1\75\2\uffff\1\74",
            "\1\1\102\uffff\1\75\2\uffff\1\74",
            "\1\uffff"
    };

    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final char[] dfa_153 = DFA.unpackEncodedStringToUnsignedChars(dfa_153s);
    static final char[] dfa_154 = DFA.unpackEncodedStringToUnsignedChars(dfa_154s);
    static final short[] dfa_155 = DFA.unpackEncodedString(dfa_155s);
    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final short[][] dfa_157 = unpackEncodedStringArray(dfa_157s);

    class DFA165 extends DFA {

        public DFA165(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 165;
            this.eot = dfa_151;
            this.eof = dfa_152;
            this.min = dfa_153;
            this.max = dfa_154;
            this.accept = dfa_155;
            this.special = dfa_156;
            this.transition = dfa_157;
        }
        public String getDescription() {
            return "()* loopback of 6898:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA165_65 = input.LA(1);

                         
                        int index165_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred281_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 59;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index165_65);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA165_2 = input.LA(1);

                         
                        int index165_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA165_2 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 29;}

                        else if ( LA165_2 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 30;}

                        else if ( LA165_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 31;}

                        else if ( LA165_2 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 32;}

                        else if ( LA165_2 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 33;}

                        else if ( LA165_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 34;}

                        else if ( (LA165_2==RULE_LOWERCASE_ID) ) {s = 35;}

                        else if ( (LA165_2==RULE_UPPERCASE_ID) ) {s = 36;}

                        else if ( (LA165_2==RULE_LOWERCASE_DASHID) ) {s = 37;}

                        else if ( LA165_2 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 38;}

                        else if ( LA165_2 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 39;}

                        else if ( LA165_2 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 40;}

                        else if ( LA165_2 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 41;}

                        else if ( LA165_2 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 42;}

                        else if ( LA165_2 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 43;}

                        else if ( LA165_2 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 44;}

                        else if ( LA165_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 45;}

                        else if ( LA165_2 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 46;}

                        else if ( LA165_2 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 47;}

                        else if ( LA165_2 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 48;}

                        else if ( LA165_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 49;}

                        else if ( LA165_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 50;}

                        else if ( LA165_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 51;}

                        else if ( LA165_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 52;}

                        else if ( LA165_2 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 53;}

                        else if ( LA165_2 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 54;}

                        else if ( LA165_2 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 55;}

                        else if ( LA165_2 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 56;}

                        else if ( LA165_2 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 57;}

                        else if ( LA165_2 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 58;}

                        else if ( LA165_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 59;}

                         
                        input.seek(index165_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA165_0 = input.LA(1);

                         
                        int index165_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA165_0==EOF||LA165_0==RULE_STRING||LA165_0==20||LA165_0==27||(LA165_0>=30 && LA165_0<=33)||LA165_0==37||LA165_0==42||LA165_0==54||LA165_0==56||(LA165_0>=62 && LA165_0<=67)) ) {s = 1;}

                        else if ( (LA165_0==55) ) {s = 2;}

                        else if ( LA165_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {s = 3;}

                        else if ( LA165_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {s = 4;}

                        else if ( LA165_0 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {s = 5;}

                        else if ( LA165_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 6;}

                        else if ( LA165_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 7;}

                        else if ( LA165_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 8;}

                        else if ( LA165_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 9;}

                        else if ( LA165_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 10;}

                        else if ( LA165_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 11;}

                        else if ( LA165_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 12;}

                        else if ( LA165_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 13;}

                        else if ( LA165_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 14;}

                        else if ( LA165_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 15;}

                        else if ( LA165_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 16;}

                        else if ( LA165_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 17;}

                        else if ( LA165_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 18;}

                        else if ( LA165_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 19;}

                        else if ( LA165_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 20;}

                        else if ( LA165_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 21;}

                        else if ( LA165_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 22;}

                        else if ( LA165_0 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {s = 23;}

                        else if ( LA165_0 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {s = 24;}

                        else if ( LA165_0 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {s = 25;}

                        else if ( LA165_0 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {s = 26;}

                        else if ( LA165_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {s = 27;}

                        else if ( LA165_0 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {s = 28;}

                         
                        input.seek(index165_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 165, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_158s = "\1\1\56\uffff";
    static final String dfa_159s = "\1\6\10\uffff\1\0\15\uffff\21\0\7\uffff";
    static final String dfa_160s = "\1\u00fc\10\uffff\1\0\15\uffff\21\0\7\uffff";
    static final String dfa_161s = "\1\uffff\1\2\54\uffff\1\1";
    static final String dfa_162s = "\11\uffff\1\0\15\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\7\uffff}>";
    static final String[] dfa_163s = {
            "\1\1\3\uffff\1\1\11\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\5\uffff\1\1\5\uffff\1\1\1\11\1\1\5\uffff\6\1\10\uffff\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\30\uffff\4\1\1\44\1\45\1\46\1\47\u0082\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_158 = DFA.unpackEncodedString(dfa_158s);
    static final char[] dfa_159 = DFA.unpackEncodedStringToUnsignedChars(dfa_159s);
    static final char[] dfa_160 = DFA.unpackEncodedStringToUnsignedChars(dfa_160s);
    static final short[] dfa_161 = DFA.unpackEncodedString(dfa_161s);
    static final short[] dfa_162 = DFA.unpackEncodedString(dfa_162s);
    static final short[][] dfa_163 = unpackEncodedStringArray(dfa_163s);

    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 162;
            this.eot = dfa_20;
            this.eof = dfa_158;
            this.min = dfa_159;
            this.max = dfa_160;
            this.accept = dfa_161;
            this.special = dfa_162;
            this.transition = dfa_163;
        }
        public String getDescription() {
            return "()* loopback of 7045:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA162_9 = input.LA(1);

                         
                        int index162_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA162_23 = input.LA(1);

                         
                        int index162_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_23);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA162_24 = input.LA(1);

                         
                        int index162_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_24);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA162_25 = input.LA(1);

                         
                        int index162_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_25);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA162_26 = input.LA(1);

                         
                        int index162_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_26);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA162_27 = input.LA(1);

                         
                        int index162_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_27);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA162_28 = input.LA(1);

                         
                        int index162_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_28);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA162_29 = input.LA(1);

                         
                        int index162_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_29);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA162_30 = input.LA(1);

                         
                        int index162_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_30);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA162_31 = input.LA(1);

                         
                        int index162_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_31);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA162_32 = input.LA(1);

                         
                        int index162_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_32);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA162_33 = input.LA(1);

                         
                        int index162_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_33);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA162_34 = input.LA(1);

                         
                        int index162_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_34);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA162_35 = input.LA(1);

                         
                        int index162_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_35);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA162_36 = input.LA(1);

                         
                        int index162_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_36);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA162_37 = input.LA(1);

                         
                        int index162_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_37);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA162_38 = input.LA(1);

                         
                        int index162_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_38);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA162_39 = input.LA(1);

                         
                        int index162_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_39);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 162, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_164s = "\47\uffff";
    static final String dfa_165s = "\1\4\42\uffff\1\0\3\uffff";
    static final String dfa_166s = "\1\u00fc\42\uffff\1\0\3\uffff";
    static final String dfa_167s = "\1\uffff\1\1\44\uffff\1\2";
    static final String dfa_168s = "\43\uffff\1\0\3\uffff}>";
    static final String[] dfa_169s = {
            "\3\1\1\uffff\4\1\20\uffff\2\1\10\uffff\1\43\101\uffff\1\1\7\uffff\1\1\3\uffff\1\46\15\uffff\2\1\7\uffff\2\1\1\uffff\23\1\132\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final char[] dfa_165 = DFA.unpackEncodedStringToUnsignedChars(dfa_165s);
    static final char[] dfa_166 = DFA.unpackEncodedStringToUnsignedChars(dfa_166s);
    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final short[] dfa_168 = DFA.unpackEncodedString(dfa_168s);
    static final short[][] dfa_169 = unpackEncodedStringArray(dfa_169s);

    class DFA173 extends DFA {

        public DFA173(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 173;
            this.eot = dfa_164;
            this.eof = dfa_164;
            this.min = dfa_165;
            this.max = dfa_166;
            this.accept = dfa_167;
            this.special = dfa_168;
            this.transition = dfa_169;
        }
        public String getDescription() {
            return "7261:3: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA173_35 = input.LA(1);

                         
                        int index173_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred292_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index173_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 173, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_170s = "\1\uffff\3\4\1\uffff\1\4\3\uffff\3\4";
    static final String dfa_171s = "\1\4\3\24\1\uffff\1\24\1\uffff\2\4\3\24";
    static final String dfa_172s = "\1\u00fc\3\154\1\uffff\1\103\1\uffff\2\13\3\154";
    static final String dfa_173s = "\4\uffff\1\1\1\uffff\1\2\5\uffff";
    static final String[] dfa_174s = {
            "\1\2\1\1\1\5\1\uffff\3\6\1\3\20\uffff\2\6\10\uffff\1\6\101\uffff\1\4\7\uffff\1\6\21\uffff\2\6\7\uffff\2\6\1\uffff\23\6\132\uffff\2\6",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\4\uffff\1\4\13\uffff\3\4\5\uffff\6\4",
            "",
            "\1\12\1\11\5\uffff\1\13",
            "\2\4\3\uffff\1\6\1\uffff\1\4",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7"
    };
    static final short[] dfa_170 = DFA.unpackEncodedString(dfa_170s);
    static final char[] dfa_171 = DFA.unpackEncodedStringToUnsignedChars(dfa_171s);
    static final char[] dfa_172 = DFA.unpackEncodedStringToUnsignedChars(dfa_172s);
    static final short[] dfa_173 = DFA.unpackEncodedString(dfa_173s);
    static final short[][] dfa_174 = unpackEncodedStringArray(dfa_174s);

    class DFA168 extends DFA {

        public DFA168(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 168;
            this.eot = dfa_37;
            this.eof = dfa_170;
            this.min = dfa_171;
            this.max = dfa_172;
            this.accept = dfa_173;
            this.special = dfa_123;
            this.transition = dfa_174;
        }
        public String getDescription() {
            return "7262:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )";
        }
    }
    static final String dfa_175s = "\2\uffff\2\7\5\uffff\3\7";
    static final String dfa_176s = "\1\4\1\151\2\24\4\uffff\1\4\3\24";
    static final String dfa_177s = "\4\uffff\1\3\1\4\1\1\1\2\4\uffff";
    static final String dfa_178s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_179s = {
            "\1\2\1\1\1\5\4\uffff\1\3\134\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "",
            "",
            "",
            "",
            "\1\12\1\11\5\uffff\1\13",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10"
    };
    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final char[] dfa_176 = DFA.unpackEncodedStringToUnsignedChars(dfa_176s);
    static final short[] dfa_177 = DFA.unpackEncodedString(dfa_177s);
    static final short[] dfa_178 = DFA.unpackEncodedString(dfa_178s);
    static final short[][] dfa_179 = unpackEncodedStringArray(dfa_179s);

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = dfa_37;
            this.eof = dfa_175;
            this.min = dfa_176;
            this.max = dfa_40;
            this.accept = dfa_177;
            this.special = dfa_178;
            this.transition = dfa_179;
        }
        public String getDescription() {
            return "7265:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA167_1 = input.LA(1);

                         
                        int index167_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA167_1==105||LA167_1==108) ) {s = 4;}

                        else if ( (synpred288_InternalKim()) ) {s = 6;}

                        else if ( (synpred289_InternalKim()) ) {s = 7;}

                         
                        input.seek(index167_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 167, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_180s = "\u0082\uffff";
    static final String dfa_181s = "\1\1\u0081\uffff";
    static final String dfa_182s = "\1\4\41\uffff\1\0\31\uffff\3\0\2\uffff\30\0\51\uffff";
    static final String dfa_183s = "\1\u00fc\41\uffff\1\0\31\uffff\3\0\2\uffff\30\0\51\uffff";
    static final String dfa_184s = "\1\uffff\1\2\177\uffff\1\1";
    static final String dfa_185s = "\42\uffff\1\0\31\uffff\1\1\1\2\1\3\2\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\51\uffff}>";
    static final String[] dfa_186s = {
            "\1\75\1\74\1\1\2\uffff\1\101\1\1\1\76\2\uffff\1\1\5\uffff\1\1\4\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\3\1\1\42\2\uffff\5\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\11\uffff\1\1\5\uffff\2\1\5\uffff\1\1\1\uffff\21\1\1\104\1\105\6\uffff\1\1\1\102\1\103\1\uffff\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\3\1\11\uffff\2\1\2\uffff\3\1\1\uffff\11\1\1\uffff\14\1\6\uffff\2\1\50\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_180 = DFA.unpackEncodedString(dfa_180s);
    static final short[] dfa_181 = DFA.unpackEncodedString(dfa_181s);
    static final char[] dfa_182 = DFA.unpackEncodedStringToUnsignedChars(dfa_182s);
    static final char[] dfa_183 = DFA.unpackEncodedStringToUnsignedChars(dfa_183s);
    static final short[] dfa_184 = DFA.unpackEncodedString(dfa_184s);
    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final short[][] dfa_186 = unpackEncodedStringArray(dfa_186s);

    class DFA174 extends DFA {

        public DFA174(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 174;
            this.eot = dfa_180;
            this.eof = dfa_181;
            this.min = dfa_182;
            this.max = dfa_183;
            this.accept = dfa_184;
            this.special = dfa_185;
            this.transition = dfa_186;
        }
        public String getDescription() {
            return "()+ loopback of 7534:3: ( (lv_main_0_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA174_34 = input.LA(1);

                         
                        int index174_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_34);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA174_60 = input.LA(1);

                         
                        int index174_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_60);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA174_61 = input.LA(1);

                         
                        int index174_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_61);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA174_62 = input.LA(1);

                         
                        int index174_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_62);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA174_65 = input.LA(1);

                         
                        int index174_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_65);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA174_66 = input.LA(1);

                         
                        int index174_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_66);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA174_67 = input.LA(1);

                         
                        int index174_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_67);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA174_68 = input.LA(1);

                         
                        int index174_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_68);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA174_69 = input.LA(1);

                         
                        int index174_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_69);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA174_70 = input.LA(1);

                         
                        int index174_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_70);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA174_71 = input.LA(1);

                         
                        int index174_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_71);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA174_72 = input.LA(1);

                         
                        int index174_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_72);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA174_73 = input.LA(1);

                         
                        int index174_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_73);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA174_74 = input.LA(1);

                         
                        int index174_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_74);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA174_75 = input.LA(1);

                         
                        int index174_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_75);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA174_76 = input.LA(1);

                         
                        int index174_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_76);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA174_77 = input.LA(1);

                         
                        int index174_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_77);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA174_78 = input.LA(1);

                         
                        int index174_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_78);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA174_79 = input.LA(1);

                         
                        int index174_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_79);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA174_80 = input.LA(1);

                         
                        int index174_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_80);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA174_81 = input.LA(1);

                         
                        int index174_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_81);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA174_82 = input.LA(1);

                         
                        int index174_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_82);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA174_83 = input.LA(1);

                         
                        int index174_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_83);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA174_84 = input.LA(1);

                         
                        int index174_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_84);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA174_85 = input.LA(1);

                         
                        int index174_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_85);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA174_86 = input.LA(1);

                         
                        int index174_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_86);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA174_87 = input.LA(1);

                         
                        int index174_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_87);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA174_88 = input.LA(1);

                         
                        int index174_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalKim()) ) {s = 129;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index174_88);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 174, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_187s = "\1\34\u0081\uffff";
    static final String dfa_188s = "\1\4\13\uffff\165\0\1\uffff";
    static final String dfa_189s = "\1\u00fc\13\uffff\165\0\1\uffff";
    static final String dfa_190s = "\1\uffff\1\1\177\uffff\1\2";
    static final String dfa_191s = "\14\uffffuffff}>";
    static final String[] dfa_192s = {
            "\1\75\1\74\1\100\2\uffff\1\101\1\72\1\76\2\uffff\1\165\5\uffff\1\33\4\uffff\1\176\1\uffff\1\17\2\uffff\1\132\1\131\1\167\1\170\1\uffff\1\43\1\175\1\20\1\42\2\uffff\1\35\1\32\1\14\1\15\1\16\2\uffff\1\41\2\uffff\1\40\1\37\1\uffff\1\21\1\22\1\23\5\uffff\1\24\1\25\1\26\1\27\1\30\1\31\1\uffff\1\1\6\uffff\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\11\uffff\1\1\5\uffff\1\77\1\36\5\uffff\1\133\1\uffff\1\44\1\66\1\67\1\73\1\62\1\63\1\64\1\65\11\1\1\104\1\105\6\uffff\1\u0080\1\102\1\103\1\uffff\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\173\1\171\1\172\11\uffff\1\134\1\135\2\uffff\1\136\1\137\1\140\1\uffff\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\uffff\1\174\1\152\1\153\1\154\1\155\1\156\1\157\1\160\1\161\1\162\1\163\1\164\6\uffff\1\166\1\177\50\uffff\1\70\1\71",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_187 = DFA.unpackEncodedString(dfa_187s);
    static final char[] dfa_188 = DFA.unpackEncodedStringToUnsignedChars(dfa_188s);
    static final char[] dfa_189 = DFA.unpackEncodedStringToUnsignedChars(dfa_189s);
    static final short[] dfa_190 = DFA.unpackEncodedString(dfa_190s);
    static final short[] dfa_191 = DFA.unpackEncodedString(dfa_191s);
    static final short[][] dfa_192 = unpackEncodedStringArray(dfa_192s);

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_180;
            this.eof = dfa_187;
            this.min = dfa_188;
            this.max = dfa_189;
            this.accept = dfa_190;
            this.special = dfa_191;
            this.transition = dfa_192;
        }
        public String getDescription() {
            return "7553:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA179_12 = input.LA(1);

                         
                        int index179_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA179_13 = input.LA(1);

                         
                        int index179_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_13);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA179_14 = input.LA(1);

                         
                        int index179_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA179_15 = input.LA(1);

                         
                        int index179_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_15);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA179_16 = input.LA(1);

                         
                        int index179_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA179_17 = input.LA(1);

                         
                        int index179_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_17);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA179_18 = input.LA(1);

                         
                        int index179_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_18);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA179_19 = input.LA(1);

                         
                        int index179_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_19);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA179_20 = input.LA(1);

                         
                        int index179_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_20);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA179_21 = input.LA(1);

                         
                        int index179_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_21);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA179_22 = input.LA(1);

                         
                        int index179_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_22);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA179_23 = input.LA(1);

                         
                        int index179_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_23);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA179_24 = input.LA(1);

                         
                        int index179_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_24);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA179_25 = input.LA(1);

                         
                        int index179_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_25);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA179_26 = input.LA(1);

                         
                        int index179_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_26);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA179_27 = input.LA(1);

                         
                        int index179_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_27);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA179_28 = input.LA(1);

                         
                        int index179_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_28);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA179_29 = input.LA(1);

                         
                        int index179_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_29);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA179_30 = input.LA(1);

                         
                        int index179_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_30);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA179_31 = input.LA(1);

                         
                        int index179_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_31);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA179_32 = input.LA(1);

                         
                        int index179_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_32);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA179_33 = input.LA(1);

                         
                        int index179_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_33);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA179_34 = input.LA(1);

                         
                        int index179_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_34);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA179_35 = input.LA(1);

                         
                        int index179_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_35);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA179_36 = input.LA(1);

                         
                        int index179_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_36);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA179_37 = input.LA(1);

                         
                        int index179_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_37);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA179_38 = input.LA(1);

                         
                        int index179_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_38);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA179_39 = input.LA(1);

                         
                        int index179_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_39);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA179_40 = input.LA(1);

                         
                        int index179_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_40);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA179_41 = input.LA(1);

                         
                        int index179_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_41);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA179_42 = input.LA(1);

                         
                        int index179_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_42);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA179_43 = input.LA(1);

                         
                        int index179_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_43);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA179_44 = input.LA(1);

                         
                        int index179_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_44);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA179_45 = input.LA(1);

                         
                        int index179_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_45);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA179_46 = input.LA(1);

                         
                        int index179_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_46);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA179_47 = input.LA(1);

                         
                        int index179_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_47);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA179_48 = input.LA(1);

                         
                        int index179_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_48);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA179_49 = input.LA(1);

                         
                        int index179_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_49);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA179_50 = input.LA(1);

                         
                        int index179_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_50);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA179_51 = input.LA(1);

                         
                        int index179_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_51);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA179_52 = input.LA(1);

                         
                        int index179_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_52);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA179_53 = input.LA(1);

                         
                        int index179_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_53);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA179_54 = input.LA(1);

                         
                        int index179_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_54);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA179_55 = input.LA(1);

                         
                        int index179_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_55);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA179_56 = input.LA(1);

                         
                        int index179_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_56);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA179_57 = input.LA(1);

                         
                        int index179_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_57);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA179_58 = input.LA(1);

                         
                        int index179_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_58);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA179_59 = input.LA(1);

                         
                        int index179_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_59);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA179_60 = input.LA(1);

                         
                        int index179_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_60);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA179_61 = input.LA(1);

                         
                        int index179_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_61);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA179_62 = input.LA(1);

                         
                        int index179_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_62);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA179_63 = input.LA(1);

                         
                        int index179_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_63);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA179_64 = input.LA(1);

                         
                        int index179_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_64);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA179_65 = input.LA(1);

                         
                        int index179_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_65);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA179_66 = input.LA(1);

                         
                        int index179_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_66);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA179_67 = input.LA(1);

                         
                        int index179_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_67);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA179_68 = input.LA(1);

                         
                        int index179_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_68);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA179_69 = input.LA(1);

                         
                        int index179_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_69);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA179_70 = input.LA(1);

                         
                        int index179_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_70);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA179_71 = input.LA(1);

                         
                        int index179_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_71);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA179_72 = input.LA(1);

                         
                        int index179_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_72);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA179_73 = input.LA(1);

                         
                        int index179_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_73);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA179_74 = input.LA(1);

                         
                        int index179_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_74);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA179_75 = input.LA(1);

                         
                        int index179_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_75);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA179_76 = input.LA(1);

                         
                        int index179_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_76);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA179_77 = input.LA(1);

                         
                        int index179_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_77);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA179_78 = input.LA(1);

                         
                        int index179_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_78);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA179_79 = input.LA(1);

                         
                        int index179_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_79);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA179_80 = input.LA(1);

                         
                        int index179_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_80);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA179_81 = input.LA(1);

                         
                        int index179_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_81);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA179_82 = input.LA(1);

                         
                        int index179_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_82);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA179_83 = input.LA(1);

                         
                        int index179_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_83);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA179_84 = input.LA(1);

                         
                        int index179_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_84);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA179_85 = input.LA(1);

                         
                        int index179_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_85);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA179_86 = input.LA(1);

                         
                        int index179_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_86);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA179_87 = input.LA(1);

                         
                        int index179_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_87);
                        if ( s>=0 ) return s;
                        break;
                    case 76 : 
                        int LA179_88 = input.LA(1);

                         
                        int index179_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_88);
                        if ( s>=0 ) return s;
                        break;
                    case 77 : 
                        int LA179_89 = input.LA(1);

                         
                        int index179_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_89);
                        if ( s>=0 ) return s;
                        break;
                    case 78 : 
                        int LA179_90 = input.LA(1);

                         
                        int index179_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_90);
                        if ( s>=0 ) return s;
                        break;
                    case 79 : 
                        int LA179_91 = input.LA(1);

                         
                        int index179_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_91);
                        if ( s>=0 ) return s;
                        break;
                    case 80 : 
                        int LA179_92 = input.LA(1);

                         
                        int index179_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_92);
                        if ( s>=0 ) return s;
                        break;
                    case 81 : 
                        int LA179_93 = input.LA(1);

                         
                        int index179_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_93);
                        if ( s>=0 ) return s;
                        break;
                    case 82 : 
                        int LA179_94 = input.LA(1);

                         
                        int index179_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_94);
                        if ( s>=0 ) return s;
                        break;
                    case 83 : 
                        int LA179_95 = input.LA(1);

                         
                        int index179_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_95);
                        if ( s>=0 ) return s;
                        break;
                    case 84 : 
                        int LA179_96 = input.LA(1);

                         
                        int index179_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_96);
                        if ( s>=0 ) return s;
                        break;
                    case 85 : 
                        int LA179_97 = input.LA(1);

                         
                        int index179_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_97);
                        if ( s>=0 ) return s;
                        break;
                    case 86 : 
                        int LA179_98 = input.LA(1);

                         
                        int index179_98 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_98);
                        if ( s>=0 ) return s;
                        break;
                    case 87 : 
                        int LA179_99 = input.LA(1);

                         
                        int index179_99 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_99);
                        if ( s>=0 ) return s;
                        break;
                    case 88 : 
                        int LA179_100 = input.LA(1);

                         
                        int index179_100 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_100);
                        if ( s>=0 ) return s;
                        break;
                    case 89 : 
                        int LA179_101 = input.LA(1);

                         
                        int index179_101 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_101);
                        if ( s>=0 ) return s;
                        break;
                    case 90 : 
                        int LA179_102 = input.LA(1);

                         
                        int index179_102 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_102);
                        if ( s>=0 ) return s;
                        break;
                    case 91 : 
                        int LA179_103 = input.LA(1);

                         
                        int index179_103 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_103);
                        if ( s>=0 ) return s;
                        break;
                    case 92 : 
                        int LA179_104 = input.LA(1);

                         
                        int index179_104 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_104);
                        if ( s>=0 ) return s;
                        break;
                    case 93 : 
                        int LA179_105 = input.LA(1);

                         
                        int index179_105 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_105);
                        if ( s>=0 ) return s;
                        break;
                    case 94 : 
                        int LA179_106 = input.LA(1);

                         
                        int index179_106 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_106);
                        if ( s>=0 ) return s;
                        break;
                    case 95 : 
                        int LA179_107 = input.LA(1);

                         
                        int index179_107 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_107);
                        if ( s>=0 ) return s;
                        break;
                    case 96 : 
                        int LA179_108 = input.LA(1);

                         
                        int index179_108 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_108);
                        if ( s>=0 ) return s;
                        break;
                    case 97 : 
                        int LA179_109 = input.LA(1);

                         
                        int index179_109 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_109);
                        if ( s>=0 ) return s;
                        break;
                    case 98 : 
                        int LA179_110 = input.LA(1);

                         
                        int index179_110 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_110);
                        if ( s>=0 ) return s;
                        break;
                    case 99 : 
                        int LA179_111 = input.LA(1);

                         
                        int index179_111 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_111);
                        if ( s>=0 ) return s;
                        break;
                    case 100 : 
                        int LA179_112 = input.LA(1);

                         
                        int index179_112 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_112);
                        if ( s>=0 ) return s;
                        break;
                    case 101 : 
                        int LA179_113 = input.LA(1);

                         
                        int index179_113 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_113);
                        if ( s>=0 ) return s;
                        break;
                    case 102 : 
                        int LA179_114 = input.LA(1);

                         
                        int index179_114 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_114);
                        if ( s>=0 ) return s;
                        break;
                    case 103 : 
                        int LA179_115 = input.LA(1);

                         
                        int index179_115 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_115);
                        if ( s>=0 ) return s;
                        break;
                    case 104 : 
                        int LA179_116 = input.LA(1);

                         
                        int index179_116 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_116);
                        if ( s>=0 ) return s;
                        break;
                    case 105 : 
                        int LA179_117 = input.LA(1);

                         
                        int index179_117 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_117);
                        if ( s>=0 ) return s;
                        break;
                    case 106 : 
                        int LA179_118 = input.LA(1);

                         
                        int index179_118 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_118);
                        if ( s>=0 ) return s;
                        break;
                    case 107 : 
                        int LA179_119 = input.LA(1);

                         
                        int index179_119 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_119);
                        if ( s>=0 ) return s;
                        break;
                    case 108 : 
                        int LA179_120 = input.LA(1);

                         
                        int index179_120 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_120);
                        if ( s>=0 ) return s;
                        break;
                    case 109 : 
                        int LA179_121 = input.LA(1);

                         
                        int index179_121 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_121);
                        if ( s>=0 ) return s;
                        break;
                    case 110 : 
                        int LA179_122 = input.LA(1);

                         
                        int index179_122 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_122);
                        if ( s>=0 ) return s;
                        break;
                    case 111 : 
                        int LA179_123 = input.LA(1);

                         
                        int index179_123 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_123);
                        if ( s>=0 ) return s;
                        break;
                    case 112 : 
                        int LA179_124 = input.LA(1);

                         
                        int index179_124 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_124);
                        if ( s>=0 ) return s;
                        break;
                    case 113 : 
                        int LA179_125 = input.LA(1);

                         
                        int index179_125 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_125);
                        if ( s>=0 ) return s;
                        break;
                    case 114 : 
                        int LA179_126 = input.LA(1);

                         
                        int index179_126 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_126);
                        if ( s>=0 ) return s;
                        break;
                    case 115 : 
                        int LA179_127 = input.LA(1);

                         
                        int index179_127 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_127);
                        if ( s>=0 ) return s;
                        break;
                    case 116 : 
                        int LA179_128 = input.LA(1);

                         
                        int index179_128 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 129;}

                         
                        input.seek(index179_128);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 179, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_193s = "\15\uffff";
    static final String dfa_194s = "\1\1\14\uffff";
    static final String dfa_195s = "\1\4\14\uffff";
    static final String dfa_196s = "\1\u00fc\14\uffff";
    static final String dfa_197s = "\1\uffff\1\14\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13";
    static final String dfa_198s = "\1\0\14\uffff}>";
    static final String[] dfa_199s = {
            "\3\1\2\uffff\3\1\2\uffff\1\1\5\uffff\1\1\4\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\4\1\2\uffff\5\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\3\6\uffff\15\1\11\uffff\1\4\5\uffff\2\1\5\uffff\1\1\1\uffff\10\1\1\2\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\2\1\6\uffff\3\1\1\uffff\26\1\11\uffff\2\1\2\uffff\3\1\1\uffff\11\1\1\uffff\14\1\6\uffff\2\1\50\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_193 = DFA.unpackEncodedString(dfa_193s);
    static final short[] dfa_194 = DFA.unpackEncodedString(dfa_194s);
    static final char[] dfa_195 = DFA.unpackEncodedStringToUnsignedChars(dfa_195s);
    static final char[] dfa_196 = DFA.unpackEncodedStringToUnsignedChars(dfa_196s);
    static final short[] dfa_197 = DFA.unpackEncodedString(dfa_197s);
    static final short[] dfa_198 = DFA.unpackEncodedString(dfa_198s);
    static final short[][] dfa_199 = unpackEncodedStringArray(dfa_199s);

    class DFA178 extends DFA {

        public DFA178(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 178;
            this.eot = dfa_193;
            this.eof = dfa_194;
            this.min = dfa_195;
            this.max = dfa_196;
            this.accept = dfa_197;
            this.special = dfa_198;
            this.transition = dfa_199;
        }
        public String getDescription() {
            return "()* loopback of 7559:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA178_0 = input.LA(1);

                         
                        int index178_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA178_0==EOF||(LA178_0>=RULE_UPPERCASE_ID && LA178_0<=RULE_STRING)||(LA178_0>=RULE_CAMELCASE_ID && LA178_0<=RULE_LOWERCASE_DASHID)||LA178_0==RULE_BACKCASE_ID||LA178_0==20||LA178_0==25||LA178_0==27||(LA178_0>=30 && LA178_0<=33)||(LA178_0>=35 && LA178_0<=38)||(LA178_0>=41 && LA178_0<=45)||LA178_0==48||(LA178_0>=51 && LA178_0<=52)||(LA178_0>=54 && LA178_0<=56)||(LA178_0>=62 && LA178_0<=67)||(LA178_0>=76 && LA178_0<=88)||(LA178_0>=104 && LA178_0<=105)||LA178_0==111||(LA178_0>=113 && LA178_0<=120)||(LA178_0>=130 && LA178_0<=131)||(LA178_0>=138 && LA178_0<=140)||(LA178_0>=142 && LA178_0<=163)||(LA178_0>=173 && LA178_0<=174)||(LA178_0>=177 && LA178_0<=179)||(LA178_0>=181 && LA178_0<=189)||(LA178_0>=191 && LA178_0<=202)||(LA178_0>=209 && LA178_0<=210)||(LA178_0>=251 && LA178_0<=252)) ) {s = 1;}

                        else if ( LA178_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA178_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA178_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA178_0 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA178_0 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA178_0 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA178_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA178_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA178_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                        else if ( LA178_0 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {s = 11;}

                        else if ( LA178_0 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {s = 12;}

                         
                        input.seek(index178_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 178, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_200s = "\u0089\uffff";
    static final String dfa_201s = "\1\1\u0088\uffff";
    static final String dfa_202s = "\1\4\26\uffff\1\0\31\uffff\3\0\2\uffff\30\0\73\uffff";
    static final String dfa_203s = "\1\u00fc\26\uffff\1\0\31\uffff\3\0\2\uffff\30\0\73\uffff";
    static final String dfa_204s = "\1\uffff\1\2\u0086\uffff\1\1";
    static final String dfa_205s = "\27\uffff\1\0\31\uffff\1\1\1\2\1\3\2\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\73\uffff}>";
    static final String[] dfa_206s = {
            "\1\62\1\61\1\1\2\uffff\1\66\1\1\1\63\2\uffff\1\1\5\uffff\1\1\4\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\3\1\1\27\2\uffff\5\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\4\uffff\2\1\2\uffff\4\1\1\uffff\4\1\5\uffff\1\1\1\uffff\21\1\1\71\1\72\6\uffff\1\1\1\67\1\70\1\uffff\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\3\1\11\uffff\2\1\2\uffff\3\1\1\uffff\11\1\1\uffff\14\1\6\uffff\2\1\50\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_200 = DFA.unpackEncodedString(dfa_200s);
    static final short[] dfa_201 = DFA.unpackEncodedString(dfa_201s);
    static final char[] dfa_202 = DFA.unpackEncodedStringToUnsignedChars(dfa_202s);
    static final char[] dfa_203 = DFA.unpackEncodedStringToUnsignedChars(dfa_203s);
    static final short[] dfa_204 = DFA.unpackEncodedString(dfa_204s);
    static final short[] dfa_205 = DFA.unpackEncodedString(dfa_205s);
    static final short[][] dfa_206 = unpackEncodedStringArray(dfa_206s);

    class DFA214 extends DFA {

        public DFA214(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 214;
            this.eot = dfa_200;
            this.eof = dfa_201;
            this.min = dfa_202;
            this.max = dfa_203;
            this.accept = dfa_204;
            this.special = dfa_205;
            this.transition = dfa_206;
        }
        public String getDescription() {
            return "()+ loopback of 10229:3: ( (lv_main_1_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA214_23 = input.LA(1);

                         
                        int index214_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_23);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA214_49 = input.LA(1);

                         
                        int index214_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_49);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA214_50 = input.LA(1);

                         
                        int index214_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_50);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA214_51 = input.LA(1);

                         
                        int index214_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_51);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA214_54 = input.LA(1);

                         
                        int index214_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_54);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA214_55 = input.LA(1);

                         
                        int index214_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_55);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA214_56 = input.LA(1);

                         
                        int index214_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_56);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA214_57 = input.LA(1);

                         
                        int index214_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_57);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA214_58 = input.LA(1);

                         
                        int index214_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_58);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA214_59 = input.LA(1);

                         
                        int index214_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_59);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA214_60 = input.LA(1);

                         
                        int index214_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_60);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA214_61 = input.LA(1);

                         
                        int index214_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_61);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA214_62 = input.LA(1);

                         
                        int index214_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_62);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA214_63 = input.LA(1);

                         
                        int index214_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_63);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA214_64 = input.LA(1);

                         
                        int index214_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_64);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA214_65 = input.LA(1);

                         
                        int index214_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_65);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA214_66 = input.LA(1);

                         
                        int index214_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_66);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA214_67 = input.LA(1);

                         
                        int index214_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_67);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA214_68 = input.LA(1);

                         
                        int index214_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_68);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA214_69 = input.LA(1);

                         
                        int index214_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_69);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA214_70 = input.LA(1);

                         
                        int index214_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_70);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA214_71 = input.LA(1);

                         
                        int index214_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_71);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA214_72 = input.LA(1);

                         
                        int index214_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_72);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA214_73 = input.LA(1);

                         
                        int index214_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_73);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA214_74 = input.LA(1);

                         
                        int index214_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_74);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA214_75 = input.LA(1);

                         
                        int index214_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_75);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA214_76 = input.LA(1);

                         
                        int index214_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_76);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA214_77 = input.LA(1);

                         
                        int index214_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_InternalKim()) ) {s = 136;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index214_77);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 214, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_207s = "\1\4\3\151\1\4\1\5\3\151\2\uffff";
    static final String dfa_208s = "\1\13\3\154\1\13\1\16\3\154\2\uffff";
    static final String dfa_209s = "\11\uffff\1\1\1\2";
    static final String[] dfa_210s = {
            "\1\2\1\1\5\uffff\1\3",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\7\1\6\5\uffff\1\10",
            "\1\12\3\uffff\1\11\1\uffff\1\12\2\uffff\1\12",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "",
            ""
    };
    static final char[] dfa_207 = DFA.unpackEncodedStringToUnsignedChars(dfa_207s);
    static final char[] dfa_208 = DFA.unpackEncodedStringToUnsignedChars(dfa_208s);
    static final short[] dfa_209 = DFA.unpackEncodedString(dfa_209s);
    static final short[][] dfa_210 = unpackEncodedStringArray(dfa_210s);

    class DFA219 extends DFA {

        public DFA219(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 219;
            this.eot = dfa_30;
            this.eof = dfa_30;
            this.min = dfa_207;
            this.max = dfa_208;
            this.accept = dfa_209;
            this.special = dfa_81;
            this.transition = dfa_210;
        }
        public String getDescription() {
            return "10390:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )";
        }
    }
    static final String dfa_211s = "\11\uffff\1\2\1\1";
    static final short[] dfa_211 = DFA.unpackEncodedString(dfa_211s);

    class DFA220 extends DFA {

        public DFA220(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 220;
            this.eot = dfa_30;
            this.eof = dfa_30;
            this.min = dfa_207;
            this.max = dfa_208;
            this.accept = dfa_211;
            this.special = dfa_81;
            this.transition = dfa_210;
        }
        public String getDescription() {
            return "10453:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )";
        }
    }
    static final String dfa_212s = "\1\137\12\uffff";
    static final String dfa_213s = "\1\u00f9\12\uffff";
    static final String dfa_214s = "\1\uffff\1\5\1\1\1\2\1\3\6\4";
    static final String dfa_215s = "\1\0\12\uffff}>";
    static final String[] dfa_216s = {
            "\1\1\100\uffff\1\1\3\uffff\1\5\1\6\1\7\2\1\1\2\1\3\1\4\1\12\21\uffff\1\1\24\uffff\3\1\4\uffff\36\1\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_212 = DFA.unpackEncodedStringToUnsignedChars(dfa_212s);
    static final char[] dfa_213 = DFA.unpackEncodedStringToUnsignedChars(dfa_213s);
    static final short[] dfa_214 = DFA.unpackEncodedString(dfa_214s);
    static final short[] dfa_215 = DFA.unpackEncodedString(dfa_215s);
    static final short[][] dfa_216 = unpackEncodedStringArray(dfa_216s);

    class DFA226 extends DFA {

        public DFA226(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 226;
            this.eot = dfa_30;
            this.eof = dfa_30;
            this.min = dfa_212;
            this.max = dfa_213;
            this.accept = dfa_214;
            this.special = dfa_215;
            this.transition = dfa_216;
        }
        public String getDescription() {
            return "()* loopback of 10544:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA226_0 = input.LA(1);

                         
                        int index226_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA226_0==95||LA226_0==160||(LA226_0>=167 && LA226_0<=168)||LA226_0==190||(LA226_0>=211 && LA226_0<=213)||(LA226_0>=218 && LA226_0<=247)) ) {s = 1;}

                        else if ( LA226_0 == 169 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA226_0 == 170 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA226_0 == 171 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA226_0 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA226_0 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 6;}

                        else if ( LA226_0 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( LA226_0 == 248 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 8;}

                        else if ( LA226_0 == 249 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 9;}

                        else if ( LA226_0 == 172 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 10;}

                         
                        input.seek(index226_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 226, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_217s = "\107\uffff";
    static final String dfa_218s = "\1\1\106\uffff";
    static final String dfa_219s = "\1\4\17\uffff\1\4\12\uffff\1\4\53\uffff";
    static final String dfa_220s = "\1\u00d1\17\uffff\1\u00cd\12\uffff\1\u00cd\53\uffff";
    static final String dfa_221s = "\1\uffff\1\32\1\1\2\2\2\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\uffff\1\16\3\17\1\20\1\21\1\22\1\23\1\24\1\26\1\uffff\1\30\5\31\2\25\1\15\41\31\1\27";
    static final String dfa_222s = "\1\1\17\uffff\1\0\12\uffff\1\2\53\uffff}>";
    static final String[] dfa_223s = {
            "\1\36\1\35\1\2\4\uffff\1\37\2\uffff\1\40\5\uffff\1\1\24\uffff\1\1\1\34\111\uffff\1\1\70\uffff\1\3\1\4\2\uffff\1\5\1\6\1\7\1\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\2\uffff\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\6\uffff\1\41",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\56\1\55\1\51\2\uffff\1\54\1\50\1\57\32\uffff\1\105\72\uffff\1\42\15\uffff\1\43\22\uffff\1\60\1\61\7\uffff\1\52\1\53\1\uffff\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\35\uffff\1\44\14\uffff\1\45\1\46\1\47",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\56\1\55\1\51\2\uffff\1\54\1\50\1\57\32\uffff\1\105\133\uffff\1\60\1\61\7\uffff\1\52\1\53\1\uffff\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\23\uffff\1\106\26\uffff\1\45\1\46\1\47",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_217 = DFA.unpackEncodedString(dfa_217s);
    static final short[] dfa_218 = DFA.unpackEncodedString(dfa_218s);
    static final char[] dfa_219 = DFA.unpackEncodedStringToUnsignedChars(dfa_219s);
    static final char[] dfa_220 = DFA.unpackEncodedStringToUnsignedChars(dfa_220s);
    static final short[] dfa_221 = DFA.unpackEncodedString(dfa_221s);
    static final short[] dfa_222 = DFA.unpackEncodedString(dfa_222s);
    static final short[][] dfa_223 = unpackEncodedStringArray(dfa_223s);

    class DFA263 extends DFA {

        public DFA263(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 263;
            this.eot = dfa_217;
            this.eof = dfa_218;
            this.min = dfa_219;
            this.max = dfa_220;
            this.accept = dfa_221;
            this.special = dfa_222;
            this.transition = dfa_223;
        }
        public String getDescription() {
            return "()* loopback of 11002:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMetadata ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA263_16 = input.LA(1);

                         
                        int index263_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA263_16 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 34;}

                        else if ( LA263_16 == 111 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 35;}

                        else if ( LA263_16 == 190 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {s = 36;}

                        else if ( LA263_16 == 203 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 37;}

                        else if ( LA263_16 == 204 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 38;}

                        else if ( LA263_16 == 205 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 39;}

                        else if ( LA263_16 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 40;}

                        else if ( LA263_16 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 41;}

                        else if ( LA263_16 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 42;}

                        else if ( LA263_16 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 43;}

                        else if ( LA263_16 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 44;}

                        else if ( LA263_16 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 45;}

                        else if ( LA263_16 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 46;}

                        else if ( LA263_16 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 47;}

                        else if ( LA263_16 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 48;}

                        else if ( LA263_16 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 49;}

                        else if ( LA263_16 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 50;}

                        else if ( LA263_16 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 51;}

                        else if ( LA263_16 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 52;}

                        else if ( LA263_16 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 53;}

                        else if ( LA263_16 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 54;}

                        else if ( LA263_16 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 55;}

                        else if ( LA263_16 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 56;}

                        else if ( LA263_16 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 57;}

                        else if ( LA263_16 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 58;}

                        else if ( LA263_16 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 59;}

                        else if ( LA263_16 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 60;}

                        else if ( LA263_16 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 61;}

                        else if ( LA263_16 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 62;}

                        else if ( LA263_16 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 63;}

                        else if ( LA263_16 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 64;}

                        else if ( LA263_16 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 65;}

                        else if ( LA263_16 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 66;}

                        else if ( LA263_16 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 67;}

                        else if ( LA263_16 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 68;}

                        else if ( LA263_16 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 69;}

                         
                        input.seek(index263_16);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA263_0 = input.LA(1);

                         
                        int index263_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA263_0==EOF||LA263_0==20||LA263_0==41||LA263_0==116) ) {s = 1;}

                        else if ( LA263_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA263_0 == 173 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA263_0 == 174 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA263_0 == 177 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA263_0 == 178 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA263_0 == 179 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA263_0 == 181 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {s = 8;}

                        else if ( LA263_0 == 182 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {s = 9;}

                        else if ( LA263_0 == 183 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {s = 10;}

                        else if ( LA263_0 == 184 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {s = 11;}

                        else if ( LA263_0 == 185 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {s = 12;}

                        else if ( LA263_0 == 186 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {s = 13;}

                        else if ( LA263_0 == 187 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {s = 14;}

                        else if ( LA263_0 == 188 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {s = 15;}

                        else if ( (LA263_0==189) ) {s = 16;}

                        else if ( LA263_0 == 192 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {s = 17;}

                        else if ( LA263_0 == 193 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 18;}

                        else if ( LA263_0 == 194 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 19;}

                        else if ( LA263_0 == 195 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 20;}

                        else if ( LA263_0 == 196 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {s = 21;}

                        else if ( LA263_0 == 197 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {s = 22;}

                        else if ( LA263_0 == 198 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {s = 23;}

                        else if ( LA263_0 == 199 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {s = 24;}

                        else if ( LA263_0 == 200 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {s = 25;}

                        else if ( LA263_0 == 201 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 26;}

                        else if ( (LA263_0==202) ) {s = 27;}

                        else if ( LA263_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 28;}

                        else if ( LA263_0 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 29;}

                        else if ( LA263_0 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 30;}

                        else if ( LA263_0 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 31;}

                        else if ( LA263_0 == RULE_BACKCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 32;}

                        else if ( LA263_0 == 209 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 33;}

                         
                        input.seek(index263_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA263_27 = input.LA(1);

                         
                        int index263_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA263_27 == 180 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 70;}

                        else if ( LA263_27 == 203 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 37;}

                        else if ( LA263_27 == 204 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 38;}

                        else if ( LA263_27 == 205 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 39;}

                        else if ( LA263_27 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 40;}

                        else if ( LA263_27 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 41;}

                        else if ( LA263_27 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 42;}

                        else if ( LA263_27 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 43;}

                        else if ( LA263_27 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 44;}

                        else if ( LA263_27 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 45;}

                        else if ( LA263_27 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 46;}

                        else if ( LA263_27 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 47;}

                        else if ( LA263_27 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 48;}

                        else if ( LA263_27 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 49;}

                        else if ( LA263_27 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 50;}

                        else if ( LA263_27 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 51;}

                        else if ( LA263_27 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 52;}

                        else if ( LA263_27 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 53;}

                        else if ( LA263_27 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 54;}

                        else if ( LA263_27 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 55;}

                        else if ( LA263_27 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 56;}

                        else if ( LA263_27 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 57;}

                        else if ( LA263_27 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 58;}

                        else if ( LA263_27 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 59;}

                        else if ( LA263_27 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 60;}

                        else if ( LA263_27 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 61;}

                        else if ( LA263_27 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 62;}

                        else if ( LA263_27 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 63;}

                        else if ( LA263_27 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 64;}

                        else if ( LA263_27 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 65;}

                        else if ( LA263_27 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 66;}

                        else if ( LA263_27 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 67;}

                        else if ( LA263_27 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 68;}

                        else if ( LA263_27 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 69;}

                         
                        input.seek(index263_27);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 263, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_224s = "\1\1\11\uffff";
    static final String dfa_225s = "\1\4\1\uffff\7\0\1\uffff";
    static final String dfa_226s = "\1\u00d1\1\uffff\7\0\1\uffff";
    static final String dfa_227s = "\1\uffff\1\2\7\uffff\1\1";
    static final String dfa_228s = "\2\uffff\1\4\1\2\1\0\1\1\1\5\1\6\1\3\1\uffff}>";
    static final String[] dfa_229s = {
            "\1\5\1\4\1\1\4\uffff\1\6\2\uffff\1\7\5\uffff\1\1\24\uffff\2\1\111\uffff\1\1\70\uffff\2\1\2\uffff\3\1\1\uffff\10\1\1\2\2\uffff\12\1\1\3\6\uffff\1\10",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_224 = DFA.unpackEncodedString(dfa_224s);
    static final char[] dfa_225 = DFA.unpackEncodedStringToUnsignedChars(dfa_225s);
    static final char[] dfa_226 = DFA.unpackEncodedStringToUnsignedChars(dfa_226s);
    static final short[] dfa_227 = DFA.unpackEncodedString(dfa_227s);
    static final short[] dfa_228 = DFA.unpackEncodedString(dfa_228s);
    static final short[][] dfa_229 = unpackEncodedStringArray(dfa_229s);

    class DFA262 extends DFA {

        public DFA262(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 262;
            this.eot = dfa_96;
            this.eof = dfa_224;
            this.min = dfa_225;
            this.max = dfa_226;
            this.accept = dfa_227;
            this.special = dfa_228;
            this.transition = dfa_229;
        }
        public String getDescription() {
            return "()+ loopback of 12599:9: ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA262_4 = input.LA(1);

                         
                        int index262_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred473_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA262_5 = input.LA(1);

                         
                        int index262_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred473_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA262_3 = input.LA(1);

                         
                        int index262_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred473_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA262_8 = input.LA(1);

                         
                        int index262_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred473_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA262_2 = input.LA(1);

                         
                        int index262_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred473_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_2);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA262_6 = input.LA(1);

                         
                        int index262_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred473_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA262_7 = input.LA(1);

                         
                        int index262_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred473_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index262_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 262, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_230s = "\1\4\4\uffff\34\0\1\uffff";
    static final String dfa_231s = "\1\u00cd\4\uffff\34\0\1\uffff";
    static final String dfa_232s = "\1\uffff\1\1\37\uffff\1\2";
    static final String dfa_233s = "\5\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\uffff}>";
    static final String[] dfa_234s = {
            "\1\11\1\10\3\uffff\1\7\1\1\1\12\32\uffff\1\40\133\uffff\1\13\1\14\7\uffff\1\5\1\6\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\52\uffff\3\1",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final char[] dfa_230 = DFA.unpackEncodedStringToUnsignedChars(dfa_230s);
    static final char[] dfa_231 = DFA.unpackEncodedStringToUnsignedChars(dfa_231s);
    static final short[] dfa_232 = DFA.unpackEncodedString(dfa_232s);
    static final short[] dfa_233 = DFA.unpackEncodedString(dfa_233s);
    static final short[][] dfa_234 = unpackEncodedStringArray(dfa_234s);

    class DFA264 extends DFA {

        public DFA264(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 264;
            this.eot = dfa_106;
            this.eof = dfa_106;
            this.min = dfa_230;
            this.max = dfa_231;
            this.accept = dfa_232;
            this.special = dfa_233;
            this.transition = dfa_234;
        }
        public String getDescription() {
            return "12651:3: ( (lv_quantifier_0_0= ruleQuantification ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA264_5 = input.LA(1);

                         
                        int index264_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA264_6 = input.LA(1);

                         
                        int index264_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA264_7 = input.LA(1);

                         
                        int index264_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA264_8 = input.LA(1);

                         
                        int index264_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA264_9 = input.LA(1);

                         
                        int index264_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA264_10 = input.LA(1);

                         
                        int index264_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA264_11 = input.LA(1);

                         
                        int index264_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA264_12 = input.LA(1);

                         
                        int index264_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_12);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA264_13 = input.LA(1);

                         
                        int index264_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_13);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA264_14 = input.LA(1);

                         
                        int index264_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_14);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA264_15 = input.LA(1);

                         
                        int index264_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_15);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA264_16 = input.LA(1);

                         
                        int index264_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_16);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA264_17 = input.LA(1);

                         
                        int index264_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_17);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA264_18 = input.LA(1);

                         
                        int index264_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_18);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA264_19 = input.LA(1);

                         
                        int index264_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_19);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA264_20 = input.LA(1);

                         
                        int index264_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_20);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA264_21 = input.LA(1);

                         
                        int index264_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_21);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA264_22 = input.LA(1);

                         
                        int index264_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_22);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA264_23 = input.LA(1);

                         
                        int index264_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_23);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA264_24 = input.LA(1);

                         
                        int index264_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_24);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA264_25 = input.LA(1);

                         
                        int index264_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_25);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA264_26 = input.LA(1);

                         
                        int index264_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_26);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA264_27 = input.LA(1);

                         
                        int index264_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_27);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA264_28 = input.LA(1);

                         
                        int index264_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_28);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA264_29 = input.LA(1);

                         
                        int index264_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_29);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA264_30 = input.LA(1);

                         
                        int index264_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_30);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA264_31 = input.LA(1);

                         
                        int index264_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_31);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA264_32 = input.LA(1);

                         
                        int index264_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred475_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index264_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 264, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_235s = "\154\uffff";
    static final String dfa_236s = "\1\2\153\uffff";
    static final String dfa_237s = "\1\4\1\0\152\uffff";
    static final String dfa_238s = "\1\u00fc\1\0\152\uffff";
    static final String dfa_239s = "\2\uffff\1\2\150\uffff\1\1";
    static final String dfa_240s = "\1\uffff\1\0\152\uffff}>";
    static final String[] dfa_241s = {
            "\3\2\1\uffff\5\2\2\uffff\1\2\5\uffff\4\2\2\uffff\3\2\10\uffff\1\1\12\uffff\2\2\23\uffff\6\2\15\uffff\3\2\3\uffff\2\2\7\uffff\1\2\4\uffff\1\2\2\uffff\1\2\3\uffff\1\2\15\uffff\2\2\7\uffff\2\2\1\uffff\23\2\3\uffff\11\2\21\uffff\1\2\24\uffff\4\2\3\uffff\40\2\1\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_235 = DFA.unpackEncodedString(dfa_235s);
    static final short[] dfa_236 = DFA.unpackEncodedString(dfa_236s);
    static final char[] dfa_237 = DFA.unpackEncodedStringToUnsignedChars(dfa_237s);
    static final char[] dfa_238 = DFA.unpackEncodedStringToUnsignedChars(dfa_238s);
    static final short[] dfa_239 = DFA.unpackEncodedString(dfa_239s);
    static final short[] dfa_240 = DFA.unpackEncodedString(dfa_240s);
    static final short[][] dfa_241 = unpackEncodedStringArray(dfa_241s);

    class DFA284 extends DFA {

        public DFA284(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 284;
            this.eot = dfa_235;
            this.eof = dfa_236;
            this.min = dfa_237;
            this.max = dfa_238;
            this.accept = dfa_239;
            this.special = dfa_240;
            this.transition = dfa_241;
        }
        public String getDescription() {
            return "13412:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA284_1 = input.LA(1);

                         
                        int index284_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalKim()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index284_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 284, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_242s = "\3\uffff\1\12\2\uffff\1\12\5\uffff\1\12\2\uffff\1\12";
    static final String dfa_243s = "\1\6\2\12\1\31\2\uffff\1\31\3\12\2\uffff\1\31\2\12\1\31";
    static final String dfa_244s = "\1\u00fc\2\12\1\u00ff\2\uffff\1\u00ff\1\12\2\u00fc\2\uffff\1\u00ff\2\12\1\u008a";
    static final String dfa_245s = "\4\uffff\1\3\1\4\4\uffff\1\2\1\1\4\uffff";
    static final String dfa_246s = "\20\uffff}>";
    static final String[] dfa_247s = {
            "\1\4\3\uffff\1\3\21\uffff\2\5\u00dd\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\1\12\1\uffff\1\12\10\uffff\1\13\4\uffff\1\12\102\uffff\1\7\35\uffff\1\12\162\uffff\1\6\1\10\1\11",
            "",
            "",
            "\1\12\1\uffff\1\12\10\uffff\1\13\4\uffff\1\12\102\uffff\1\7\35\uffff\1\12\163\uffff\1\10\1\11",
            "\1\14",
            "\1\17\u00f0\uffff\1\15\1\16",
            "\1\17\u00f0\uffff\1\15\1\16",
            "",
            "",
            "\1\12\1\uffff\1\12\10\uffff\1\13\4\uffff\1\12\140\uffff\1\12\163\uffff\1\10\1\11",
            "\1\17",
            "\1\17",
            "\1\12\1\uffff\1\12\10\uffff\1\13\4\uffff\1\12\140\uffff\1\12"
    };
    static final short[] dfa_242 = DFA.unpackEncodedString(dfa_242s);
    static final char[] dfa_243 = DFA.unpackEncodedStringToUnsignedChars(dfa_243s);
    static final char[] dfa_244 = DFA.unpackEncodedStringToUnsignedChars(dfa_244s);
    static final short[] dfa_245 = DFA.unpackEncodedString(dfa_245s);
    static final short[] dfa_246 = DFA.unpackEncodedString(dfa_246s);
    static final short[][] dfa_247 = unpackEncodedStringArray(dfa_247s);

    class DFA287 extends DFA {

        public DFA287(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 287;
            this.eot = dfa_72;
            this.eof = dfa_242;
            this.min = dfa_243;
            this.max = dfa_244;
            this.accept = dfa_245;
            this.special = dfa_246;
            this.transition = dfa_247;
        }
        public String getDescription() {
            return "13515:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )";
        }
    }
    static final String dfa_248s = "\22\uffff";
    static final String dfa_249s = "\3\uffff\1\14\4\uffff\1\14\5\uffff\1\14\2\uffff\1\14";
    static final String dfa_250s = "\1\6\2\12\1\4\4\uffff\1\4\3\12\2\uffff\1\4\2\12\1\4";
    static final String dfa_251s = "\1\u00fc\2\12\1\u00ff\4\uffff\1\u00ff\1\12\2\u00fc\2\uffff\1\u00ff\2\12\1\u00fc";
    static final String dfa_252s = "\4\uffff\1\3\1\4\1\5\1\6\4\uffff\1\2\1\1\4\uffff";
    static final String dfa_253s = "\22\uffff}>";
    static final String[] dfa_254s = {
            "\1\4\3\uffff\1\3\1\uffff\1\6\16\uffff\1\7\2\5\u00dd\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\3\14\1\uffff\5\14\7\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\2\14\2\uffff\2\14\1\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\3\uffff\1\11\25\uffff\2\14\7\uffff\2\14\1\uffff\23\14\65\uffff\1\14\44\uffff\2\14\1\10\1\12\1\13",
            "",
            "",
            "",
            "",
            "\3\14\1\uffff\5\14\7\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\2\14\2\uffff\2\14\1\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\3\uffff\1\11\25\uffff\2\14\7\uffff\2\14\1\uffff\23\14\65\uffff\1\14\44\uffff\2\14\1\uffff\1\12\1\13",
            "\1\16",
            "\1\21\u00f0\uffff\1\17\1\20",
            "\1\21\u00f0\uffff\1\17\1\20",
            "",
            "",
            "\3\14\1\uffff\5\14\7\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\2\14\2\uffff\2\14\1\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\31\uffff\2\14\7\uffff\2\14\1\uffff\23\14\65\uffff\1\14\44\uffff\2\14\1\uffff\1\12\1\13",
            "\1\21",
            "\1\21",
            "\3\14\1\uffff\5\14\7\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\2\14\2\uffff\2\14\1\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\31\uffff\2\14\7\uffff\2\14\1\uffff\23\14\65\uffff\1\14\44\uffff\2\14"
    };

    static final short[] dfa_248 = DFA.unpackEncodedString(dfa_248s);
    static final short[] dfa_249 = DFA.unpackEncodedString(dfa_249s);
    static final char[] dfa_250 = DFA.unpackEncodedStringToUnsignedChars(dfa_250s);
    static final char[] dfa_251 = DFA.unpackEncodedStringToUnsignedChars(dfa_251s);
    static final short[] dfa_252 = DFA.unpackEncodedString(dfa_252s);
    static final short[] dfa_253 = DFA.unpackEncodedString(dfa_253s);
    static final short[][] dfa_254 = unpackEncodedStringArray(dfa_254s);

    class DFA291 extends DFA {

        public DFA291(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 291;
            this.eot = dfa_248;
            this.eof = dfa_249;
            this.min = dfa_250;
            this.max = dfa_251;
            this.accept = dfa_252;
            this.special = dfa_253;
            this.transition = dfa_254;
        }
        public String getDescription() {
            return "13756:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )";
        }
    }
    static final String dfa_255s = "\1\4\1\151\2\6\4\uffff\1\4\3\6";
    static final String dfa_256s = "\1\13\1\154\2\u00fc\4\uffff\1\13\3\u00fc";
    static final String dfa_257s = "\4\uffff\1\4\1\3\1\1\1\2\4\uffff";
    static final String[] dfa_258s = {
            "\1\2\1\1\1\4\4\uffff\1\3",
            "\1\5\2\uffff\1\5",
            "\1\6\3\uffff\1\6\1\uffff\1\6\17\uffff\2\6\10\uffff\1\6\102\uffff\1\5\2\uffff\1\10\151\uffff\1\6\44\uffff\2\6",
            "\1\6\3\uffff\1\6\1\uffff\1\6\17\uffff\2\6\10\uffff\1\6\102\uffff\1\5\2\uffff\1\10\151\uffff\1\6\44\uffff\2\6",
            "",
            "",
            "",
            "",
            "\1\12\1\11\5\uffff\1\13",
            "\1\6\3\uffff\1\6\1\uffff\1\6\17\uffff\2\6\10\uffff\1\6\102\uffff\1\5\2\uffff\1\10\151\uffff\1\6\44\uffff\2\6",
            "\1\6\3\uffff\1\6\1\uffff\1\6\17\uffff\2\6\10\uffff\1\6\102\uffff\1\5\2\uffff\1\10\151\uffff\1\6\44\uffff\2\6",
            "\1\6\3\uffff\1\6\1\uffff\1\6\17\uffff\2\6\10\uffff\1\6\102\uffff\1\5\2\uffff\1\10\151\uffff\1\6\44\uffff\2\6"
    };
    static final char[] dfa_255 = DFA.unpackEncodedStringToUnsignedChars(dfa_255s);
    static final char[] dfa_256 = DFA.unpackEncodedStringToUnsignedChars(dfa_256s);
    static final short[] dfa_257 = DFA.unpackEncodedString(dfa_257s);
    static final short[][] dfa_258 = unpackEncodedStringArray(dfa_258s);

    class DFA292 extends DFA {

        public DFA292(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 292;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_255;
            this.max = dfa_256;
            this.accept = dfa_257;
            this.special = dfa_178;
            this.transition = dfa_258;
        }
        public String getDescription() {
            return "13945:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA292_1 = input.LA(1);

                         
                        int index292_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA292_1==105||LA292_1==108) ) {s = 5;}

                        else if ( (synpred523_InternalKim()) ) {s = 6;}

                        else if ( (synpred524_InternalKim()) ) {s = 7;}

                         
                        input.seek(index292_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 292, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_259s = "\1\uffff\3\5\4\uffff\3\5";
    static final String dfa_260s = "\1\4\3\33\1\122\2\uffff\1\4\3\33";
    static final String dfa_261s = "\1\u00fc\4\u00d9\2\uffff\1\13\3\u00d9";
    static final String dfa_262s = "\5\uffff\1\2\1\1\4\uffff";
    static final String[] dfa_263s = {
            "\1\2\1\1\1\5\1\uffff\3\5\1\3\20\uffff\2\5\10\uffff\1\5\12\uffff\2\5\117\uffff\2\5\7\uffff\2\5\1\uffff\20\5\1\4\2\5\65\uffff\1\5\44\uffff\2\5",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\6\26\uffff\1\5\2\uffff\1\7\154\uffff\1\6",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\6\26\uffff\1\5\2\uffff\1\7\154\uffff\1\6",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\6\26\uffff\1\5\2\uffff\1\7\154\uffff\1\6",
            "\1\6\46\uffff\1\5\137\uffff\1\6",
            "",
            "",
            "\1\11\1\10\5\uffff\1\12",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\6\26\uffff\1\5\2\uffff\1\7\154\uffff\1\6",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\6\26\uffff\1\5\2\uffff\1\7\154\uffff\1\6",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\6\26\uffff\1\5\2\uffff\1\7\154\uffff\1\6"
    };
    static final short[] dfa_259 = DFA.unpackEncodedString(dfa_259s);
    static final char[] dfa_260 = DFA.unpackEncodedStringToUnsignedChars(dfa_260s);
    static final char[] dfa_261 = DFA.unpackEncodedStringToUnsignedChars(dfa_261s);
    static final short[] dfa_262 = DFA.unpackEncodedString(dfa_262s);
    static final short[][] dfa_263 = unpackEncodedStringArray(dfa_263s);

    class DFA303 extends DFA {

        public DFA303(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 303;
            this.eot = dfa_30;
            this.eof = dfa_259;
            this.min = dfa_260;
            this.max = dfa_261;
            this.accept = dfa_262;
            this.special = dfa_81;
            this.transition = dfa_263;
        }
        public String getDescription() {
            return "14446:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) )* ) )";
        }
    }
    static final String dfa_264s = "\1\4\2\uffff\4\0\25\uffff\4\0\14\uffff";
    static final String dfa_265s = "\1\u00fc\2\uffff\4\0\25\uffff\4\0\14\uffff";
    static final String dfa_266s = "\1\uffff\1\1\36\uffff\1\3\2\uffff\1\4\1\7\1\11\1\13\1\5\1\2\1\6\1\12\1\10";
    static final String dfa_267s = "\3\uffff\1\0\1\1\1\2\1\3\25\uffff\1\4\1\5\1\6\1\7\14\uffff}>";
    static final String[] dfa_268s = {
            "\1\5\1\4\1\40\1\uffff\1\43\1\3\1\37\1\6\20\uffff\2\40\10\uffff\1\34\12\uffff\1\46\1\44\117\uffff\2\1\7\uffff\2\1\1\uffff\23\1\65\uffff\1\45\44\uffff\1\35\1\36",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_264 = DFA.unpackEncodedStringToUnsignedChars(dfa_264s);
    static final char[] dfa_265 = DFA.unpackEncodedStringToUnsignedChars(dfa_265s);
    static final short[] dfa_266 = DFA.unpackEncodedString(dfa_266s);
    static final short[] dfa_267 = DFA.unpackEncodedString(dfa_267s);
    static final short[][] dfa_268 = unpackEncodedStringArray(dfa_268s);

    class DFA305 extends DFA {

        public DFA305(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 305;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_264;
            this.max = dfa_265;
            this.accept = dfa_266;
            this.special = dfa_267;
            this.transition = dfa_268;
        }
        public String getDescription() {
            return "14564:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_date_7_0= ruleDate ) ) | ( (lv_map_8_0= ruleMap ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( (lv_null_10_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA305_3 = input.LA(1);

                         
                        int index305_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred544_InternalKim()) ) {s = 1;}

                        else if ( (synpred551_InternalKim()) ) {s = 39;}

                         
                        input.seek(index305_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA305_4 = input.LA(1);

                         
                        int index305_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred544_InternalKim()) ) {s = 1;}

                        else if ( (synpred545_InternalKim()) ) {s = 40;}

                        else if ( (synpred551_InternalKim()) ) {s = 39;}

                         
                        input.seek(index305_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA305_5 = input.LA(1);

                         
                        int index305_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred544_InternalKim()) ) {s = 1;}

                        else if ( (synpred545_InternalKim()) ) {s = 40;}

                        else if ( (synpred551_InternalKim()) ) {s = 39;}

                         
                        input.seek(index305_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA305_6 = input.LA(1);

                         
                        int index305_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred544_InternalKim()) ) {s = 1;}

                        else if ( (synpred545_InternalKim()) ) {s = 40;}

                        else if ( (synpred551_InternalKim()) ) {s = 39;}

                         
                        input.seek(index305_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA305_28 = input.LA(1);

                         
                        int index305_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred544_InternalKim()) ) {s = 1;}

                        else if ( (synpred552_InternalKim()) ) {s = 41;}

                         
                        input.seek(index305_28);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA305_29 = input.LA(1);

                         
                        int index305_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred546_InternalKim()) ) {s = 32;}

                        else if ( (synpred556_InternalKim()) ) {s = 42;}

                         
                        input.seek(index305_29);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA305_30 = input.LA(1);

                         
                        int index305_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred546_InternalKim()) ) {s = 32;}

                        else if ( (synpred556_InternalKim()) ) {s = 42;}

                         
                        input.seek(index305_30);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA305_31 = input.LA(1);

                         
                        int index305_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred546_InternalKim()) ) {s = 32;}

                        else if ( (synpred554_InternalKim()) ) {s = 43;}

                        else if ( (synpred556_InternalKim()) ) {s = 42;}

                         
                        input.seek(index305_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 305, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_269s = "\24\uffff";
    static final String dfa_270s = "\1\4\3\0\5\uffff\2\0\11\uffff";
    static final String dfa_271s = "\1\u00fc\3\0\5\uffff\2\0\11\uffff";
    static final String dfa_272s = "\4\uffff\1\1\6\uffff\1\2\1\3\1\4\1\5\1\6\1\11\1\12\1\7\1\10";
    static final String dfa_273s = "\1\uffff\1\0\1\1\1\2\5\uffff\1\3\1\4\11\uffff}>";
    static final String[] dfa_274s = {
            "\1\12\1\11\1\4\1\uffff\1\14\1\15\1\3\1\13\1\4\16\uffff\3\4\10\uffff\1\16\12\uffff\1\21\1\17\u00a3\uffff\1\20\44\uffff\1\1\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_269 = DFA.unpackEncodedString(dfa_269s);
    static final char[] dfa_270 = DFA.unpackEncodedStringToUnsignedChars(dfa_270s);
    static final char[] dfa_271 = DFA.unpackEncodedStringToUnsignedChars(dfa_271s);
    static final short[] dfa_272 = DFA.unpackEncodedString(dfa_272s);
    static final short[] dfa_273 = DFA.unpackEncodedString(dfa_273s);
    static final short[][] dfa_274 = unpackEncodedStringArray(dfa_274s);

    class DFA308 extends DFA {

        public DFA308(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 308;
            this.eot = dfa_269;
            this.eof = dfa_269;
            this.min = dfa_270;
            this.max = dfa_271;
            this.accept = dfa_272;
            this.special = dfa_273;
            this.transition = dfa_274;
        }
        public String getDescription() {
            return "14843:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA308_1 = input.LA(1);

                         
                        int index308_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred557_InternalKim()) ) {s = 4;}

                        else if ( (synpred566_InternalKim()) ) {s = 18;}

                         
                        input.seek(index308_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA308_2 = input.LA(1);

                         
                        int index308_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred557_InternalKim()) ) {s = 4;}

                        else if ( (synpred566_InternalKim()) ) {s = 18;}

                         
                        input.seek(index308_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA308_3 = input.LA(1);

                         
                        int index308_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred557_InternalKim()) ) {s = 4;}

                        else if ( (synpred566_InternalKim()) ) {s = 18;}

                        else if ( (synpred567_InternalKim()) ) {s = 19;}

                         
                        input.seek(index308_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA308_9 = input.LA(1);

                         
                        int index308_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred558_InternalKim()) ) {s = 11;}

                        else if ( (synpred563_InternalKim()) ) {s = 13;}

                         
                        input.seek(index308_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA308_10 = input.LA(1);

                         
                        int index308_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred558_InternalKim()) ) {s = 11;}

                        else if ( (synpred563_InternalKim()) ) {s = 13;}

                         
                        input.seek(index308_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 308, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_275s = "\34\uffff";
    static final String dfa_276s = "\3\uffff\1\4\3\uffff\2\22\2\uffff\2\4\1\20\7\uffff\1\4\2\uffff\1\4\3\uffff";
    static final String dfa_277s = "\1\4\2\12\1\31\2\uffff\1\0\2\31\1\46\1\uffff\2\31\1\4\2\12\3\uffff\1\4\1\uffff\1\31\2\12\1\31\3\46";
    static final String dfa_278s = "\1\u00fc\2\12\1\u0102\2\uffff\1\0\3\154\1\uffff\2\u00ff\1\u0103\2\u00fc\3\uffff\1\13\1\uffff\1\u00ff\2\12\4\154";
    static final String dfa_279s = "\4\uffff\1\1\1\2\4\uffff\1\4\5\uffff\1\5\1\6\1\7\1\uffff\1\3\7\uffff";
    static final String dfa_280s = "\6\uffff\1\0\25\uffff}>";
    static final String[] dfa_281s = {
            "\1\10\1\7\1\4\1\uffff\1\12\1\6\1\3\1\11\20\uffff\2\4\10\uffff\1\5\133\uffff\2\5\7\uffff\2\5\1\uffff\23\5\132\uffff\1\1\1\2",
            "\1\13",
            "\1\13",
            "\1\4\12\uffff\1\4\106\uffff\1\20\1\15\u008f\uffff\1\21\1\14\1\16\1\17\3\21",
            "",
            "",
            "\1\uffff",
            "\1\22\14\uffff\1\24\102\uffff\1\5\2\uffff\1\23",
            "\1\22\14\uffff\1\24\102\uffff\1\5\2\uffff\1\23",
            "\1\24\102\uffff\1\5\2\uffff\1\23",
            "",
            "\1\4\12\uffff\1\4\106\uffff\1\20\1\15\u0090\uffff\1\14\1\16\1\17",
            "\1\4\12\uffff\1\4\106\uffff\1\20\1\15\u0091\uffff\1\16\1\17",
            "\2\20\3\uffff\1\20\1\25\3\uffff\1\20\12\uffff\1\20\14\uffff\1\20\1\uffff\1\20\102\uffff\1\20\u0097\uffff\1\20",
            "\1\30\u00f0\uffff\1\26\1\27",
            "\1\30\u00f0\uffff\1\26\1\27",
            "",
            "",
            "",
            "\1\32\1\31\5\uffff\1\33",
            "",
            "\1\4\12\uffff\1\4\106\uffff\2\20\u0091\uffff\1\16\1\17",
            "\1\30",
            "\1\30",
            "\1\4\12\uffff\1\4\106\uffff\2\20",
            "\1\24\102\uffff\1\5\2\uffff\1\23",
            "\1\24\102\uffff\1\5\2\uffff\1\23",
            "\1\24\102\uffff\1\5\2\uffff\1\23"
    };

    static final short[] dfa_275 = DFA.unpackEncodedString(dfa_275s);
    static final short[] dfa_276 = DFA.unpackEncodedString(dfa_276s);
    static final char[] dfa_277 = DFA.unpackEncodedStringToUnsignedChars(dfa_277s);
    static final char[] dfa_278 = DFA.unpackEncodedStringToUnsignedChars(dfa_278s);
    static final short[] dfa_279 = DFA.unpackEncodedString(dfa_279s);
    static final short[] dfa_280 = DFA.unpackEncodedString(dfa_280s);
    static final short[][] dfa_281 = unpackEncodedStringArray(dfa_281s);

    class DFA310 extends DFA {

        public DFA310(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 310;
            this.eot = dfa_275;
            this.eof = dfa_276;
            this.min = dfa_277;
            this.max = dfa_278;
            this.accept = dfa_279;
            this.special = dfa_280;
            this.transition = dfa_281;
        }
        public String getDescription() {
            return "15112:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA310_6 = input.LA(1);

                         
                        int index310_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred570_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index310_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 310, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_282s = "\45\uffff";
    static final String dfa_283s = "\1\4\6\uffff\34\0\2\uffff";
    static final String dfa_284s = "\1\u00fc\6\uffff\34\0\2\uffff";
    static final String dfa_285s = "\1\uffff\1\1\42\uffff\1\2";
    static final String dfa_286s = "\7\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\2\uffff}>";
    static final String[] dfa_287s = {
            "\1\13\1\12\1\1\1\uffff\1\1\1\11\1\1\1\14\20\uffff\2\1\10\uffff\1\42\111\uffff\1\44\21\uffff\1\15\1\16\7\uffff\1\7\1\10\1\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\132\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_282 = DFA.unpackEncodedString(dfa_282s);
    static final char[] dfa_283 = DFA.unpackEncodedStringToUnsignedChars(dfa_283s);
    static final char[] dfa_284 = DFA.unpackEncodedStringToUnsignedChars(dfa_284s);
    static final short[] dfa_285 = DFA.unpackEncodedString(dfa_285s);
    static final short[] dfa_286 = DFA.unpackEncodedString(dfa_286s);
    static final short[][] dfa_287 = unpackEncodedStringArray(dfa_287s);

    class DFA319 extends DFA {

        public DFA319(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 319;
            this.eot = dfa_282;
            this.eof = dfa_282;
            this.min = dfa_283;
            this.max = dfa_284;
            this.accept = dfa_285;
            this.special = dfa_286;
            this.transition = dfa_287;
        }
        public String getDescription() {
            return "15797:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA319_7 = input.LA(1);

                         
                        int index319_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA319_8 = input.LA(1);

                         
                        int index319_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA319_9 = input.LA(1);

                         
                        int index319_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA319_10 = input.LA(1);

                         
                        int index319_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA319_11 = input.LA(1);

                         
                        int index319_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA319_12 = input.LA(1);

                         
                        int index319_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA319_13 = input.LA(1);

                         
                        int index319_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA319_14 = input.LA(1);

                         
                        int index319_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA319_15 = input.LA(1);

                         
                        int index319_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA319_16 = input.LA(1);

                         
                        int index319_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA319_17 = input.LA(1);

                         
                        int index319_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA319_18 = input.LA(1);

                         
                        int index319_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA319_19 = input.LA(1);

                         
                        int index319_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA319_20 = input.LA(1);

                         
                        int index319_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA319_21 = input.LA(1);

                         
                        int index319_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA319_22 = input.LA(1);

                         
                        int index319_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_22);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA319_23 = input.LA(1);

                         
                        int index319_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_23);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA319_24 = input.LA(1);

                         
                        int index319_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_24);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA319_25 = input.LA(1);

                         
                        int index319_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_25);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA319_26 = input.LA(1);

                         
                        int index319_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_26);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA319_27 = input.LA(1);

                         
                        int index319_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_27);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA319_28 = input.LA(1);

                         
                        int index319_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_28);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA319_29 = input.LA(1);

                         
                        int index319_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_29);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA319_30 = input.LA(1);

                         
                        int index319_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_30);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA319_31 = input.LA(1);

                         
                        int index319_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA319_32 = input.LA(1);

                         
                        int index319_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_32);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA319_33 = input.LA(1);

                         
                        int index319_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_33);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA319_34 = input.LA(1);

                         
                        int index319_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred616_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index319_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 319, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_288s = "\1\12\1\uffff\1\4\40\uffff\1\24\2\46\26\uffff\1\4\1\11\3\46\1\0";
    static final String dfa_289s = "\1\uffff\1\7\1\uffff\1\1\2\2\3\3\21\4\2\5\1\6\6\4\3\uffff\26\4\6\uffff";
    static final String dfa_290s = "\1\0\1\uffff\1\2\76\uffff\1\1}>";
    static final String[] dfa_291s = {
            "\1\10\11\uffff\1\1\6\uffff\1\1\3\uffff\3\1\1\uffff\1\3\1\uffff\1\1\4\uffff\1\1\5\uffff\1\4\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\30\uffff\1\5\1\32\1\33\1\34\1\26\1\27\1\30\1\31\u0082\uffff\1\6\1\7",
            "",
            "\1\44\1\43\3\uffff\1\42\1\37\1\45\32\uffff\1\73\133\uffff\1\46\1\47\7\uffff\1\40\1\41\1\uffff\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\132\uffff\1\35\1\36",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\6\uffff\1\1\12\uffff\1\1\3\uffff\1\1\13\uffff\3\1\5\uffff\6\1\45\uffff\1\75\2\uffff\1\74",
            "\1\1\102\uffff\1\75\2\uffff\1\74",
            "\1\1\102\uffff\1\75\2\uffff\1\74",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\77\1\76\5\uffff\1\100",
            "\1\101",
            "\1\1\102\uffff\1\75\2\uffff\1\74",
            "\1\1\102\uffff\1\75\2\uffff\1\74",
            "\1\1\102\uffff\1\75\2\uffff\1\74",
            "\1\uffff"
    };
    static final char[] dfa_288 = DFA.unpackEncodedStringToUnsignedChars(dfa_288s);
    static final short[] dfa_289 = DFA.unpackEncodedString(dfa_289s);
    static final short[] dfa_290 = DFA.unpackEncodedString(dfa_290s);
    static final short[][] dfa_291 = unpackEncodedStringArray(dfa_291s);

    class DFA326 extends DFA {

        public DFA326(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 326;
            this.eot = dfa_151;
            this.eof = dfa_152;
            this.min = dfa_288;
            this.max = dfa_154;
            this.accept = dfa_289;
            this.special = dfa_290;
            this.transition = dfa_291;
        }
        public String getDescription() {
            return "()* loopback of 15861:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA326_0 = input.LA(1);

                         
                        int index326_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA326_0==EOF||LA326_0==20||LA326_0==27||(LA326_0>=31 && LA326_0<=33)||LA326_0==37||LA326_0==42||LA326_0==54||LA326_0==56||(LA326_0>=62 && LA326_0<=67)) ) {s = 1;}

                        else if ( (LA326_0==55) ) {s = 2;}

                        else if ( LA326_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA326_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA326_0 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA326_0 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA326_0 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA326_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 8;}

                        else if ( LA326_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 9;}

                        else if ( LA326_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 10;}

                        else if ( LA326_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 11;}

                        else if ( LA326_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 12;}

                        else if ( LA326_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 13;}

                        else if ( LA326_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 14;}

                        else if ( LA326_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 15;}

                        else if ( LA326_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 16;}

                        else if ( LA326_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 17;}

                        else if ( LA326_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 18;}

                        else if ( LA326_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 19;}

                        else if ( LA326_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 20;}

                        else if ( LA326_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 21;}

                        else if ( LA326_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 22;}

                        else if ( LA326_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 23;}

                        else if ( LA326_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 24;}

                        else if ( LA326_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 25;}

                        else if ( LA326_0 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 26;}

                        else if ( LA326_0 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 27;}

                        else if ( LA326_0 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 28;}

                         
                        input.seek(index326_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA326_65 = input.LA(1);

                         
                        int index326_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred624_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 59;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index326_65);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA326_2 = input.LA(1);

                         
                        int index326_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA326_2 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 29;}

                        else if ( LA326_2 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 30;}

                        else if ( LA326_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 31;}

                        else if ( LA326_2 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 32;}

                        else if ( LA326_2 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 33;}

                        else if ( LA326_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 34;}

                        else if ( (LA326_2==RULE_LOWERCASE_ID) ) {s = 35;}

                        else if ( (LA326_2==RULE_UPPERCASE_ID) ) {s = 36;}

                        else if ( (LA326_2==RULE_LOWERCASE_DASHID) ) {s = 37;}

                        else if ( LA326_2 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 38;}

                        else if ( LA326_2 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 39;}

                        else if ( LA326_2 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 40;}

                        else if ( LA326_2 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 41;}

                        else if ( LA326_2 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 42;}

                        else if ( LA326_2 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 43;}

                        else if ( LA326_2 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 44;}

                        else if ( LA326_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 45;}

                        else if ( LA326_2 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 46;}

                        else if ( LA326_2 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 47;}

                        else if ( LA326_2 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 48;}

                        else if ( LA326_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 49;}

                        else if ( LA326_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 50;}

                        else if ( LA326_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 51;}

                        else if ( LA326_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 52;}

                        else if ( LA326_2 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 53;}

                        else if ( LA326_2 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 54;}

                        else if ( LA326_2 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 55;}

                        else if ( LA326_2 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 56;}

                        else if ( LA326_2 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 57;}

                        else if ( LA326_2 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 58;}

                        else if ( LA326_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 59;}

                         
                        input.seek(index326_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 326, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_292s = "\55\uffff";
    static final String dfa_293s = "\1\1\54\uffff";
    static final String dfa_294s = "\1\12\6\uffff\1\0\20\uffff\21\0\4\uffff";
    static final String dfa_295s = "\1\u00fc\6\uffff\1\0\20\uffff\21\0\4\uffff";
    static final String dfa_296s = "\1\uffff\1\2\52\uffff\1\1";
    static final String dfa_297s = "\7\uffff\1\0\20\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff}>";
    static final String[] dfa_298s = {
            "\1\1\11\uffff\1\1\6\uffff\1\1\3\uffff\3\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\5\uffff\1\1\5\uffff\1\1\1\7\1\1\5\uffff\6\1\10\uffff\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\30\uffff\4\1\1\45\1\46\1\47\1\50\u0082\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_292 = DFA.unpackEncodedString(dfa_292s);
    static final short[] dfa_293 = DFA.unpackEncodedString(dfa_293s);
    static final char[] dfa_294 = DFA.unpackEncodedStringToUnsignedChars(dfa_294s);
    static final char[] dfa_295 = DFA.unpackEncodedStringToUnsignedChars(dfa_295s);
    static final short[] dfa_296 = DFA.unpackEncodedString(dfa_296s);
    static final short[] dfa_297 = DFA.unpackEncodedString(dfa_297s);
    static final short[][] dfa_298 = unpackEncodedStringArray(dfa_298s);

    class DFA323 extends DFA {

        public DFA323(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 323;
            this.eot = dfa_292;
            this.eof = dfa_293;
            this.min = dfa_294;
            this.max = dfa_295;
            this.accept = dfa_296;
            this.special = dfa_297;
            this.transition = dfa_298;
        }
        public String getDescription() {
            return "()* loopback of 16061:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA323_7 = input.LA(1);

                         
                        int index323_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA323_24 = input.LA(1);

                         
                        int index323_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_24);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA323_25 = input.LA(1);

                         
                        int index323_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_25);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA323_26 = input.LA(1);

                         
                        int index323_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_26);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA323_27 = input.LA(1);

                         
                        int index323_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_27);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA323_28 = input.LA(1);

                         
                        int index323_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_28);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA323_29 = input.LA(1);

                         
                        int index323_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_29);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA323_30 = input.LA(1);

                         
                        int index323_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_30);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA323_31 = input.LA(1);

                         
                        int index323_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_31);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA323_32 = input.LA(1);

                         
                        int index323_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_32);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA323_33 = input.LA(1);

                         
                        int index323_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_33);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA323_34 = input.LA(1);

                         
                        int index323_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_34);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA323_35 = input.LA(1);

                         
                        int index323_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_35);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA323_36 = input.LA(1);

                         
                        int index323_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_36);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA323_37 = input.LA(1);

                         
                        int index323_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_37);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA323_38 = input.LA(1);

                         
                        int index323_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_38);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA323_39 = input.LA(1);

                         
                        int index323_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_39);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA323_40 = input.LA(1);

                         
                        int index323_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred623_InternalKim()) ) {s = 44;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index323_40);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 323, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA327 extends DFA {

        public DFA327(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 327;
            this.eot = dfa_282;
            this.eof = dfa_282;
            this.min = dfa_283;
            this.max = dfa_284;
            this.accept = dfa_285;
            this.special = dfa_286;
            this.transition = dfa_287;
        }
        public String getDescription() {
            return "16205:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA327_7 = input.LA(1);

                         
                        int index327_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA327_8 = input.LA(1);

                         
                        int index327_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA327_9 = input.LA(1);

                         
                        int index327_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA327_10 = input.LA(1);

                         
                        int index327_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA327_11 = input.LA(1);

                         
                        int index327_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA327_12 = input.LA(1);

                         
                        int index327_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA327_13 = input.LA(1);

                         
                        int index327_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA327_14 = input.LA(1);

                         
                        int index327_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA327_15 = input.LA(1);

                         
                        int index327_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA327_16 = input.LA(1);

                         
                        int index327_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA327_17 = input.LA(1);

                         
                        int index327_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA327_18 = input.LA(1);

                         
                        int index327_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA327_19 = input.LA(1);

                         
                        int index327_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA327_20 = input.LA(1);

                         
                        int index327_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA327_21 = input.LA(1);

                         
                        int index327_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA327_22 = input.LA(1);

                         
                        int index327_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_22);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA327_23 = input.LA(1);

                         
                        int index327_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_23);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA327_24 = input.LA(1);

                         
                        int index327_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_24);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA327_25 = input.LA(1);

                         
                        int index327_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_25);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA327_26 = input.LA(1);

                         
                        int index327_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_26);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA327_27 = input.LA(1);

                         
                        int index327_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_27);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA327_28 = input.LA(1);

                         
                        int index327_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_28);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA327_29 = input.LA(1);

                         
                        int index327_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_29);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA327_30 = input.LA(1);

                         
                        int index327_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_30);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA327_31 = input.LA(1);

                         
                        int index327_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA327_32 = input.LA(1);

                         
                        int index327_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_32);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA327_33 = input.LA(1);

                         
                        int index327_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_33);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA327_34 = input.LA(1);

                         
                        int index327_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred629_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index327_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 327, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_299s = "\1\1\31\uffff";
    static final String dfa_300s = "\1\12\31\uffff";
    static final String dfa_301s = "\1\u00fc\31\uffff";
    static final String dfa_302s = "\1\uffff\1\5\1\1\2\2\3\3\22\4";
    static final String dfa_303s = "\1\0\31\uffff}>";
    static final String[] dfa_304s = {
            "\1\7\20\uffff\1\1\7\uffff\1\2\5\uffff\1\1\2\uffff\1\1\3\uffff\1\3\6\uffff\1\24\24\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\25\30\uffff\1\4\3\uffff\1\26\1\27\1\30\1\31\u0082\uffff\1\5\1\6",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_299 = DFA.unpackEncodedString(dfa_299s);
    static final char[] dfa_300 = DFA.unpackEncodedStringToUnsignedChars(dfa_300s);
    static final char[] dfa_301 = DFA.unpackEncodedStringToUnsignedChars(dfa_301s);
    static final short[] dfa_302 = DFA.unpackEncodedString(dfa_302s);
    static final short[] dfa_303 = DFA.unpackEncodedString(dfa_303s);
    static final short[][] dfa_304 = unpackEncodedStringArray(dfa_304s);

    class DFA332 extends DFA {

        public DFA332(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 332;
            this.eot = dfa_51;
            this.eof = dfa_299;
            this.min = dfa_300;
            this.max = dfa_301;
            this.accept = dfa_302;
            this.special = dfa_303;
            this.transition = dfa_304;
        }
        public String getDescription() {
            return "()* loopback of 16269:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA332_0 = input.LA(1);

                         
                        int index332_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA332_0==EOF||LA332_0==27||LA332_0==41||LA332_0==44) ) {s = 1;}

                        else if ( LA332_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA332_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA332_0 == 113 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA332_0 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA332_0 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA332_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA332_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 8;}

                        else if ( LA332_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 9;}

                        else if ( LA332_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 10;}

                        else if ( LA332_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 11;}

                        else if ( LA332_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 12;}

                        else if ( LA332_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 13;}

                        else if ( LA332_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 14;}

                        else if ( LA332_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 15;}

                        else if ( LA332_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 16;}

                        else if ( LA332_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 17;}

                        else if ( LA332_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 18;}

                        else if ( LA332_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 19;}

                        else if ( LA332_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 20;}

                        else if ( LA332_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 21;}

                        else if ( LA332_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 22;}

                        else if ( LA332_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 23;}

                        else if ( LA332_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 24;}

                        else if ( LA332_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 25;}

                         
                        input.seek(index332_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 332, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_305s = "\36\uffff";
    static final String dfa_306s = "\1\1\35\uffff";
    static final String dfa_307s = "\1\12\12\uffff\22\0\1\uffff";
    static final String dfa_308s = "\1\u00fc\12\uffff\22\0\1\uffff";
    static final String dfa_309s = "\1\uffff\1\2\33\uffff\1\1";
    static final String dfa_310s = "\13\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\uffff}>";
    static final String[] dfa_311s = {
            "\1\1\20\uffff\1\1\7\uffff\1\1\5\uffff\1\1\2\uffff\1\1\3\uffff\1\1\6\uffff\1\27\24\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\30\30\uffff\1\1\3\uffff\1\31\1\32\1\33\1\34\u0082\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_305 = DFA.unpackEncodedString(dfa_305s);
    static final short[] dfa_306 = DFA.unpackEncodedString(dfa_306s);
    static final char[] dfa_307 = DFA.unpackEncodedStringToUnsignedChars(dfa_307s);
    static final char[] dfa_308 = DFA.unpackEncodedStringToUnsignedChars(dfa_308s);
    static final short[] dfa_309 = DFA.unpackEncodedString(dfa_309s);
    static final short[] dfa_310 = DFA.unpackEncodedString(dfa_310s);
    static final short[][] dfa_311 = unpackEncodedStringArray(dfa_311s);

    class DFA331 extends DFA {

        public DFA331(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 331;
            this.eot = dfa_305;
            this.eof = dfa_306;
            this.min = dfa_307;
            this.max = dfa_308;
            this.accept = dfa_309;
            this.special = dfa_310;
            this.transition = dfa_311;
        }
        public String getDescription() {
            return "()* loopback of 16469:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA331_11 = input.LA(1);

                         
                        int index331_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA331_12 = input.LA(1);

                         
                        int index331_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA331_13 = input.LA(1);

                         
                        int index331_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA331_14 = input.LA(1);

                         
                        int index331_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA331_15 = input.LA(1);

                         
                        int index331_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA331_16 = input.LA(1);

                         
                        int index331_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA331_17 = input.LA(1);

                         
                        int index331_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_17);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA331_18 = input.LA(1);

                         
                        int index331_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_18);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA331_19 = input.LA(1);

                         
                        int index331_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_19);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA331_20 = input.LA(1);

                         
                        int index331_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_20);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA331_21 = input.LA(1);

                         
                        int index331_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_21);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA331_22 = input.LA(1);

                         
                        int index331_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_22);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA331_23 = input.LA(1);

                         
                        int index331_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_23);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA331_24 = input.LA(1);

                         
                        int index331_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_24);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA331_25 = input.LA(1);

                         
                        int index331_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_25);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA331_26 = input.LA(1);

                         
                        int index331_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_26);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA331_27 = input.LA(1);

                         
                        int index331_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_27);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA331_28 = input.LA(1);

                         
                        int index331_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred636_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index331_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 331, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_312s = "\172\uffff";
    static final String dfa_313s = "\1\6\171\uffff";
    static final String dfa_314s = "\1\4\5\0\164\uffff";
    static final String dfa_315s = "\1\u0103\5\0\164\uffff";
    static final String dfa_316s = "\6\uffff\1\2\162\uffff\1\1";
    static final String dfa_317s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\164\uffff}>";
    static final String[] dfa_318s = {
            "\1\3\1\2\1\6\1\uffff\1\6\1\1\3\6\1\uffff\1\4\5\uffff\1\6\4\uffff\1\6\1\uffff\7\6\1\uffff\1\6\1\uffff\1\6\1\5\1\uffff\3\6\1\uffff\2\6\2\uffff\5\6\1\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\15\6\17\uffff\1\6\2\uffff\1\6\3\uffff\1\6\1\uffff\10\6\11\uffff\2\6\6\uffff\3\6\1\uffff\23\6\14\uffff\2\6\2\uffff\3\6\1\uffff\11\6\2\uffff\13\6\6\uffff\1\6\4\uffff\1\6\44\uffff\2\6\6\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_312 = DFA.unpackEncodedString(dfa_312s);
    static final short[] dfa_313 = DFA.unpackEncodedString(dfa_313s);
    static final char[] dfa_314 = DFA.unpackEncodedStringToUnsignedChars(dfa_314s);
    static final char[] dfa_315 = DFA.unpackEncodedStringToUnsignedChars(dfa_315s);
    static final short[] dfa_316 = DFA.unpackEncodedString(dfa_316s);
    static final short[] dfa_317 = DFA.unpackEncodedString(dfa_317s);
    static final short[][] dfa_318 = unpackEncodedStringArray(dfa_318s);

    class DFA338 extends DFA {

        public DFA338(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 338;
            this.eot = dfa_312;
            this.eof = dfa_313;
            this.min = dfa_314;
            this.max = dfa_315;
            this.accept = dfa_316;
            this.special = dfa_317;
            this.transition = dfa_318;
        }
        public String getDescription() {
            return "16871:3: ( (lv_root_1_0= ruleUnitElement ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA338_1 = input.LA(1);

                         
                        int index338_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred650_InternalKim()) ) {s = 121;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index338_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA338_2 = input.LA(1);

                         
                        int index338_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred650_InternalKim()) ) {s = 121;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index338_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA338_3 = input.LA(1);

                         
                        int index338_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred650_InternalKim()) ) {s = 121;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index338_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA338_4 = input.LA(1);

                         
                        int index338_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred650_InternalKim()) ) {s = 121;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index338_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA338_5 = input.LA(1);

                         
                        int index338_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred650_InternalKim()) ) {s = 121;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index338_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 338, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA462 extends DFA {

        public DFA462(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 462;
            this.eot = dfa_113;
            this.eof = dfa_113;
            this.min = dfa_114;
            this.max = dfa_115;
            this.accept = dfa_116;
            this.special = dfa_117;
            this.transition = dfa_118;
        }
        public String getDescription() {
            return "5814:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
    static final String dfa_319s = "\1\4\2\31\1\46\1\uffff\1\31\1\uffff\2\4\3\46";
    static final String dfa_320s = "\1\u00fc\3\154\1\uffff\1\31\1\uffff\2\13\3\154";
    static final String[] dfa_321s = {
            "\1\2\1\1\1\5\1\uffff\3\6\1\3\20\uffff\2\6\10\uffff\1\6\101\uffff\1\4\7\uffff\1\6\21\uffff\2\6\7\uffff\2\6\1\uffff\23\6\132\uffff\2\6",
            "\1\6\14\uffff\1\6\102\uffff\1\10\2\uffff\1\7",
            "\1\6\14\uffff\1\6\102\uffff\1\10\2\uffff\1\7",
            "\1\6\102\uffff\1\10\2\uffff\1\7",
            "",
            "\1\6",
            "",
            "\1\12\1\11\5\uffff\1\13",
            "\2\4\3\uffff\1\6\1\uffff\1\4",
            "\1\6\102\uffff\1\10\2\uffff\1\7",
            "\1\6\102\uffff\1\10\2\uffff\1\7",
            "\1\6\102\uffff\1\10\2\uffff\1\7"
    };
    static final char[] dfa_319 = DFA.unpackEncodedStringToUnsignedChars(dfa_319s);
    static final char[] dfa_320 = DFA.unpackEncodedStringToUnsignedChars(dfa_320s);
    static final short[][] dfa_321 = unpackEncodedStringArray(dfa_321s);

    class DFA487 extends DFA {

        public DFA487(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 487;
            this.eot = dfa_37;
            this.eof = dfa_170;
            this.min = dfa_319;
            this.max = dfa_320;
            this.accept = dfa_173;
            this.special = dfa_123;
            this.transition = dfa_321;
        }
        public String getDescription() {
            return "7262:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )";
        }
    }
    static final String dfa_322s = "\1\4\3\151\4\uffff\1\4\3\151";
    static final String[] dfa_323s = {
            "\1\2\1\1\1\5\4\uffff\1\3\134\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10",
            "",
            "",
            "",
            "",
            "\1\12\1\11\5\uffff\1\13",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10"
    };
    static final char[] dfa_322 = DFA.unpackEncodedStringToUnsignedChars(dfa_322s);
    static final short[][] dfa_323 = unpackEncodedStringArray(dfa_323s);

    class DFA486 extends DFA {

        public DFA486(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 486;
            this.eot = dfa_37;
            this.eof = dfa_175;
            this.min = dfa_322;
            this.max = dfa_40;
            this.accept = dfa_177;
            this.special = dfa_178;
            this.transition = dfa_323;
        }
        public String getDescription() {
            return "7265:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA486_1 = input.LA(1);

                         
                        int index486_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA486_1==105||LA486_1==108) ) {s = 4;}

                        else if ( (synpred288_InternalKim()) ) {s = 6;}

                        else if ( (synpred289_InternalKim()) ) {s = 7;}

                         
                        input.seek(index486_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 486, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_324s = "\1\105\14\uffff";
    static final String dfa_325s = "\1\u0081\14\uffff";
    static final String[] dfa_326s = {
            "\1\3\34\uffff\1\4\26\uffff\1\2\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_324 = DFA.unpackEncodedStringToUnsignedChars(dfa_324s);
    static final char[] dfa_325 = DFA.unpackEncodedStringToUnsignedChars(dfa_325s);
    static final short[][] dfa_326 = unpackEncodedStringArray(dfa_326s);

    class DFA497 extends DFA {

        public DFA497(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 497;
            this.eot = dfa_193;
            this.eof = dfa_194;
            this.min = dfa_324;
            this.max = dfa_325;
            this.accept = dfa_197;
            this.special = dfa_198;
            this.transition = dfa_326;
        }
        public String getDescription() {
            return "()* loopback of 7559:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( (lv_during_24_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'within' ( ( (lv_distributedWithinInherency_26_0= 'each' ) )? ( (lv_context_27_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'linking' ( (lv_relationshipSource_29_0= ruleSimpleConceptDeclaration ) ) otherlv_30= 'to' ( (lv_relationshipTarget_31_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA497_0 = input.LA(1);

                         
                        int index497_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA497_0==EOF) ) {s = 1;}

                        else if ( LA497_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA497_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA497_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA497_0 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA497_0 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA497_0 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA497_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA497_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA497_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                        else if ( LA497_0 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {s = 11;}

                        else if ( LA497_0 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {s = 12;}

                         
                        input.seek(index497_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 497, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000001E08002L,0x0000200080000FC0L,0x40001FF100000000L,0x03FFFFFFFC380000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000E08000L,0x0000000000000FC0L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000E00000L,0x0000000000000FC0L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x000600403C009F70L,0x0001010000000000L,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000001008000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0006004038001F70L,0x0000000000000000L,0x0000000000000000L,0x1800000000400000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x000000000A000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000A70L,0x0000010000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0xC1C00423C0000042L,0x000000000000000FL});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0xC1C00423C8000042L,0x000000000000000FL});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0xC1C00423C0000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x000600403C009F70L,0x0011010000000000L,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0xC1C0042388000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000970L,0x0000010000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0xC1C0042308000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000C00000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0xC1C0042000000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000830L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000004400000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000018000000020L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000020008000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x002701403C009F70L,0x000101000014F000L,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0xC1C0040000000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000380000000002L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x000701403C009F70L,0x000101000014F000L,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000C01000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000C00000000002L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x002F01403C009F70L,0x000101000014F000L,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0xC1C0000008000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0xC1C0000000000000L,0x000000000000000FL});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0E0600403C009F70L,0x0001010000000000L,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0xC1C0004000000000L,0x000000000000000FL});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0xC1C1004000000000L,0x000000000000000FL});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x3000000000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0002005038001F70L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000300008000002L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0006004038001F70L,0x0000000000000010L,0x0000000000000000L,0x1800000000400000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0006004038001F72L,0x0000000000000000L,0x0000000000000000L,0x1800000000400000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0001000000000002L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000230L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000300000000002L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0001300000000002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000E08000L,0x000000000E000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000E00000L,0x000000000E000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0001040080100040L,0x000000DA60000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0001040080100000L,0x000000DA60000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000014000000830L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0001040088100000L,0x000000DA60000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x000600403C009F70L,0x0001010100000000L,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0001040080100830L,0x000000DA60000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0001040080100000L,0x000000FA60000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000040000100000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000C30L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0020000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0020000000000002L,0x0000180000000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000A20L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000008000L,0x0000200000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x00060440BC009F70L,0x0001010000000000L,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0xC1C60440FC009F72L,0x0001C1000000000FL,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0xC1C60440FC009F72L,0x000181000000000FL,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0xC1C60440BC009F72L,0x000101000000000FL,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x00060440BC009F72L,0x0001010000000000L,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0081000800000402L,0x01FE000001FFF000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0081014800004630L,0x01FE080001FFF000L,0x0000000000000000L,0x1800000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000004000000002L,0x001C000000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000004000000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x000600403C009F72L,0xFE01010400000020L,0x00000001FFFFD80FL,0x1800000000400000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000002L,0xFE00000400000020L,0x0000000000000003L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x1000000000000000L,0x1C00000000000000L,0x00000000000003F0L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000008000L,0x0000400080000000L,0x40001FF100000000L,0x03FFFFFFFC380000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000A30L,0x0000000000000000L,0x000000000000180CL});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000001650L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000002010L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000001000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0080000000000002L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x000600403C009F72L,0x0001010000000000L,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x1000000080000000L,0x1C00000000000000L,0x00000070000003F0L,0x0300000000000000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0300000000000000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000008000L,0x0000000080000000L,0x40001FF100000000L,0x03FFFFFFFC380000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000008200L,0x0000000100000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000200L,0x0000000100000000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000040000004872L,0x0000000000000000L,0x3FEE600000000000L,0x00000000000207FFL});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000040000004872L,0x0000000000000000L,0x3FEE600000002000L,0x00000000000207FFL});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000001440L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x000600403C009F70L,0x0001010000000000L,0x00018001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x000600403C009F70L,0x0001010000000000L,0x00010001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000040008004872L,0x0000000000000000L,0x3FEE600600000000L,0x00000000000207FFL});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000040008004872L,0x0000000000000000L,0x3FEE600000000000L,0x00000000000207FFL});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x000600403C009F70L,0x0001010000000000L,0x00100001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0010000100000000L,0x0000000000380000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0001000008000000L,0x0000000000000000L,0x8000000000000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0001000008000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000041008004872L,0x0000000000000000L,0x3FEE600000000000L,0x00000000000207FFL});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000000L,0x0000800200000000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000004000000200L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x000600403C009F70L,0x0001010000000000L,0x00000001FFFFD80CL,0x1800000000403800L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x000000000000C000L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x000600403C009F70L,0x0001010000000000L,0x00000003FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x000602403C009F70L,0x0001010000000000L,0x00000001FFFFD80CL,0x1800000000400000L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0006024038001F70L,0x0000000000000000L,0x0000000000000000L,0x1800000000400000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000000870L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000004030001440L,0x0000000000000000L,0x0000000000000000L,0x1800000000400000L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x000701403C009F70L,0x000101000014F000L,0x00000001FFFFDC0CL,0x1800000000400000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000008000000L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0A00000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001800000L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000000000830L,0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0081100800000402L,0x01E2000001FFF000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0081114800004630L,0x01FE080001FFF000L,0x0000000000000000L,0x1800000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0081114800004630L,0x01E2080001FFF000L,0x0000000000000000L,0x1800000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000000000000860L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0000034000004230L,0x0000080000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000010000000002L,0x0000080000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000004000004230L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L,0x0000000000000000L,0xE000000000000000L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L,0x0000000000000000L,0xC000000000000000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0xC000000000000000L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000000000000000L,0x0000180000000000L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L,0x0000000000000007L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000000000402L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000000002L,0x0000180000000000L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000000004820L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000000000032L,0x0000100000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000000000000032L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x0000000000000032L});
    public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x0000000000E00002L});
    public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x0000000000000832L});
    public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
    public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x0000000080000002L,0x0000007000000000L});
    public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x0000000080000832L,0x0000005000000000L});
    public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0000000080000002L,0x0000005000000000L});
    public static final BitSet FOLLOW_191 = new BitSet(new long[]{0xC1C0000040000042L,0x0000C0000000000FL});
    public static final BitSet FOLLOW_192 = new BitSet(new long[]{0xC1C0000040000002L,0x0000C0000000000FL});
    public static final BitSet FOLLOW_193 = new BitSet(new long[]{0xC1C0000048000002L,0x000080000000000FL});
    public static final BitSet FOLLOW_194 = new BitSet(new long[]{0xC1C0000000000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_195 = new BitSet(new long[]{0x0000014000004230L,0x0000080000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_196 = new BitSet(new long[]{0x0080000000000002L,0x01E0000001FFF000L});
    public static final BitSet FOLLOW_197 = new BitSet(new long[]{0x0000000000000002L,0x000C000000000000L});
    public static final BitSet FOLLOW_198 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0300000000000000L});
    public static final BitSet FOLLOW_199 = new BitSet(new long[]{0x0000000008000002L,0x0000000000000000L,0x0000000600000000L});
    public static final BitSet FOLLOW_200 = new BitSet(new long[]{0x0000001008000002L});

}
